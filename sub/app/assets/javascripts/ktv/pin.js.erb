(function ($) {
var _gaq = [];

var im20consts = function (a) {
        var b = im20consts.constData[a];
        if (b) {
            return b
        } else {
            alert("im20consts, no const named:" + a);
            return ""
        }
    };
var im20uri = function () {
        if (arguments.length == 0) {
            alert("im20consts uri, need 1 arg at least!")
        }
        var b = im20consts(arguments[0]);
        for (var a = 1; a < arguments.length; a++) {
            b = b.replace(/{[a-z]+}/i, arguments[a])
        }
        return b
    };
im20consts.constData = eval({
    INDEX_AND_CHANNEL_PAGE_LIMIT: "10",
    FILTER_LOGIN_USER_ID: "loginUserId",
    FILTER_LOGIN_USER: "loginUser",
    FILTER_LOGIN_USER_PROFILE: "loginUserProfile",
    FILTER_LOGIN_USER_TYPE: "loginUserType",
    FILTER_BACKEND_LOGIN_USER: "backendUserName",
    JAVASCRIPT_CONSTS_NAME: "im20consts",
    BOARD_PIC_SHARE_TYPE_SHARE: "1",
    BOARD_PIC_SHARE_TYPE_QUESTION: "2",
    BOARD_PIC_COMMENT_QUESTION_TYPE_O: "1",
    BOARD_PIC_COMMENT_QUESTION_TYPE_X: "2",
    BOARD_PIC_COMMENT_QUESTION_TYPE_N: "3",
    BOARD_PIC_COMMENT_LIMIT: "5",
    PAGE_LEFTRIGHT_NUNMBER: "2",
    REGIST_TYPE_STATION_LAND: "5",
    REGIST_TYPE_STATION_SKIP: "6",
    OPENPLATFORM_COPY_LINK: "128",
    USER_SHARE: "7",
    USER_FIND_EMAIL_COUNT: "3",
    USER_FIND_EMAIL_DATA: "86400",
    USER_FIND_EMAIL_EXPIRED: "24",
    SEARCH_TYPE_HOT: "1",
    CATALOG_DEFAULT: "0",
    FORM_USER_NAME_MAX_LENGHT: "30",
    POSITION_LEFT: "1",
    POSITION_RIGHT: "2",
    TAG_FROM_OP: "3",
    TAG_UNOPERATE: "0",
    TAG_OPERATEED: "1",
    TAG_QUERY_NOT_NEED_ROOT: "0",
    TAG_QUERY_NEED_ROOT: "1",
    TAG_HIGH_LIGHT: "1",
    BOARD_PIC_QUERY_SCOPE_ALL: "0",
    BOARD_PIC_QUERY_SCOPE_INTEREST: "1",
    BOARD_PIC_QUERY_SCOPE_RECOMMENDATION: "2",
    BOARD_PIC_QUERY_PAGE_SOURCE_NO_CARE: "0",
    BOARD_PIC_QUERY_PAGE_SOURCE_INTEREST: "1",
    BOARD_PIC_QUERY_PAGE_SOURCE_NEW: "2",
    BOARD_PIC_QUERY_PAGE_SOURCE_HOT: "3",
    BOARD_PIC_QUERY_PAGE_SOURCE_TAG: "4",
    BOARD_PIC_QUERY_PAGE_SOURCE_TAG_SEARCH: "5",
    BOARD_PIC_QUERY_ONLY_FOR_COMMODITY: "1",
    BOARD_PIC_QUERY_SCOPE_INTEREST_LIMIT_MAXIMUM: "1000",
    NOTIFICATION_CATALOG_COMMENT: "1",
    NOTIFICATION_CATALOG_AT: "2",
    NOTIFICATION_CATALOG_FANS: "3",
    NOTIFICATION_CATALOG_MESSAGE: "4",
    NOTIFICATION_CATALOG_SYSTEM: "5",
    NOTIFICATION_CATALOG_APP: "6",
    NOTIFICATION_COMMENT: "1",
    NOTIFICATION_REPLY_COMMENT: "10",
    ENCRYPTKEY: "a2sdas1*)(fyd9",
    DOMAIN: "zhimei.com",
    DOMAIN_URI: "http://www.zhimei.com",
    IMAGE_PREFIX: "",
    IMAGE_PREFIX_ORIGINAL: "",
    CSS_PREFIX: "/",
    IS_PRODUCTION: "true",
    FAV_ICON: "/favicon.ico",
    SHARE_DOMAIN_LOGO: "/r11839/images/logo.gif",
    PIN_REGIST_PAGE: "/pin/register",
    PIN_LOGIN_PAGE: "/pin/login",
    PIN_LOGIN_BIND: "/pin/bind",
    PIN_SUCCESS: "/pin/success",
    LOGIN_USER_STATION: "/users/station",
    URI_FLASH_CROSS_DOMAIN: "/crossdomain.xml",
    URI_JAVASCRIPT_CONSTS: "/consts.js",
    URI_JAVASCRIPT_CONSTS_CACHED: "/consts-cached.js",
    URI_AJAX_NEED_LOGIN: "/ajaxLoginFailed",
    URI_AJAX_EXCEPTION: "/ajaxException",
    URI_JAVASCRIPT_CONSTS_JSP: "/consts",
    URI_USER_AJAX: "/users/{userId}",
    URI_BACKEND_USER_AJAX: "/userAjax/{userId}",
    URI_LOGIN: "/login",
    URI_AJAX_LOGIN: "/ajaxlogin",
    URI_LOGIN_IS_NEED_CAPTCHA: "/ajax/logincheck",
    URI_LOGOUT: "/logout",
    URI_REGIST: "/regist",
    URI_SKIP_REGIST: "/skip/regist",
    URI_AJAX_REGIST: "/regist/ajax",
    URI_SURPRISE_INVITE: "/sInvite/{eid}/{uid}",
    URI_ACTIVE: "/active/{link}",
    URI_ACTIVE_Mail: "/activeMail/{eid}",
    URI_USER_BINDING: "/login/binding",
    URI_REGIST_EMAIL: "/regist/email",
    URI_REGIST_NICKNAME: "/regist/nickname",
    URI_KAPTCHA: "/kaptcha.jpg",
    URI_CAPTCHA: "/captcha/image.html",
    URI_CAPTCHA_CHECK: "/captcha/check",
    URI_USER: "/users/{userId}",
    URI_USER_INFO_UPDATE: "/users/info",
    URI_USER_PASSWORD_UPDATE: "/users/password",
    URI_USER_FIND_PASSWORD: "/users/findPassword",
    URI_USER_AJAX_FIND_PASSWORD: "/users/ajaxfindpassword",
    URI_USER_FIND_PASSWORD_UPDATE: "/users/findPassword/update",
    URI_USER_FIND_PASSWORD_ENTRY: "/users/findPassword/{param}",
    URI_USER_OPEN_SYNC: "/users/sync",
    PROFILE_INVITE_PAGE: "/reg/{inviteurl}",
    USER_SHARE_ENTRY: "/share/entry/{stat}",
    URI_USER_CONCERNS_DEL: "/users/concerns/delete",
    URI_USER_CONCERNS_POST: "/users/concerns/post",
    URI_USER_PROFILE_WIDGET: "/widget/users/{userId}",
    URI_USER_PROFILE_WIDGET_BOARD: "/widget/users/{userId}/{boardId}",
    URI_USER_PROFILE_WIDGET_MEDIUM: "/widget/profilem/{userId}",
    URI_USER_PROFILE_WIDGET_BAR: "/widget/profilebar/{userId}",
    URI_USER_PROFILE_WIDGET_BAR_BOARD: "/widget/profilebar/{userId}/{boardId}",
    URI_BOARD_WIDGET_BAR: "/widget/board/{boardId}",
    URI_BOARD_CATEGORY_LIST: "/boardcategory",
    URI_BOARD: "/board/{userId}/{boardId}",
    URI_BOARD_USER_AJAX: "/board/users/ajax/{boardId}",
    URI_BOARD_SHARE: "/board/share/{userId}/{boardId}/{boardPicId}",
    URI_BOARD_SHARE_AJAX: "/board/share/{userId}/{boardId}/{reshareId}/{page}",
    URI_GET_BOARD_SHARE_AJAX: "/singleBoard/{reshareId}",
    URI_BOARD_LIST_AJAX: "/boardAjax/{boardUserId}/list",
    URI_BOARD_POSITION_AJAX: "/boardAjax/position",
    URI_DELETE_BOARD_AJAX: "/boardAjax/{boardId}",
    URI_SAVE_BOARD_AJAX: "/saveBoardAjax/{boardId}",
    URI_UPDATE_BOARD_CATEGORY: "/updateBoardCategoryAjax/{boardId}",
    URI_BOARD_MANAGER_AJAX: "/boardManagerAjax/{boardId}",
    URI_BOARD_PIC_LIST: "/board/{userId}/{boardId}/{page}",
    URI_BOARDS_LIST: "/bds/{userId}",
    URI_USER_SHARES_LIST_AJAX: "/userSharesListAjax/{userId}/{order}/{page}",
    URI_BOARD_LIST_OF_LOGINUSER: "/boards",
    URI_BOARD_LIST: "/boards/{userId}",
    URI_ADD_BOARD: "/board/{userId}",
    URI_BOARD_PIC_AJAX: "/shareAjax/{reshareId}",
    URI_BOARD_PIC: "/share/{reshareId}",
    URI_SHARE_AJAX: "/share/{reshareId}/ajax",
    URI_SHARE_BOARD_PIC: "/share/",
    URI_RESHARE_INTEREST_TAGS: "/reshare/interest_tags/{shareId}",
    URI_PIN_BOARD_PIC: "/pin/board",
    URI_PIN_BOARD_PIC_LIST: "/pin/board/{type}",
    URI_PIN_HELP_MULTI: "/pin/help/multi",
    URI_BOARD_PIC_RESHARE: "/reshare/{fromReshareId}",
    URI_RESHARE_UPDATE: "/reshare/{fromReshareId}/update",
    URI_ADD_RESHARE_COMMENT: "/comment/{reshareId}",
    URI_ADD_RESHARE_COMMENT_AGREE: "/comment/{reshareCommentId}/agree",
    URI_GRAPHICS_PROFILE: "/graphics/profile",
    URI_GRAPHICS_SHARE: "/graphics/share",
    URI_GRAPHICS_TASK: "/graphics/task",
    URI_GRAPHICS_GOODS: "/graphics/goods",
    URI_GRAPHICS_UPLOAD: "/graphics/upload",
    URI_RENREN_LOGIN: "/login/renren",
    URI_RENREN_GET: "/login/renren/return",
    URI_RENREN_GET_FRIEND: "/login/renren/friends",
    URI_SINA_LOGIN: "/login/sina",
    URI_SINA_GET: "/login/sina/return",
    URI_SINA_SCRATCH_FRIEND: "/scratch/sina/friend",
    URI_SINA_FRIEND_TWEETS: "/sina/friend/tweets",
    URI_QQT_LOGIN: "/login/qqt",
    URI_QQT_GET: "/login/qqt/return",
    URI_QZONE_LOGIN: "/login/qzone",
    URI_QZONE_GET: "/login/qzone/return",
    URI_TAOBAO_LOGIN: "/login/taobao",
    URI_TAOBAO_GET: "/login/taobao/return",
    URI_DOUBAN_LOGIN: "/login/douban",
    URI_DOUBAN_GET: "/login/douban/return",
    URI_SNS_CHECK: "/sns/check",
    URI_QQT_SEND_T: "/qqt/send/t",
    URI_GET_USER_SYNC: "/users/sync/{userId}",
    URI_USER_SYNC: "/users/sync",
    URI_USER_SHARE: "/users/share",
    URI_FANS_FRIENDS: "/friends/{userId}/{page}",
    URI_FANS_FRIENDS_AJAX: "/friendsAjax/{userId}",
    URI_FANS_FOLLOWEDS_AJAX: "/followedsAjax/{userId}",
    URI_FANS_EXIT_MANAGE_AJAX: "/exitmanage/{boardUserId}/{boardId}",
    URI_FANS_FOLLOWED_USER: "/follow/{userId}/{page}",
    URI_FANS_USER_FANS: "/fans/{userId}/{page}",
    URI_FANS_ADD_FRIEND: "/fansfriend/{userId}",
    URI_FANS_USER_FIND: "/fansFind",
    URI_FANS_FRIENDS_NICKNAME: "/friend/{userId}/nickname",
    URI_FOLLOWED_USER_FIND: "/followedFind",
    URI_FRIEND_USER_FIND: "/friendFind",
    URI_FANS_BOARD_FANS: "/fans/{boardId}/{boardUserId}",
    URI_FANS_ADD_FOLLOW_TEACHER: "/teachers/{followedUserId}/follow",
    URI_FANS_UNFOLLOW_TEACHER: "/teachers/{followedUserId}/unfollow",
    URI_FANS_ADD_FOLLOW_USER: "/users/{followedUserId}/follow",
    URI_FANS_UNFOLLOW_USER: "/users/{followedUserId}/unfollow",
    URI_FANS_ADD_FOLLOW_BOARD: "/board/{boardUserId}/{boardId}/follow",
    URI_FANS_ADD_FOLLOW_BOARD_WITHOUT_USER: "/board/{boardId}/follow",
    URI_FANS_UNFOLLOW_BOARD: "/board/{boardUserId}/{boardId}/unfollow",
    URI_FANS_UNFOLLOW_BOARD_WITHOUT_USER: "/board/{boardId}/unfollow",
    URI_ADD_RESHARE_COMMENT_LIST: "/comment/{reshareId}/{page}",
    URI_ADD_RESHARE_COMMENT_LIST_B: "/comments/{reshareId}/{page}",
    URI_COMMENT_NOTIFICATION: "/notification/comment",
    URI_COMMENT_NOTIFICATION_PAGE: "/notification/comment/{pageNo}",
    URI_NOTIFICATION_CLEAR_ALL_UNREAD: "/notification/clear_all_unread",
    URI_NOTIFICATION: "/notification/{catalog}",
    URI_AT_NOTIFICATION: "/notification/at",
    URI_AT_NOTIFICATION_AJAX: "/notification/at/ajax",
    URI_NOTIFICATION_AJAX: "/notification/ajax/{catalog}/{page}",
    URI_NOTIFICATION_COUNT: "/notification/count/{catalog}",
    URI_UNREAD_NOTIFICATION_COUNT: "/notification/unreadCount/{catalog}",
    URI_MESSAGE: "/message",
    URI_MYSURPRISE: "/surprise/mySurprise",
    URI_MYPROMOTION: "/surprise/myPromotion/1/1",
    URI_SURPRISE_AJAX: "/surprise/index/{type}/{page}/",
    URI_SUBJECT_WEEK: "/subject/week/{subjectId}",
    URI_SUBJECT: "/subject/week",
    URI_GOTO_SUBJECT: "/tag",
    URI_SUBJECT_HISTORY: "/subject/history/{page}/{subjectId}",
    URI_SUBJECT_WEEK_AJAX: "/subject/week/ajax/{page}/{subjectId}",
    URI_SUBJECT_WEEK_TAG_AJAX: "/subject/week/tag/ajax",
    URI_SUBJECT_AJAX: "/subject/ajax/{subjectId}",
    URI_SUBJECT_HISTORY_AJAX: "/subject/history/ajax/{page}",
    URI_INVITE_EMAIL: "/invite/email",
    URI_INVITE_CHECK: "/invite/check",
    URI_INVITE_GET_INVITE: "/invite/get",
    URI_EMAIL_MODEL: "/invite/emailmodel/{inviteurl}",
    URI_INVITE: "/invite",
    URI_MESSAGE_DETAIL_DEL: "/message/detail",
    URI_REPLY_MESSAGE: "/message/reply",
    URI_MESSAGE_AJAX: "/message/ajax/{page}",
    URI_MESSAGE_DETAIL: "/message_detail/{messageSessionId}/{toUserId}",
    URI_MESSAGE_DETAIL_AJAX: "/message_detail/ajax/{page}/{messageSessionId}",
    URI_MESSAGE_COUNT: "/message/count",
    URI_UNREAD_MESSAGE_COUNT: "/message/unreadCount",
    URI_LANDING_PAGE: "/landing/{landId}/{email}",
    URI_LANDING_PAGE_REGIST: "/landing/regist",
    URI_MESSAGE_AND_NOTIFY: "/index_message_count",
    URI_ALL_UNREAD_NOTIFICATION_NUM: "/all_unread_notification_num",
    URI_CHANNEL_INDEX: "/",
    URI_NEW_INDEX: "/newIndex",
    URI_CERTIFY_GET: "/certify/users/get/{userId}",
    URI_CERTIFY_PERSON: "/certify/person/{page}",
    URI_CERTIFY_SHOP: "/certify/shop/{page}",
    URI_INDEX_ZHIMEI_STAR_REFRESH: "/ajax/star_refresh",
    URI_INDEX_EXCHANGE_REFRESH: "/index/exchange/refresh",
    URI_INDEX_SHOPPING_REFRESH: "/index/shopping/refresh",
    URI_INDEX_COMMENT_REFRESH: "/index/comment/refresh",
    URI_CHANNEL_INDEX_INDEX: "/index",
    URI_CHANNEL_INDEX_CATALOG: "/index/{catalog}",
    URI_CHANNEL_INDEX_CATALOG_PAGE: "/index/{catalog}/{page}",
    URI_CHANNEL_HOT: "/hot/",
    URI_CHANNEL_HOT_RECOMMEND: "/hot/recommend/",
    URI_CHANNEL_HOT_CATALOG: "/hot/{catalog}",
    URI_CHANNEL_HOT_CATALOG_PAGE: "/hot/{catalog}/{page}",
    URI_CHANNEL_ALL: "/all/",
    URI_CHANNEL_ALL_CATALOG: "/all/{catalog}",
    URI_CHANNEL_ALL_CATALOG_PAGE: "/all/{catalog}/{page}",
    URI_HELP: "/help",
    URI_POLICY: "/policy",
    URI_CONTACT: "/contact",
    URI_HELP_PIN: "/help/pin",
    URI_ZHIMEI_SURPRISE: "/page/surprise",
    URI_INTEGRAL_SURPRISE: "/page/integral_surprise",
    URI_INTEGRAL_SHOP: "/page/integral_shop",
    URI_INTEGRAL_PERAON: "/page/integral_person",
    URI_PAGE_KNOW: "/page/know",
    URI_PAGE_PERSON: "/page/certify_person",
    URI_PAGE: "/page/{path}",
    URI_SEARCH_USER: "/search/users/{page}",
    URI_SEARCH_USER_AJAX: "/searchAjax/users/{page}",
    URI_SEARCH_SHARE: "/search/share/{page}",
    URI_SEARCH_SHARE_AJAX: "/searchAjax/share/{page}",
    URI_SEARCH_BOARD: "/search/board/{page}",
    URI_SEARCH_BOARD_AJAX: "/searchAjax/board/{page}",
    URI_GUIDE_INTEREST_CATEGORY: "/guide/interestCategory",
    URI_GUIDE_INTEREST_FRIENDS: "/guide/friends",
    URI_GUIDE_INTEREST_BOARDS: "/guide/boards",
    URI_GUIDE_SUCCESS: "/guide/success",
    URI_GUIDE_DONE: "/guide/done",
    URI_APP_QPLUS_INDEX: "/app/qplus/index",
    URI_PRODUCT_INFO_URI: "/pro/info",
    URI_SYNC_BOARD_PIC: "/sync/share/{boardPicId}",
    URI_ABOUT_LEFT: "/about/about_left/{srcType}",
    URI_BACKEND_BASE: "/backend",
    URI_BACKEND_PAGE_INDEX: "/backend/index",
    URI_BACKEND_PAGE_INDEX_MENU: "/backend/index_menu",
    URI_BACKEND_PAGE_INDEX_BODY: "/backend/index_body",
    URI_BACKEND_PAGE_SAMPLE_PAGE: "/backend/sample_page",
    URI_BACKEND_SURPRISE_ADD: "/backend/surprise/add",
    URI_BACKEND_AUDIT: "/backend/audit",
    URI_BACKEND_AUDIT_INDEX: "/backend/audit/index",
    URI_UPLOAD_INDEX: "/backend/upload/index",
    URI_UPLOAD_FILE: "/backend/upload",
    URI_UPLOAD_FILE_CUT: "/backend/upload/cut",
    URI_BACKEND_AUDIT_USER: "/backend/audit/users/{page}",
    URI_BACKEND_AUDIT_USER_SEARCH: "/backend/audit/users/search/{page}",
    URI_BACKEND_AUDIT_USER_FLAG: "/backend/audit/users/flag",
    URI_BACKEND_SEND_USER_MESSAGE: "/backend/notification",
    URI_BACKEND_AUDIT_SHARE: "/backend/audit/share",
    URI_BACKEND_AUDIT_SHARE_SEARCH: "/backend/audit/share/search/{page}",
    URI_BACKEND_AUDIT_SHARE_FLAG: "/backend/audit/share/flag",
    URI_BACKEND_AUDIT_RESHARE: "/backend/audit/reshare",
    URI_BACKEND_AUDIT_RESHARE_SEARCH: "/backend/audit/reshare/search/{page}",
    URI_BACKEND_AUDIT_RESHARE_FLAG: "/backend/audit/reshare/flag",
    URI_BACKEND_TAG_SHARE: "/backend/tagShare/",
    URI_BACKEND_TAG_SHARE_SEARCH: "/backend/tagShare/search/{page}",
    URI_BACKEND_TAG_SHARE_SAVE: "/backend/tagShare/save",
    URI_BACKEND_AUDIT_BOARD: "/backend/audit/board",
    URI_BACKEND_AUDIT_BOARD_SEARCH: "/backend/audit/board/search/{page}",
    URI_BACKEND_AUDIT_BOARD_FLAG: "/backend/audit/board/flag",
    URI_BACKEND_AUDIT_BOARD_LIST: "/backend/audit/board/{page}",
    URI_BACKEND_AUDIT_COMMENT: "/backend/audit/comment",
    URI_BACKEND_AUDIT_COMMENT_SEARCH: "/backend/audit/comment/search/{page}",
    URI_BACKEND_AUDIT_COMMENT_FLAG: "/backend/audit/comment/flag",
    URI_BACKEND_AUDIT_MESSAGE: "/backend/audit/message",
    URI_BACKEND_AUDIT_SUBJECT_DEL: "/backend/audit/subject/del",
    URI_BACKEND_AUDIT_SUBJECT_SEARCH: "/backend/audit/subject/search/{page}",
    URI_BACKEND_CONFIG_INDEX: "/backend/config/index",
    URI_BACKEND_CONFIG_CONTEXT: "/backend/config/context",
    URI_BACKEND_CONFIG_EMAIL: "/backend/config/email",
    URI_BACKEND_CONFIG_HOT_FUNCTION: "/backend/config/hot",
    URI_BACKEND_CONFIG_VIOLATE_KEYWORDS: "/backend/config/keywords",
    URI_BACKEND_CONFIG_VIOLATE_KEYWORDS_DEL: "/backend/config/keywords/del",
    URI_BACKEND_CONFIG_VIOLATE_KEYWORDS_CACHE: "/backend/config/keywords/cache",
    URI_BACKEND_SHARE_TAG: "/backend/config/share/tag",
    URI_BACKEND_ADMIN_INDEX: "/backend/admin/index",
    URI_BACKEND_ADMIN_ADD: "/backend/admin/add",
    URI_BACKEND_ADMIN_ROLE: "/backend/admin/role",
    URI_BACKEND_ADMIN_ADD_ROLE: "/backend/admin/addrole",
    URI_BACKEND_ADMIN_PRIVILEDGE: "/backend/admin/pri",
    URI_BACKEND_ADMIN_LOGIN: "/backend/admin/login",
    URI_BACKEND_ADMIN_LOGOUt: "/backend/admin/logout",
    URI_BACKEND_CONTENT_GETTER_TAOBAO_MM: "/backend/content/getter/taobao_mm",
    URI_BACKEND_CONTENT_GETTER_LA623: "/backend/content/getter/la623",
    URI_BACKEND_CONTENT_GETTER_WEIBO: "/backend/content/getter/weibo",
    URI_BACKEND_CONTENT_GETTER_RENREN: "/backend/content/getter/renren",
    URI_BACKEND_SYSTEM_KEYWORD: "/backend/system/keyword",
    URI_SURPRISE: "/surprise",
    URI_SUPPRISE_WINNER: "/surprise/winner",
    URI_SUPPRISE_QUEUE: "/surprise/queue",
    URI_SURPRISE_LOTTERY: "/lottery/{eid}",
    URI_SURPRISE_DIALOG: "/dialog/{eid}",
    URI_SURPRISE_ISHAVE5: "/isHave5",
    URI_SURPRISE_QUEUE: "/queue/{eid}/{pageNo}",
    URI_SURPRISE_MYSURPRISE: "/mySurprise",
    URI_SURPRISE_MYSURPRISED: "/mySurprised",
    URI_SURPRISE_AWARD: "/award",
    URI_SNS_WEIBO_FRIENDS_AJAX: "/weibo/friendsAjax/{page}",
    URI_SNS_WEIBO_STATUSES_AJAX: "/weibo/statusesAjax",
    URI_SNS_OPEN_PLATFORM_STATUSES_AJAX: "/openPlatform/statusesAjax",
    URI_SURPRISE_TRY_AGAIN_DIALOG: "/surprise/tryAgainDialog",
    URI_SURPRISE_ACTIVITY_EVENT: "/activity/event",
    URI_APP_XIANGCUNAIQING: "/app/xiangcunaiqing",
    URI_APP_XIANGCUNAIQING_RESULT: "/app/xiangcunaiqing/result",
    URI_APP_XIANGCUNAIQING_SHARE_RESULT: "/app/xiangcunaiqing/share",
    URI_BOARD_PIC_TAG: "/boardPicTag/{boardPicId}",
    URI_SHARE_TAG_DELETE_BACKEND: "/backend/share/tag/del/{tagId}/{rootId}/{shareId}",
    URI_SHARE_TAG_ADD: "/shares/tag/add/{shareId}",
    URI_SHARE_TAG_DELETE: "/shares/tag/del/{tagId}/{shareId}",
    URI_USER_TAG_ADD: "/userTag/add",
    URI_USER_TAG_TRANSFER: "/userTag/transfer/{tagGroupId}",
    URI_TAG_CHANNEL: "/tagChannel/{firstLevelCatalogId}/{secondLevelCatalogId}/{thirdLevelCatalogId}/{tagType}/",
    URI_TAG_SHARES: "/tag/{firstLevelCatalogId}/{secondLevelCatalogId}/{thirdLevelCatalogId}/{page}",
    URI_RECOMMEND_TAG_CHANNEL: "/recommendTagChannel/{firstLevelCatalogId}/{thirdLevelCatalogId}/",
    URI_TAG_SEARCH: "/tagSearch/{tagId}",
    URI_TAG_SEARCH_SHARES: "/tag/search/{tagId}/{page}",
    URI_TAG_SEARCH_USERS: "/tag/searchUser/{tagId}/{page}",
    URI_TAG_SEARCH_USERS_AJAX: "/tag/searchUserAjax/{tagId}/{page}",
    URI_TAG_USER: "/tagUser",
    URI_TAG_USER_ADD: "/tagUser/add",
    URI_TAG_USER_SINGLE_ADD: "/tagUser/single/add/{tagId}",
    URI_TAG_USER_DELETE: "/tagUser/delete/{tagId}",
    URI_TAG_USERS_AJAX: "/tagUserAjax/userList/{tagId}/{page}",
    URI_USER_EMAIL_EDIT: "/users/edit/email",
    URI_USER_EMAIL_BIND: "/users/bind/email",
    URI_USER_PASSWORD_VERIFY: "/users/verify/password",
    URI_USER_EMAIL_VERIFY: "/users/verify/email",
    URI_EMAIL_LOGIN_URL: "/users/email/loginUrl",
    URI_USER_CARD: "/users/card/{userId}",
    URI_UNSUBSCRIBE: "/unsubscribe/{type}",
    URI_UNSUBSCRIBE_CONFIRM: "/unsubscribe/{type}/confirm",
    URI_UNSUBSCRIBE_SUCCESS: "/unsubscribe/{type}/success",
    URI_SUBSCRIBE_WEEKLY_SPECIAL: "/subscribe/weekly-special/{id}",
    URI_SUBSCRIBE_WEEKLY_SPECIAL_SEND: "/subscribe/weekly-special/{id}/send",
    URI_OUTER_SHAREID: "/outer/{id}",
    URI_BRAND_HP: "/brand/hp",
    URI_BRAND_HP_DIALOG: "/brand/hpDialog",
    URI_USER_HOT_SHARE_AJAX: "/share/{userId}/hot/{page}",
    FLAG_NORMAL: "0",
    FLAG_DEFAULT: "1",
    FLAG_DELETED: "5",
    FLAG_DELETED_AUDIT: "6",
    FLAG_DELETED_SYS: "7",
    TAG_VISIBILITY_HIDDEN: "0",
    TAG_VISIBILITY_DISPLAY: "1",
    TAG_VISIBILITY_ALL: "2",
    INDEX_RECOMMEND_TODAY_STAR: "5",
    BOARD_MANAGER_PRIVILEGE_OWNER: "1",
    BOARD_MANAGER_PRIVILEGE_MANAGER: "2",
    BOARD_MANAGE_TYPE_SELF: "1",
    BOARD_MANAGE_TYPE_MULTI: "2",
    INDEX_RECOMMEND_BOARD: "1",
    INDEX_RECOMMEND_SHARE: "2",
    INDEX_RECOMMEND_USER: "3",
    TAG_WEIGHT_DEFAULT: "0",
    TAG_FROM_USER: "1",
    TAG_FROM_SYS: "2",
    DEFAULT_BOARD: "-1",
    BOARD_COUNT_LIMIT: "50",
    BOARD_NAME_MAX_LENGTH: "20",
    ORIGIN_TYPE_LOCAL: "0",
    ORIGIN_TYPE_PIN: "1",
    ORIGIN_TYPE_BACKEND: "2",
    BOARD_PIC_QUERY_ORDER_BY_NEWLY: "0",
    BOARD_PIC_QUERY_ORDER_BY_DAILY_HOT: "1",
    BOARD_PIC_QUERY_ORDER_BY_WEEKLY_HOT: "2",
    BOARD_PIC_QUERY_BOARD_CATEGORY_ALL: "-2",
    BOARD_PIC_QUERY_USER_CERTIFY_TYPE_DEFAULT: "0",
    CERTIFY_COMPANY: "1",
    CERTIFY_USER: "2",
    GENDER_MAN: "1",
    GENDER_WOMAN: "2",
    INDEX_RECOMMEND_TODAY_FOCUS: "7",
    INDEX_RECOMMEND_TODAY_FOCUS_SIZE: "6",
    INDEX_RECOMMEND_WEEKLY: "8",
    INDEX_RECOMMEND_WEEKLY_SIZE: "1",
    INDEX_RECOMMEND_WEEKLY_LIST_SIZE: "6",
    INDEX_RECOMMEND_RECENTLY: "9",
    INDEX_RECOMMEND_RECENTLY_SIZE: "3",
    INDEX_RECOMMEND_CATALOG: "10",
    INDEX_RECOMMEND_CATALOG_LIST_SIZE: "6",
    INDEX_RECOMMEND_BUSINESS: "11",
    INDEX_RECOMMEND_BUSINESS_SIZE: "4",
    INDEX_RECOMMEND_FRIEND_LINKS: "12",
    INDEX_RECOMMEND_FRIEND_LINKS_SIZE: "12",
    INDEX_RECOMMEND_CHANNEL_TAG: "18",
    INDEX_RECOMMEND_CHANGES: "4",
    INDEX_RECOMMEND_CHANGES_SIZE: "5",
    INDEX_RECOMMEND_TODAY_STAR_SIZE: "1",
    INDEX_RECOMMEND_TODAY_STAR_LIST_SIZE: "8",
    INDEX_RECOMMEND_STARS: "6",
    INDEX_RECOMMEND_STARS_SIZE: "4",
    INDEX_RECOMMEND_VANE_1: "13",
    INDEX_RECOMMEND_VANE_2: "14",
    INDEX_RECOMMEND_VANE_3: "15",
    INDEX_RECOMMEND_VANE_4: "16",
    INDEX_RECOMMEND_VANE_5: "17",
    INDEX_RECOMMENT_USER_COUNT: "3",
    INDEX_RECOMMEND_SHARE_COUNT: "9",
    INDEX_RECOMMEND_BOARD_COUNT: "12",
    HREF_INVITE: "5",
    EMAIL_INVITE: "6",
    REGIST_TYPE_STATION: "3",
    ShopUtil: '{"taobao.com":"id","tmall.com":"id,default_item_id,mallstItemId"}',
    COUNT_TYPE_RESHARE: "2",
    COUNT_TYPE_COMMENT: "3",
    COUNT_TYPE_VIEW: "4",
    COUNT_TYPE_SYNC: "5",
    COUNT_TYPE_SHOW: "6",
    COUNT_TYPE_TAG: "7",
    COUNT_TYPE_HOT_POINT: "8",
    COUNT_TYPE_OPERATE: "9",
    TAG_CATALOG_LEVEL_FIRST: "1",
    TAG_CATALOG_LEVEL_SECOND: "2",
    TAG_CATALOG_LEVEL_THIRD: "3",
    OPENPLATFORM_RENREN: "1",
    OPENPLATFORM_SINA: "2",
    OPENPLATFORM_QQT: "4",
    OPENPLATFORM_QZONE: "8",
    OPENPLATFORM_TAOBAO: "16",
    OPENPLATFORM_DOUBAN: "32",
    OPENPLATFORM_ZHIMEI: "64",
    DOMAIN_NICKENAEM_TITLE: "\u77E5\u7F8E,\u5931\u53E3\u7F8E,\u7BA1\u7406\u5458",
    USER_REGISTER_IP_TIME: "600",
    USER_REGISTER_IP_MAX: "3",
    SYNC_REGIST: "5",
    SYNC_SUBJECT: "6",
    SYNC_SHARE: "1",
    SYNC_LIKE: "2",
    SYNC_SHARE_TO: "3",
    SYNC_INVITE: "4",
    SYNC_SHARE_RENREN_TIMER: "1000",
    SYNC_SHARE_SINA_TIMER: "1000",
    SYNC_SHARE_QZONE_TIMER: "1000",
    SYNC_SHARE_QQT_TIMER: "1000",
    REGIST_TYPE_IM: "0",
    REGIST_TYPE_SYNC: "1",
    REGIST_TYPE_EXT: "2",
    REGIST_TYPE_STATION_GET: "4",
    REGIST_TYPE_WAP_GET: "5",
    APP_TYPE_QPLUS: "1001",
    FORM_USER_NAME_LENGHT: "4",
    SINA_ID: "\u77E5\u7F8E\u7F51",
    SINA_TITLE: "\u77E5\u7F8E\u7F51",
    SINA_UID: "2443589715",
    QQT_ID: "zhimeicom",
    USER_SHARE_TITLE_MAX: "80",
    DOMAIN_SNS_TITLE: "\u77E5\u7F8E\u7F51",
    SYNC_SHARE_SNS_DATA: "3600",
    PAGE_SIZE_3: "3",
    PAGE_SIZE_5: "5",
    PAGE_SIZE_4: "4",
    PAGE_SIZE_10: "10",
    PAGE_SIZE_12: "12",
    PAGE_SIZE_16: "16",
    PAGE_SIZE_24: "24",
    PAGE_SIZE_30: "30",
    OPEN_CACHE_EXPIRE: "1800",
    OPENPLATFORM_QQT_IMAGES: "180",
    DOMAIN_TITLE: "\u77E5\u7F8E",
    INDEX_BANNER_COUNT: "4",
    REGIST_BANDING_LISTENER_EXECUTE_INDEX_SAVING: "101",
    SEND_SMS_ACTION_TYPE_SAVING_EXCHANGE: "101",
    SEND_SMS_ACTION_TYPE_SAVING_BACKEND: "102",
    SAVING_BASE_URI: "/saving",
    SAVING_SUBAREA_URI: "/saving/{subarea}",
    SAVING_WIDGET_URI: "/saving/{subarea}/widget",
    SAVING_BASE_INDEX: "/saving/index",
    SAVING_SUBAREA_INDEX: "/saving/{subarea}/index",
    SAVING_SUBAREA_BANNER: "/saving/{subarea}/banner",
    SAVING_SUBAREA_TASK: "/saving/{subarea}/task",
    SAVING_SUBAREA_TASK_DETAIL: "/saving/{subarea}/task/{taskId}",
    SAVING_SUBAREA_TASK_ATTEND: "/saving/{subarea}/task/{taskId}/attend",
    SAVING_SUBAREA_TASK_LOTTERY: "/saving/{subarea}/task/{taskId}/lottery",
    SAVING_SUBAREA_TASK_INVITE: "/saving/{subarea}/task/{taskId}/invite",
    SAVING_SUBAREA_TASK_EDM: "/saving/{subarea}/task/{taskId}/edm/{email}",
    SAVING_SUBAREA_TASK_AD: "/saving/{subarea}/task/{taskId}/ad",
    SAVING_SUBAREA_TASK_OPSYNC_CONTENT: "/saving/{subarea}/task/{taskId}/opsync/content",
    SAVING_SUBAREA_TASK_OPSYNC_SEND: "/saving/{subarea}/task/{taskId}/opsync/send",
    SAVING_SUBAREA_TASK_OPSYNC_FRIEND: "/saving/{subarea}/task/{taskId}/opsync/friend",
    SAVING_WIDGET_USER: "/saving/{subarea}/widget/user",
    SAVING_WIDGET_LEAVE_WORD: "/saving/{subarea}/widget/leaveword",
    SAVING_WIDGET_LIST_EXCHANGE: "/saving/{subarea}/widget/list/exchange",
    SAVING_WIDGET_LIST_TASK: "/saving/{subarea}/widget/list/task",
    SAVING_WIDGET_LIST_COIN: "/saving/{subarea}/widget/list/coin",
    SAVING_WIDGET_PLACARD: "/saving/{subarea}/widget/placard",
    SAVING_WIDGET_BAST_EXCHANGE: "/saving/{subarea}/widget/bastexchange",
    SAVING_WIDGET_LAST_EXCHANGE: "/saving/{subarea}/widget/lastexchange",
    SAVING_WIDGET_HOT_TASK: "/saving/{subarea}/widget/hottask",
    SAVING_WIDGET_LAST_TASK: "/saving/{subarea}/widget/lasttask",
    SAVING_WIDGET_QUESTION: "/saving/{subarea}/widget/question",
    SAVING_WIDGET_CONTENT400: "/saving/{subarea}/widget/content400",
    SAVING_WIDGET_LOTTERY: "/saving/{subarea}/widget/lottery/{taskId}/{page}",
    SAVING_GOODS_EXCHANGE: "/saving/{subarea}/goods/{goodsId}",
    SAVING_GOODS_EXCHANGELIST: "/saving/{subarea}/goodslist/{pageNo}",
    SAVING_GOODS_EXCHANGELOGS: "/saving/{subarea}/exchange/{goodsId}/{pageNo}",
    SAVING_GOODS_DOEXCHANGE: "/saving/{subarea}/doExchange/{goodsId}",
    SAVING_GOODS_ADDRESS: "/saving/{subarea}/address/{userId}",
    SAVING_EARN_COIN: "/saving/{subarea}/coin/earn/{page}",
    SAVING_SPEND_COIN: "/saving/{subarea}/coin/spend/{page}",
    SAVING_MY_COIN: "/saving/{subarea}/myCoin/{page}",
    SAVING_MY_ALL_COIN: "/saving/{subarea}/myAllCoin/{page}",
    SAVING_BINDING_MOBILE: "/saving/{subarea}/binding/mobile",
    SAVING_VALID_MOBILE: "/saving/{subarea}/valid/mobile",
    SAVING_BINDING_QQ: "/saving/{subarea}/binding/qq",
    SAVING_MESSAGE_PLACARD_LIST: "/saving/{subarea}/placard",
    SAVING_MESSAGE_PLACARD_DETAIL: "/saving/{subarea}/placard/{placardId}",
    SAVING_LEAVEWORD_LIST: "/saving/{subarea}/leaveWord/{pageNo}",
    SAVING_LEAVEWORD_ADD: "/saving/{subarea}/addLeaveWord",
    SAVING_USER_ADDRESS: "/saving/users/address/{addressId}",
    SAVING_USER_ADDRESS_SAVE: "/saving/users/address/save",
    SAVING_USER_ALL_ADDRESS: "/saving/users/allAddress/{userId}",
    SAVING_QUESRION_LIST: "/saving/{subarea}/question/list",
    SAVING_ABOUT: "/saving/about",
    SAVING_TOP_LIST: "/saving/{subarea}/top",
    FLAG_ACTIVE: "1",
    FLAG_PENDING: "2",
    FLAG_USED: "3",
    FLAG_PAUSE: "4",
    FLAG_DELETE: "5",
    COIN_TYPE_EARN: "1",
    COIN_TYPE_SPEND: "2",
    ACTION_TYPE_GOODS_REBATE_TICKET: "1",
    ACTION_TYPE_GOODS_PRODUCT: "2",
    ACTION_TYPE_GOODS_ACCOUNT_PASSWORD: "3",
    ACTION_TYPE_GOODS_QQ: "4",
    ACTION_TYPE_GOODS_PHONE_NUM: "5",
    ACTION_TYPE_LOTTERY: "6",
    ACTION_TYPE_TASK: "7",
    ACTION_TYPE_TASK_INVITE: "8",
    ACTION_INVITE_BACKURL_BANDING: "9",
    ACTION_EDM_BACKURL_BANDING: "10",
    GOODS_ORDINARY_EXCHANGE: "0",
    GOODS_BEST_EXCHANGE: "1",
    GOODS_EXCHANGE_TYPE_1: "1",
    GOODS_EXCHANGE_TYPE_2: "2",
    GOODS_EXCHANGE_TYPE_3: "3",
    GOODS_EXCHANGE_TYPE_4: "4",
    GOODS_EXCHANGE_TYPE_5: "5",
    TITLE_REBATE_TICKET_NUM: "\u5151\u6362\u5238\u53F7\u7801",
    TITLE_CAVAILABILITY_DATE: "\u6709\u6548\u671F",
    TITLE_VISIT_SHOP: "\u8BBF\u95EE\u5546\u5BB6\u003E\u003E",
    TITLE_NAME: "\u59D3\u540D",
    TITLE_DELIVERY_ADDRESS: "\u6536\u8D27\u5730\u5740",
    TITLE_CONTACT_PHONE: "\u8054\u7CFB\u7535\u8BDD",
    TITLE_MODIFY_ADDRESS: "\u4FEE\u6539\u5730\u5740\u003E\u003E",
    TITLE_AACCOUNT: "\u5E10\u53F7",
    TITLE_BPASSWORD: "\u5BC6\u7801",
    TITLE_QQ_NUM: "QQ\u53F7",
    TITLE_PHONE_NUM: "\u624B\u673A\u53F7",
    SAVING_ACTION_TYPE_INVITE: "101",
    SAVING_ACTION_TYPE_EDM: "102",
    SAVING_ACTION_STEP_EDM_CLICK: "10201",
    SAVING_ACTION_TYPE_GDT: "103",
    ATTEND_STAGE_FINISH: "311101",
    ATTEND_STAGE_NO_COMPLETE: "311102",
    ATTEND_STAGE_CAN_ATTEND: "311103",
    ATTEND_LIMIT_TYPE_ONCE: "312101",
    ATTEND_LIMIT_TYPE_DAILY: "312102",
    ATTEND_LIMIT_TYPE_WEEKLY: "312103",
    ATTEND_LIMIT_TYPE_MONTHLY: "312104",
    ATTEND_FINISH_TYPE_DIRECT: "313101",
    ATTEND_FINISH_TYPE_START_FINISH: "313102",
    CONDITION_LIMIT_TYPE_ANY: "331101",
    CONDITION_LIMIT_TYPE_ALL: "331102",
    AWARD_TYPE_ATTEND: "341101",
    AWARD_TYPE_FINISH: "341102",
    COMMON_ERROR_PARAM: "-101501",
    COMMON_ERROR_NO_LOGIN: "-101502",
    COIN_CHANGE_COIN_NO_NEED: "-201501",
    COIN_CHANGE_COIN_MAX_LIMIT: "-201502",
    TASK_NOT_START: "-301501",
    TASK_CLOSED: "-301502",
    TASK_FINISHED: "-302503",
    TASK_DELETE: "-302504",
    TASK_PAUSE: "-302505",
    TASK_ATTEND_NO_COMPLETE: "-303501",
    TASK_ATTEND_FINISH: "-303502",
    TASK_TIMES_LIMIT: "-304501",
    TASK_DRAW_FINISH_NO_DRAW: "-305501",
    TASK_DRAW_FINISH_NO_CPMPLETE: "-305502",
    TASK_CONFIG_ERROR: "-306501",
    TASK_ATTEND_FAIL: "-307501",
    TASK_ATTEND_SUCCESS: "307502",
    TASK_CONDITION_NO_COMPLETE: "-308501",
    TASK_INVITE_BACKEND_EXECUT: "-309501",
    TASK_NEED_VALID_EMAIL: "-310501",
    TASK_NEED_ADD_EMAIL: "-310502",
    TASK_NEED_QQ: "341103",
    LOTTERY_NOT_START: "-401501",
    LOTTERY_CLOSED: "-401502",
    LOTTERY_FINISHED: "-401503",
    LOTTERY_DELETE: "-401504",
    LOTTERY_NOT_ENOUGH_INVITE: "-402501",
    LOTTERY_MUST_ATTEND_TASK: "-402502",
    LOTTERY_MAX_ATTEND: "-402503",
    EXCHANGE_NOT_START: "-501501",
    EXCHANGE_CLOSED: "-501502",
    EXCHANGE_FINISHED: "-501503",
    EXCHANGE_DELETE: "-501504",
    EXCHANGE_NOT_COIN: "-501505",
    EXCHANGE_MAX_TIMES: "-501506",
    EXCHANGE_NEED_MOBILE: "-501507",
    EXCHANGE_NEED_TASK: "-501508",
    EXCHANGE_NEED_CODE: "-501509"
});
var consts = im20consts;
window.uri = im20uri;
window.im = jQuery;
im.fn = jQuery.fn;
jQuery.zm = {};
(function ($) {
    $.extend($.fn, {
        fixStr: function (str, num, chars) {
            var resStr;
            var newStr = str.toString();
            if (!chars) {
                chars = "..."
            }
            var diLen = lenStr(newStr) - num;
            if (diLen > 0) {
                resStr = cutStr(newStr, num) + chars
            } else {
                resStr = newStr
            }
            return resStr;

            function cutStr(str, num) {
                var n = 0;
                var p = [];
                for (var i = 0, len = str.length; i < len; i++) {
                    if (n > num - 1) {
                        break
                    }
                    if (str.charCodeAt(i) > 255) {
                        p.push(str.charAt(i));
                        n += 2
                    } else {
                        p.push(str.charAt(i));
                        n++
                    }
                }
                return p.join("")
            }function lenStr(str) {
                var k = 0;
                for (var i = 0; i < str.length; i++) {
                    if (str.charCodeAt(i) > 255) {
                        k += 2
                    } else {
                        k++
                    }
                }
                return k
            }
        },
        redEffact: function (obj) {
            obj.addClass("commenttaover").animate({
                opacity: "0.25"
            }, 50).animate({
                opacity: "1"
            }, 50).animate({
                opacity: "0.25"
            }, 50).animate({
                opacity: "1"
            }, 50);
            setTimeout("obj.removeClass('bgcolor')", 200)
        },
        filterStr: function (str) {
            str = str.replace(/&amp;/g, "&");
            str = str.replace(/&lt;/g, "<");
            str = str.replace(/&gt;/g, ">");
            str = str.replace(/&acute;/g, "'");
            str = str.replace(/&quot;/g, '"');
            str = str.replace(/&rdquo;/g, "”");
            str = str.replace(/&ldquo;/g, "“");
            str = str.replace(/&brvbar;/g, "|");
            str = str.replace(/&#39;/g, "'");
            str = str.replace(/&middot;/g, "·");
            str = str.replace(/&nbsp;/g, " ");
            str = str.replace(/&hellip;/g, "…");
            str = str.replace(/&mdash;/g, "—");
            str = str.replace(/&ndash;/g, "–");
            str = str.replace(/&copy;/g, "©");
            str = str.replace(/&trade;/g, "™");
            str = str.replace(/&deg;/g, "°");
            str = str.replace(/&times;/g, "×");
            str = str.replace(/&divide;/g, "÷");
            str = str.replace(/&lsquo;/g, "‘");
            str = str.replace(/&rsquo;/g, "’");
            str = str.replace(/&quot;/g, '"');
            return str
        },
        filterStrSearch: function (str) {
            str = str.replace(/'/g, "");
            str = str.replace(/</g, "");
            str = str.replace(/>/g, "");
            return encodeURIComponent(str)
        },
        filStr: function (str) {
            str = str.replace(/</g, "&lt;");
            str = str.replace(/>/g, "&gt;");
            return str
        },
        toJsonStr: function (o) {
            if (o == undefined) {
                return ""
            }
            var r = [];
            if (typeof o == "string") {
                return '"' + o.replace(/([\"\\])/g, "\\$1").replace(/(\n)/g, "\\n").replace(/(\r)/g, "\\r").replace(/(\t)/g, "\\t") + '"'
            }
            if (typeof o == "object") {
                if (!o.sort) {
                    for (var i in o) {
                        r.push('"' + i + '":' + Obj2str(o[i]))
                    }
                    if ( !! document.all && !/^\n?function\s*toString\(\)\s*\{\n?\s*\[native code\]\n?\s*\}\n?\s*$/.test(o.toString)) {
                        r.push("toString:" + o.toString.toString())
                    }
                    r = "{" + r.join() + "}"
                } else {
                    for (var i = 0; i < o.length; i++) {
                        r.push(Obj2str(o[i]))
                    }
                    r = "[" + r.join() + "]"
                }
                return r
            }
            return o.toString().replace(/\"\:/g, '":""')
        },
        drag: function (options) {
            var defaults = {
                zIndex: 3,
                opacity: 1,
                handler: null,
                follow: null,
                onMove: function (e) {},
                onDrop: function (e) {}
            };
            var opts = $.extend({}, defaults, options);
            return this.each(function () {
                var _this = this;
                var handler;
                var draging = false;
                var startLeft, startTop;
                var startX, startY;
                if (typeof opts.handler == "underfine" || opts.handler == null) {
                    handler = $(_this)
                } else {
                    handler = $(opts.handler)
                }
                handler.bind("mousedown", function (e) {
                    $(".imgLabelTip").remove();
                    var offset = handler.offset();
                    var parOffset = handler.parent().offset();
                    startLeft = offset.left - parOffset.left;
                    startTop = offset.top - parOffset.top;
                    startX = e.pageX;
                    startY = e.pageY;
                    draging = true;
                    handler.parent().bind("mousemove", function (e) {
                        handler.css("cursor", "pointer");
                        if (!draging) {
                            return
                        }
                        var leftVal = startLeft + e.pageX - startX;
                        var topVal = startTop + e.pageY - startY;
                        leftVal < 0 ? leftVal = 0 : "";
                        topVal < 0 ? topVal = 0 : "";
                        leftVal > ($(this).width() - $(_this).width()) ? leftVal = ($(this).width() - $(_this).width()) : "";
                        topVal > ($(this).height() - $(_this).height()) ? topVal = ($(this).height() - $(_this).height()) : "";
                        handler.css({
                            opacity: opts.opacity
                        });
                        handler.css({
                            left: leftVal + "px",
                            top: topVal + "px"
                        });
                        if (typeof opts.follow == "string") {
                            var L = parOffset.left + leftVal + Math.floor($(_this).width() / 2);
                            var T = parOffset.top + topVal + Math.floor($(_this).height() / 2);
                            $(opts.follow).css({
                                left: L + "px",
                                top: T + "px"
                            })
                        }
                    });
                    handler.parent().bind("mouseup", function (e) {
                        draging = false;
                        handler.css({
                            opacity: 1
                        });
                        $(".imgLabelTip").remove()
                    })
                })
            })
        },
        checkMobile: function (obj) {
            var regu = /^[1][0-9]{10}$/;
            var re = new RegExp(regu);
            return re.test($.trim(obj.val()))
        },
        getbytelength: function (str) {
            if (str == undefined || str.length < 1) {
                return 0
            }
            var n = 0;
            for (var i = 0; i < str.length; i++) {
                if (str.charCodeAt(i) > 255) {
                    n = n + 1
                } else {
                    n = n + 0.5
                }
            }
            return Math.round(n)
        },
        getInputlength: function (str) {
            var n = 0;
            for (var i = 0; i < str.length; i++) {
                if (str.charCodeAt(i) > 255) {
                    n += 2
                } else {
                    n++
                }
            }
            return n
        },
        fngetline: function (event, allword, rowbyte) {
            var linenum = 0;
            var myarray = allword.split("\n");
            linenum = myarray.length;
            for (var j = 0; j < myarray.length; j++) {
                var templine = $.fn.getInputlength(myarray[j]) / rowbyte;
                if (templine > 1) {
                    if ($.fn.getInputlength(myarray[j]) % rowbyte == 0) {
                        linenum += parseInt(templine) - 1
                    } else {
                        linenum += parseInt(templine)
                    }
                }
            }
            return linenum
        },
        countNumber: function (obj, opt) {
            var defaults = {
                scroll: false,
                flashing: false,
                rowsize: 0,
                numberid: 100,
                textareaid: null,
                rowheight: 4,
                deflultheight: 60,
                callback: null,
                buttonClass: "",
                buttonOff: "",
                effactOn: true
            };
            var options = opt;
            var opts = $.extend({}, defaults, options);
            var _obj, textObj;
            var _docRows = [opts.rowheight];
            typeof obj == "string" ? _obj = $(obj) : _obj = obj;
            typeof opts.textareaid == "string" ? textObj = $(opts.textareaid) : textObj = opts.textareaid;
            _obj.keyup(function (e) {
                var index = $.fn.getbytelength($.trim(_obj.val()));
                var defauLen = $.fn.getInputlength($.trim(_obj.val()));
                var linenumber = $.fn.fngetline(e, _obj.val(), opts.rowsize);
                _docRows.push(linenumber);
                if (opts.scroll) {
                    if (linenumber > opts.rowheight) {
                        if (_obj.height() - opts.deflultheight != (linenumber - opts.rowheight) * 14) {
                            var addHeight = (linenumber - opts.rowheight) * 14;
                            var lasth = addHeight + opts.deflultheight;
                            var backheight = _obj.height();
                            _obj.css({
                                height: lasth
                            });
                            opts.callback(_obj.height() - backheight)
                        }
                    } else {
                        if (_obj.height() > opts.deflultheight) {
                            var curheight = _obj.height();
                            _obj.css({
                                height: opts.deflultheight + "px"
                            });
                            opts.callback(opts.deflultheight - curheight)
                        }
                    }
                    if (index <= opts.numberid) {
                        textObj.text(index);
                        $(_obj).removeClass("bgcolor");
                        textObj.css({
                            color: "#65C5B3"
                        })
                    } else {
                        textObj.text(index);
                        textObj.css({
                            color: "#ff6600"
                        })
                    }
                    if (index == 0) {
                        obj.parent().next().find("a").removeClass().addClass(opts.buttonOff)
                    } else {
                        obj.parent().next().find("a").removeClass().addClass(opts.buttonClass)
                    }
                } else {
                    if (index <= opts.numberid) {
                        if (opts.textareaid) {
                            textObj.text(index);
                            textObj.removeClass().addClass("blue")
                        }
                        _obj.removeClass("bgcolor")
                    } else {
                        if (opts.textareaid) {
                            textObj.text(index - opts.numberid);
                            textObj.removeClass().addClass("orangered")
                        }
                        if (opts.effactOn) {
                            _obj.addClass("bgcolor").animate({
                                opacity: "0.25"
                            }, 50).animate({
                                opacity: "1"
                            }, 50).animate({
                                opacity: "0.25"
                            }, 50).animate({
                                opacity: "1"
                            }, 50)
                        }
                    }
                }
            });
            _obj.keyup()
        },
        textareaNumTotal: function (obj, opt) {
            var defaults = {
                okText: "",
                errorText: "",
                maxNum: 140,
                numDiv: null,
                button: null,
                butClass: "",
                butOff: "",
                textObj: null,
                check: true
            };
            var options = opt;
            var opts = $.extend({}, defaults, options);
            obj.off().on("keyup", function () {
                var nums;
                if ($.trim(obj.val()).length > 0) {
                    nums = $.fn.getbytelength(obj.val())
                } else {
                    nums = 0
                }
                if (nums > 140) {
                    opts.textObj.html(opts.errorText).find(opts.numDiv).html(nums - 140);
                    opts.button.removeClass(opts.butClass).addClass(opts.butOff);
                    opts.textObj.find("em").addClass("orange")
                } else {
                    if (nums == 0) {
                        opts.textObj.html(opts.okText).find(opts.numDiv).html(140 - nums);
                        opts.button.removeClass(opts.butClass).addClass(opts.butOff);
                        opts.textObj.find("em").removeClass("orange")
                    } else {
                        opts.textObj.html(opts.okText).find(opts.numDiv).html(140 - nums);
                        opts.button.removeClass(opts.butOff).addClass(opts.butClass);
                        opts.textObj.find("em").removeClass("orange")
                    }
                }
            });
            if (opts.check) {
                obj.keyup()
            }
        },
        tipsSetout: function (parentobj, body) {
            if (jQuery.browser.msie && (jQuery.browser.version == "7.0")) {
                $("#" + parentobj).html(body).show();
                setTimeout(function () {
                    $("#" + parentobj).hide()
                }, 2000)
            } else {
                $("#" + parentobj).html(body).stop(true, true).hide();
                $("#" + parentobj).html(body).slideDown(500).show();
                $("#" + parentobj).html(body).slideDown(500).delay(2000).slideUp(200)
            }
        },
        tipsMsm: function (type, parentobj, opt) {
            $(parentobj).addClass("smsmargin");
            switch (type) {
            case false:
                $.fn.tipsSetout(parentobj, '<span class="smstips smserror" ><em class="smstips">' + opt + "</em></span>");
                break;
            case true:
                $.fn.tipsSetout(parentobj, '<span class="smstips smstrue" ><em class="smstips">' + opt + "</em></span>");
                break
            }
        },
        imgLabelTip: function () {
            var textJson = eval("(" + $(this).attr("content") + ")");
            var newDiv = ["<div class='imgLabelTip'><ul>", "<li><img src='" + textJson.imgUrl + "' width='50' height='50'/></li>", "<li>" + textJson.logo + "<br/>价格：<br/>" + textJson.price + "元</li></ul>", "<p>购买链接:<br/><a href='" + textJson.url + "'>" + textJson.url + "</a></p>", "</div>"].join("");
            $("body").append(newDiv);
            var offset = $(this).offset();
            $(".imgLabelTip").css({
                left: offset.left + Math.floor($(this).width() / 2),
                top: offset.top + Math.floor($(this).height() / 2)
            })
        },
        imTipRun: function () {
          //disabled by psvr.
          return null;
            $.ajax({
                type: "GET",
                url: im20uri("URI_ALL_UNREAD_NOTIFICATION_NUM"),
                dataType: "json",
                success: function (data) {
                    if (!data) {
                        return
                    }
                    if (data.message + data.app + data.system + data.fans + data.at + data.comment > 0) {
                        im.zm.messageShow = !0;
                        $(".js-drop").removeClass("w100");
                        $("#js-mesg").show("slow");
                        if (data.comment) {
                            $("#js-mesg .js-comment").show().find("em").text(data.comment);
                            $(".messageinner .js-comment").show().find("em").text(data.comment);
                            $(".notipsmenu .js-comment").hide()
                        } else {
                            $("#js-mesg .js-comment").hide();
                            $(".messageinner .js-comment").hide();
                            $(".notipsmenu .js-comment").show()
                        }
                        if (data.at) {
                            $("#js-mesg .js-at").show().find("em").text(data.at);
                            $(".messageinner .js-at").show().find("em").text(data.at);
                            $(".notipsmenu .js-at").hide()
                        } else {
                            $("#js-mesg .js-at").hide();
                            $(".messageinner .js-at").hide();
                            $(".notipsmenu .js-at").show()
                        }
                        if (data.fans) {
                            $("#js-mesg .js-fan").show().find("em").text(data.fans);
                            $(".messageinner .js-fan").show().find("em").text(data.fans);
                            $(".notipsmenu .js-fan").hide()
                        } else {
                            $("#js-mesg .js-fan").hide();
                            $(".messageinner .js-fan").hide();
                            $(".notipsmenu .js-fan").show()
                        }
                        if (data.message) {
                            $("#js-mesg .js-message").show().find("em").text(data.message);
                            $(".messageinner .js-message").show().find("em").text(data.message);
                            $(".notipsmenu .js-message").hide()
                        } else {
                            $("#js-mesg .js-message").hide();
                            $(".messageinner .js-message").hide();
                            $(".notipsmenu .js-message").show()
                        }
                        if (data.system) {
                            $("#js-mesg .js-system").show().find("em").text(data.system);
                            $(".messageinner .js-system").show().find("em").text(data.system);
                            $(".notipsmenu .js-system").hide()
                        } else {
                            $("#js-mesg .js-system").hide();
                            $(".messageinner .js-system").hide();
                            $(".notipsmenu .js-system").show()
                        }
                    } else {
                        $(".notipsmenu a").show();
                        $(".messageinner p").hide();
                        $("#js-mesg").hide();
                        $(".js-drop").addClass("w100")
                    }
                },
                error: function () {}
            });
            setTimeout(arguments.callee, 60000)
        },
        filterString: function (str) {
            return $.trim(str).replace(/<|>|"|\'\%/g, "")
        },
        keyWordThis: function (index) {
            var sindex = im.fn.filterStrSearch(index);
            if (sindex.Trim().length > 0) {
                $("#search-all").attr("href", "/search/share/1?keyWords=" + sindex);
                $("#jquery-searchlist >a").eq(0).attr("href", "/search/share/1?keyWords=" + sindex);
                $("#jquery-searchlist >a").eq(1).attr("href", "/search/board/1?keyWords=" + sindex);
                $("#jquery-searchlist >a").eq(2).attr("href", "/search/users/1?keyWords=" + sindex)
            } else {
                $("#search-all , #jquery-searchlist >a").attr("href", "javascript:;")
            }
        },
        upDownPoint: function (i) {
            $("#jquery-searchlist a").removeClass().eq(i).addClass("sgray");
            var url = $("#jquery-searchlist a").eq(i).attr("href")
        },
        imSearch: function (obj, text) {
            var defaulTtitle = '<label id="search-description">' + text + "</label>";
            var newDiv = ['<div id="jquery-searchlist" style="display:none">', '<a id="search-0" href="javascript:;" rel="0">含“<em class="blue"></em>”的收集</a>', '<a id="search-1" href="javascript:;" rel="0">含“<em class="blue"></em>”的图格</a>', '<a id="search-2" href="javascript:;" rel="0">含“<em class="blue"></em>”的用户</a>', "</div>"].join("");
            var _this = $(obj);
            var i = 0;
            var inputDesc = $("#jquery-search").val();
            if (inputDesc == "") {
                $("#jquery-search").parent().append(defaulTtitle)
            }
            $("#jquery-search").parent().append(newDiv);
            $("#search-description").on("click", function () {
                var defaultDesc = $(obj).val();
                if (defaultDesc == "") {
                    $("#jquery-search").addClass("focus").focus().parent().children("#search-description").remove()
                }
            });
            _this.keyup(function () {
                var index = _this.val().Trim();
                var words = index;
                if (index.length > 0) {
                    $("#jquery-searchlist").show();
                    $.fn.keyWordThis(words)
                } else {
                    $("#jquery-searchlist").hide()
                }
                if (index.length > 8) {
                    $("#jquery-searchlist a em").text(index.substr(0, 8) + "...")
                } else {
                    $("#jquery-searchlist a em").text(index)
                }
            }).keydown(function (e) {
                var words = im.fn.filterStrSearch($(_this).val().Trim());
                if (e.keyCode == 13) {
                    var index = $(".sgray").index("#jquery-searchlist a");
                    if (words != "") {
                        switch (index) {
                        case 0:
                            location.href = "/search/share/1?keyWords=" + words;
                            break;
                        case 1:
                            location.href = "/search/board/1?keyWords=" + words;
                            break;
                        case 2:
                            location.href = "/search/users/1?keyWords=" + words;
                            break;
                        default:
                            location.href = "/search/share/1?keyWords=" + words;
                            break
                        }
                    }
                } else {
                    if (e.keyCode == 40) {
                        $.fn.upDownPoint(i);
                        if (i < 2) {
                            i++
                        } else {
                            i = 0
                        }
                    } else {
                        if (e.keyCode == 38) {
                            if (i == 0) {
                                i = 2
                            } else {
                                i--
                            }
                            $.fn.upDownPoint(i)
                        }
                    }
                }
                im.fn.keyWordThis(words)
            }).blur(function () {
                setTimeout(function () {
                    $("#jquery-searchlist").hide()
                }, 300);
                var defaultDesc = $(obj).val();
                if (defaultDesc == "") {
                    $("#jquery-search").parent().children("#search-description").remove().append(defaulTtitle)
                } else {
                    $("#jquery-search").parent().children("#search-description").remove()
                }
            }).focus(function () {
                var index = $(obj).val().Trim();
                $("#jquery-searchlist a").removeClass();
                var words = im.fn.filterString($(obj).val());
                if (index != "") {
                    if (index.length > 0) {
                        $("#jquery-searchlist").show()
                    } else {
                        $("#jquery-searchlist").hide()
                    }
                    if (index.length > 8) {
                        $("#jquery-searchlist a em").text(index.substr(0, 8) + "...")
                    } else {
                        $("#jquery-searchlist a em").text(index)
                    }
                }
                im.fn.keyWordThis(words)
            });
            $(_this).click(function () {
                var defaultDesc = $(obj).val().Trim();
                _this.addClass("focus");
                $(this).focusout(function () {
                    setTimeout(function () {
                        _this.removeClass("focus")
                    }, 300)
                });
                if (defaultDesc == "") {
                    $("#jquery-search").parent().find("#search-description").remove()
                }
            })
        },
        doImages: function (options) {
            var defaults = {
                imgs: null,
                thumbs: null,
                num: 2,
                thumbsClass: "",
                auto: false,
                time: 3000,
                stat: null
            };
            var opts = $.extend({}, defaults, options),
                sta = true;
            if (!opts.thumbs.length) {
                return
            }
            var timers = null;
            $(opts.thumbs).each(function (index) {
                $(this).hover(function () {
                    clearTimeout(timers);
                    imgsPlay(index);
                    sta = !1
                }, function () {
                    sta = !1;
                    imgsPlay(index);
                    sta = !0
                })
            });
            $(opts.imgs).hover(function () {
                sta = !1;
                clearTimeout(timers)
            }, function () {
                sta = !0;
                var _t = this;
                imgsPlay($(opts.imgs).index(_t))
            });

            function imgsPlay(obj) {
                var _this, s;
                if (!sta) {
                    return
                }
                if (typeof obj == "object") {
                    _this = obj;
                    s = $(opts.thumbs).index(_this)
                } else {
                    s = obj % opts.thumbs.length;
                    _this = opts.thumbs[s]
                }
                $(opts.thumbs).removeClass();
                $(_this).addClass(opts.thumbsClass);
                for (var i = 0, ig = opts.imgs, thu = opts.thumbs; i < thu.length; i++) {
                    if (s == i) {
                        $(ig[i]).attr("class", "imgBlock").stop(true, true).css("z-index", "2").animate({
                            opacity: 1
                        }, 300)
                    } else {
                        $(ig[i]).css({
                            display: "block"
                        }).removeClass("imgBlock").css("z-index", "1").stop(true, true).animate({
                            opacity: 0
                        }, 300)
                    }
                }
                if (opts.auto) {
                    timers = setTimeout(function () {
                        if (opts.stat) {
                            opts.stat()
                        }
                        imgsPlay(s)
                    }, opts.time)
                }
                if (opts.stat && typeof obj == "object") {
                    opts.stat()
                }
                s++
            }
            $(opts.imgs[opts.num]).css({
                display: "block",
                zIndex: "2"
            }).attr("class", "imgBlock");
            $(opts.thumbs[opts.num]).removeClass().addClass(opts.thumbsClass);
            if (opts.auto) {
                imgsPlay(opts.num)
            }
        }
    });
    var realJQueryAjax = jQuery.ajax;

    function _ajax_request(url, data, callback, dataType, method) {
        if (jQuery.isFunction(data)) {
            dataType = callback;
            callback = data;
            data = {}
        }
        var realCallback = callback;
        if (method == "PUT" || method == "DELETE") {
            if (jQuery.isPlainObject(data)) {
                data._method = method
            } else {
                if (data && data.length > 0) {
                    data += "&_method=" + method
                } else {
                    data = {
                        _method: method
                    }
                }
            }
            method = "POST"
        }
        var nowDate = new Date();
        if (jQuery.isPlainObject(data)) {
            data.nocache = nowDate.getMilliseconds()
        } else {
            if (data && data.length > 0) {
                data += "&nocache=" + nowDate.getMilliseconds()
            } else {
                data = {
                    nocache: nowDate.getMilliseconds()
                }
            }
        }
        return realJQueryAjax({
            type: method,
            url: url,
            data: data,
            success: function (data) {
                if (data && data.loginFailed) {
                    window.location = "/login"
                } else {
                    if (data && data.throwable) {} else {
                      if (typeof realCallback != 'undefined')
                        realCallback(data)
                    }
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {},
            dataType: dataType ? dataType : "json"
        })
    }
    $.extend({
        get: function (url, data, callback, dataType, options) {
            return _ajax_request(url, data, callback, dataType, "GET")
        },
        post: function (url, data, callback, dataType, options) {
            return _ajax_request(url, data, callback, dataType, "POST")
        },
        put: function (url, data, callback, dataType) {
            return _ajax_request(url, data, callback, dataType, "PUT")
        },
        delete_: function (url, data, callback, dataType) {
            return _ajax_request(url, data, callback, dataType, "DELETE")
        },
        del: function (url, data, callback, dataType) {
            return _ajax_request(url, data, callback, dataType, "DELETE")
        }
    });
    jQuery.ajax = function (settings) {
        if (settings.type == "GET") {
            return $.get(settings.url, settings.data, settings.success, settings.dataType)
        } else {
            if (settings.type == "POST") {
                return $.post(settings.url, settings.data, settings.success, settings.dataType)
            } else {
                if (settings.type == "PUT") {
                    return $.put(settings.url, settings.data, settings.success, settings.dataType)
                } else {
                    if (settings.type == "DELETE") {
                        return $.del(settings.url, settings.data, settings.success, settings.dataType)
                    }
                }
            }
        }
        realJQueryAjax(settings)
    }
})(jQuery);

function jsonEscape(a) {
    if (a) {
        return a.replace(/\n/gm, "\\n").replace(/\r/gm, "\\r").replace(/\t/gm, "\\t")
    }
    return ""
}
String.prototype.Trim = function () {
    return this.replace(/(^\s*)|(\s*$)/g, "")
};
String.prototype.LTrim = function () {
    return this.replace(/(^\s*)/g, "")
};
String.prototype.RTrim = function () {
    return this.replace(/(\s*$)/g, "")
};
if (!window.console) {
    window.console = {
        log: function () {},
        warn: function () {},
        error: function () {},
        fatal: function () {},
        debug: function () {},
        dir: function () {}
    }
}
var getType = function (a) {
        var b;
        return ((b = typeof (a)) == "object" ? a == null && "null" || Object.prototype.toString.call(a).slice(8, - 1) : b).toLowerCase()
    };
var isString = function (a) {
        return getType(a) == "string"
    };
jQuery.cookie = function (b, k, n) {
    if (typeof k != "undefined") {
        n = n || {};
        if (k === null) {
            k = "";
            n.expires = -1
        }
        var e = "";
        if (n.expires && (typeof n.expires == "number" || n.expires.toUTCString)) {
            var f;
            if (typeof n.expires == "number") {
                f = new Date();
                f.setTime(f.getTime() + (n.expires * 24 * 60 * 60 * 1000))
            } else {
                f = n.expires
            }
            e = "; expires=" + f.toUTCString()
        }
        var m = n.path ? "; path=" + (n.path) : "";
        var g = n.domain ? "; domain=" + (n.domain) : "";
        var a = n.secure ? "; secure" : "";
        document.cookie = [b, "=", encodeURIComponent(k), e, m, g, a].join("")
    } else {
        var d = null;
        if (document.cookie && document.cookie != "") {
            var l = document.cookie.split(";");
            for (var h = 0; h < l.length; h++) {
                var c = jQuery.trim(l[h]);
                if (c.substring(0, b.length + 1) == (b + "=")) {
                    d = decodeURIComponent(c.substring(b.length + 1));
                    break
                }
            }
        }
        return d
    }
};
(function ($) {
    var Sys = {};
    var ua = navigator.userAgent.toLowerCase();
    var ieBrow;
    (ieBrow = ua.match(/msie ([\d.]+)/)) ? Sys.ie = ieBrow[1] : 0;
    $.fn.dialog = function (para) {
        var _this = this;
        var defaults = {
            title: "新信息窗口",
            width: 300,
            height: 200,
            open: false,
            modal: true,
            show: "normal",
            buttons: null,
            closeCallBack: null
        };
        if (typeof para == "object") {
            var opts = $.extend(defaults, para)
        }
        if (typeof para == "string") {
            if (para in $.fn.dialog.method) {
                $.fn.dialog.method[para](_this)
            }
        }function newDialog() {
            this._init()
        }
        newDialog.prototype = {
            _init: function () {
                if (typeof para == "string") {
                    return
                }
                if (opts.modal) {
                    this._maskDiv()
                }
                this._addWindow(_this);
                if (opts.buttons) {
                    this.buttons(opts.buttons)
                }
                if (!opts.open) {
                    $.fn.dialog.method.close(_this)
                }
            },
            _maskDiv: function () {
                var len = $(".maskDiv").length;
                if (len > 0) {
                    $(".maskDiv").show();
                    return
                }
                var newDiv = ["<div id='masksDiv" + len + "' class='maskDiv' style='position:absolute;left:0;top:0;", "opacity:.4;filter:alpha(opacity=40);z-index:10000;background:#000;width:100%;'></div>"].join(" ");
                $("body").append(newDiv);
                $("#masksDiv" + len).css("height", Math.max(this.getBodyHeight(), this.getDocHeight()))
            },
            _addWindow: function () {
                var obj = arguments[0];
                obj.css({
                    left: parseInt(this.getDocWidth() / 2 - opts.width / 2),
                    width: opts.width
                });
                if (Sys.ie != "6.0") {
                    obj.css({
                        top: parseInt(this.getDocHeight() / 2 - opts.height / 2)
                    })
                }
                obj.addClass("dialog");
                var newDiv = ["<div class='top cf'>", "<div class='right'><a href='javascript:void(0);' class='js-close close'></a></div>", "<div class='left title png'>" + opts.title + "</div>", "</div>", "<div class='body'>" + _this.html() + "</div>"].join(" ");
                $(obj.html(newDiv)).appendTo("body");
                obj.show();
                if (opts.buttons === null) {
                    obj.find(">div:nth-child(2)").css({
                        background: "#F2F2F2"
                    })
                } else {
                    obj.find(">div").eq(1).css("height", (parseInt(opts.height) - parseInt(obj.find(">div").eq(0).height()) - parseInt(obj.find(">div").eq(2).height()) - 30))
                }
                obj.find(".js-close").click(function () {
                    if (opts.closeCallBack) {
                        opts.closeCallBack()
                    }
                    $.fn.dialog.method.close(obj)
                })
            },
            buttons: function () {
                var arg = arguments[0];
                for (var i = 0; i < arg.length; i++) {
                    this.addButton(arg[i])
                }
                var len = _this.find(">div").eq(2).find(">input");
                for (var j = 0; j < len.length; j++) {
                    _this.find(">div").eq(2).find(">input").eq(j).bind("click", function () {
                        return arg[_this.find(">div").eq(2).find(">input").index(this)].handler()
                    })
                }
            },
            addButton: function () {
                var butt = arguments[0];
                var buttHtml = "<input type='button' class='dialogBtn' value='" + butt.text + "'/>";
                _this.find(">div").eq(2).html(_this.find(">div").eq(2).html() + buttHtml)
            },
            getDocTop: function () {
                return $(document).scrollTop()
            },
            getBodyWidth: function () {
                return document.body.clientWidth
            },
            getBodyHeight: function () {
                return document.body.clientHeight
            },
            getDocWidth: function () {
                return document.documentElement.clientWidth
            },
            getDocHeight: function () {
                return document.documentElement.clientHeight
            }
        };
        $.fn.dialog.method = {
            close: function () {
                $(".maskDiv").hide();
                arguments[0].hide()
            },
            open: function () {
                var obj = arguments[0];
                $(".maskDiv").show();
                var eleH = document.documentElement.clientHeight;
                if (Sys.ie != "6.0") {
                    obj.css("top", parseInt(eleH / 2 - parseInt(obj.height()) / 2))
                }
                if ($(".maskDiv").length > 0) {
                    $(".maskDiv").each(function () {
                        $(this).css("height", Math.max(document.body.clientHeight, document.documentElement.clientHeight))
                    })
                }
                obj.show()
            }
        };
        return new newDialog()
    };
    $.fn.definedDialog = function (para) {
        var _this = this;
        var defaults = {
            title: "新信息窗口",
            width: 300,
            height: 0,
            showClose: true,
            open: false,
            modal: true,
            show: "normal",
            buttons: null,
            html: "",
            dialogClass: "",
            closeCallBack: null
        };
        if (typeof para == "object") {
            var opts = $.extend(defaults, para)
        }
        if (typeof para == "string") {
            if (para in $.fn.definedDialog.method) {
                $.fn.definedDialog.method[para](_this)
            }
        }function newDialog() {
            this._init()
        }
        newDialog.prototype = {
            _init: function () {
                if (typeof para == "string") {
                    return
                }
                if (opts.modal) {
                    this._maskDiv()
                }
                this._addWindow(_this);
                if (opts.buttons) {
                    this.buttons(opts.buttons)
                }
                if (!opts.open) {
                    $.fn.definedDialog.method.close(_this)
                }
            },
            _maskDiv: function () {
                var len = $(".maskDiv").length;
                if (len > 0) {
                    $(".maskDiv").show();
                    $(".maskDiv").css("height", Math.max(this.getBodyHeight(), this.getDocHeight()) + "px");
                    return
                }
                var newDiv = ["<div id='masksDiv" + len + "' class='maskDiv' style='position:absolute;left:0;top:0;", "opacity:.4;filter:alpha(opacity=40);z-index:10000;background:#000;width:100%;'></div>"].join(" ");
                $("body").append(newDiv);
                $("#masksDiv" + len).css("height", Math.max(this.getBodyHeight(), this.getDocHeight()))
            },
            _addWindow: function () {
                var obj = arguments[0];
                var _cssheight = (opts.height == 0) ? "auto" : opts.height;
                obj.css({
                    left: parseInt(this.getDocWidth() / 2 - opts.width / 2),
                    width: opts.width,
                    height: _cssheight,
                    zIndex: 10001
                });
                obj.removeClass().addClass(opts.dialogClass);
                var newDiv = "";
                if (opts.showClose) {
                    newDiv = ['<a class="js-close close"></a>'].join("")
                }
                $(obj.html(newDiv + opts.html)).appendTo("body");
                var diaH = (opts.height == 0) ? obj.height() : opts.height;
                if (Sys.ie != "6.0") {
                    obj.css({
                        top: parseInt(this.getDocHeight() / 2 - diaH / 2),
                        position: "fixed"
                    })
                }
                obj.wrap('<div class="__zm" />');
                obj.show();
                obj.find(".js-close").click(function () {
                    if (opts.closeCallBack) {
                        opts.closeCallBack()
                    }
                    $.fn.definedDialog.method.close(obj)
                })
            },
            buttons: function () {
                var arg = arguments[0];
                for (var i = 0; i < arg.length; i++) {
                    this.addButton(arg[i])
                }
                var len = _this.find(">div").eq(2).find(">input");
                for (var j = 0; j < len.length; j++) {
                    _this.find(">div").eq(2).find(">input").eq(j).bind("click", function () {
                        return arg[_this.find(">div").eq(2).find(">input").index(this)].handler()
                    })
                }
            },
            addButton: function () {
                var butt = arguments[0];
                var buttHtml = "<input type='button' class='dialogBtn' value='" + butt.text + "'/>";
                _this.find(">div").eq(2).html(_this.find(">div").eq(2).html() + buttHtml)
            },
            getDocTop: function () {
                return $(document).scrollTop()
            },
            getBodyWidth: function () {
                return document.body.clientWidth
            },
            getBodyHeight: function () {
                return document.body.clientHeight
            },
            getDocWidth: function () {
                return document.documentElement.clientWidth
            },
            getDocHeight: function () {
                return document.documentElement.clientHeight
            }
        };
        $.fn.definedDialog.method = {
            close: function () {
                $(".maskDiv").hide();
                arguments[0].hide()
            },
            open: function () {
                var obj = arguments[0];
                $(".maskDiv").show();
                var eleH = document.documentElement.clientHeight;
                if (Sys.ie != "6.0") {
                    obj.css("top", parseInt(eleH / 2 - parseInt(obj.height()) / 2))
                }
                $(".maskDiv").css("height", Math.max(document.body.clientHeight, document.documentElement.clientHeight));
                obj.show()
            }
        };
        return new newDialog()
    };
    im.window = {
        alert: function (text, type) {
            var iconClass;
            switch (type) {
            case "ok":
                iconClass = "true";
                break;
            case "error":
                iconClass = "false";
                break;
            case "warm":
                iconClass = "warm";
                break;
            default:
                iconClass = "true"
            }
            var _html = '<div class="alertTips alert"><span class="altconfirm ' + iconClass + ' png">' + text + "</span></div>";
            $("body").append(_html);
            if (jQuery.browser.msie) {
                setTimeout(function () {
                    $(".alertTips").remove()
                }, 2000)
            } else {
                setTimeout(function () {
                    $(".alertTips").animate({
                        opacity: 0
                    }, 1000, function () {
                        $(".alertTips").remove()
                    })
                }, 3000)
            }
        },
        posAlert: function (obj, text) {
            var _left = parseInt(obj.offset().left) + parseInt(obj.width() / 2) - 120;
            var _top = parseInt(obj.offset().top) - 131;
            var _html = ['<div class="__zm"><div class="positionAlt altdiv png">', '<span class="altsuccess png">' + text + "</span>", "</div></div>"].join("");
            $("body").append(_html);
            $(".altdiv").css({
                top: _top,
                left: _left
            });
            if (navigator.userAgent.indexOf("MSIE") > 0) {
                setTimeout(function () {
                    $(".positionAlt").remove()
                }, 2000)
            } else {
                setTimeout(function () {
                    $(".positionAlt").animate({
                        opacity: 0
                    }, 1000, function () {
                        $(".positionAlt").remove()
                    })
                }, 2000)
            }
        },
        posTips: function (obj, text, way, pos, func, classNames) {
            setTimeout(function () {
                var _left, _top, _html, classSpan;
                _left = parseInt(obj.width() / 2);
                _top = 30;
                if (way == "up") {
                    switch (pos) {
                    case "left":
                        _left = obj.offset().left - 190;
                        classSpan = "tipsupward-l";
                        break;
                    case "middle":
                        _left = _left - 155;
                        classSpan = "tipsupward-c";
                        break;
                    case "right":
                        _left = obj.offset().left - 300;
                        classSpan = "tipsupward-r";
                        break;
                    default:
                        classSpan = "tipsupward-l";
                        return
                    }
                } else {
                    switch (pos) {
                    case "left":
                        _left = _left - 25;
                        classSpan = "tipsdownward-l";
                        break;
                    case "middle":
                        _left = _left - 100;
                        classSpan = "tipsdownward-c";
                        break;
                    case "right":
                        _left = _left - 190;
                        classSpan = "tipsdownward-r";
                        break;
                    default:
                        classSpan = "tipsdownward-l";
                        return
                    }
                }
                _html = ['<span class="newposTips" >', '<span class="tipstopbg ' + classNames + '">', '<span class="tipsbottombg">', '<span class="tipsarray ' + classSpan + '"></span>', '<span class="tipscontent">' + text + "</span>", '<span class="tipsbutton"><em>我知道了</em></span>', "</span>", "</span>", "</span>"].join("");
                obj.parent().append(_html);
                if (way == "down") {
                    _top = _top - parseInt($(".tipstopbg").height() + obj.height())
                }
                if (way == "up") {
                    setTimeout(function () {
                        $(".tipstopbg").animate({
                            top: "-=5"
                        }, 200).animate({
                            top: "+=5"
                        }, 200).animate({
                            top: "-=5"
                        }, 200).animate({
                            top: "+=5"
                        }, 200)
                    }, 1000)
                } else {
                    setTimeout(function () {
                        $(".tipstopbg").animate({
                            top: "+=5"
                        }, 200).animate({
                            top: "-=5"
                        }, 200).animate({
                            top: "+=5"
                        }, 200).animate({
                            top: "-=5"
                        }, 200)
                    }, 1000)
                }
                $(".tipsbutton em").off().on("click", function () {
                    func();
                    $(this).parents(".newposTips").remove()
                })
            }, 1500)
        },
        confirm: function (obj, text, func, way) {
            if ($("p.btcontainer").length == 1) {
                return
            }
            var _left, _top, altConfirmUp = "";
            _left = parseInt(obj.offset().left) + parseInt(obj.width() / 2) - 120;
            _top = parseInt(obj.offset().top) + obj.height();
            if (way == "up") {
                _top = parseInt(obj.offset().top) + obj.height();
                altConfirmUp = "altconfirmup"
            } else {
                _top = parseInt(obj.offset().top) - 131
            }
            var _html = ['<div class="__zm"><div style="height:0;" class="confirmclass">', '<div class="altdiv ' + altConfirmUp + ' png">', '<span class="altconfirm png">' + text + "</span>", '<p class="btcontainer"><a href="javascript:void(0);" class="submitbtn confirm-btn">确认</a>&nbsp;<a href="javascript:void(0);" class="submitbtn cancel-btn">取消</a></p>', "</div>", "</div></div>"].join("");
            $("body").append(_html);
            $(".altdiv").css({
                top: _top,
                left: _left
            });
            $(".btcontainer .confirm-btn").click(function () {
                $(this).parent().parent().parent().find("shape").remove();
                if (func) {
                    func()
                }
                $(this).parent().parent().parent().remove()
            });
            $(".btcontainer .cancel-btn").click(function () {
                $(this).parent().parent().parent().find("shape").remove();
                $(this).parent().parent().parent().remove()
            })
        },
        confirmCenter: function (obj, text, func) {
            if ($("div.altdivCenter").length == 1) {
                return
            }
            var _left = (document.documentElement.clientWidth) / 2 - 131;
            var _top = $(window).scrollTop() + (document.documentElement.clientHeight) / 2 - 120;
            var _html = ['<div class="__zm"><div style="height:0;" class="confirmclass">', '<div class="altdivCenter png">', '<span class="altconfirm png">' + text + "</span>", '<p class="btcontainer"><a href="javascript:void(0);" class="submitbtn confirm-btn">确认</a>&nbsp;<a href="javascript:void(0);" class="submitbtn cancel-btn">取消</a></p>', "</div>", "</div></div>"].join("");
            $("body").append(_html);
            $(".altdivCenter").css({
                top: _top,
                left: _left
            });
            $(".btcontainer .confirm-btn").click(function () {
                $(this).parent().parent().parent().find("shape").remove();
                if (func) {
                    func()
                }
                $(this).parent().parent().remove()
            });
            $(".btcontainer .cancel-btn").click(function () {
                $(this).parent().parent().parent().find("shape").remove();
                $(this).parent().parent().remove()
            })
        },
        dialogTips: function (obj, values, notificationId) {
            if ($("#shoujiTips").size() > 0) {
                $("#shoujiTips").remove()
            }
            var user = obj.offsetParent().offsetParent().find(".userinfo a").eq(0).text();
            var orig = "";
            if (obj.offsetParent().offsetParent().find("p.contentsms").attr("isorigin") == 1) {
                orig = '<input type="checkbox" id="original_2" /><label for="original_2">同时评论给原收集者</label>'
            } else {
                orig = ['<input type="checkbox" id="original_1" /><label for="original_1">同时评论给&nbsp;' + user + "</label><br />", '<input type="checkbox" id="original_2" /><label for="original_2">同时评论给原收集者</label>'].join("")
            }
            var _html = ['<div id="shoujiTips" class="dialog3" style="position:absolute;width:425px;">', '<a class="close" href="###"></a>', '<div class="dialogbody dia-defined">',
             '<h3 class="yahei f24"><span class="success-ico"></span>收集成功</h3>', '<div class="note cf">', '<span class="count gray floatright numsText">还可以输入<em class="shoujiNum">0</em>字</span><span class="gray b">添加描述(可选)</span>', "</div>", '<div class="desc">', '<span class="taouter"><textarea id="shoujiText" class="ta_desc"></textarea></span>', "</div>", '<div class="dia-button cf">', '<div class="comment_to floatleft">' + orig, "</div>", '<div class="floatright"><a class="shoujiBut adaptbtn btn-green36"><span class="adaptbtn"><em class="adaptbtn">提交</em></span></a></div>', "</div>", "</div>", '<div id="shouji_arr" class="arr_down"></div>', "</div>"].join("");
            $("body").append(_html);
            var tipDiv = $("#shoujiTips");
            var _L, _T;
            $("#shouji_arr").removeClass().addClass("arr_down");
            _L = obj.offset().left - 101;
            _T = obj.offset().top - $("#shoujiTips").height() + 50;
            if (obj.offset().top - $(document).scrollTop() > $("#shoujiTips").height()) {
                $("#shouji_arr").removeClass().addClass("arr_down")
            } else {
                $("#shouji_arr").removeClass().addClass("arr_up");
                _T = obj.offset().top + 50
            }
            if (obj.offset().left < 425) {
                $("#shouji_arr").css("left", "30%");
                _L = obj.offset().left
            } else {
                if ($("body").width() - obj.offset().left - 222 < 425) {
                    $("#shouji_arr").css("left", "70%");
                    _L = obj.offset().left - 202
                } else {
                    $("#shouji_arr").css("left", "50%");
                    _L = obj.offset().left - 101
                }
            }
            tipDiv.css({
                left: _L,
                top: _T
            });
            var totalSt = true;
            if (parseInt(obj.offsetParent().offsetParent().find(".shareprofile .contentsms").attr("isorigin")) == 0) {
                if (obj.offsetParent().offsetParent().find(".cmt-content p").eq(1).text()) {
                    $("#shoujiText").val("//@" + user + ":" + $.fn.filterStr(obj.offsetParent().offsetParent().find(".cmt-content p").eq(1).text()))
                } else {
                    $("#shoujiText").val("//@" + user + ":收集")
                }
            } else {
                $("#shoujiText").val("");
                totalSt = true
            }
            $("#shoujiText").focus();
            $.fn.textareaNumTotal($("#shoujiText"), {
                okText: '还可以输入<em class="shoujiNum"></em>字',
                errorText: '已经超过<em class="shoujiNum"></em>字',
                numDiv: ".shoujiNum",
                button: tipDiv.find(".shoujiBut"),
                butClass: "btn-green36",
                butOff: "btn-disabled36",
                textObj: $("#shoujiTips .numsText"),
                check: totalSt
            });
            tipDiv.find(".btn-green36").off().on("click", function () {
                if ($(this).hasClass("btn-disabled36")) {
                    return
                }
                var original_1, original_2;
                original_1 = $("#original_1").attr("checked") ? 1 : 0;
                original_2 = $("#original_2").attr("checked") ? 1 : 0;
                if (!original_1 && !original_2 && $.trim($("#shoujiText").val()) == "") {
                    tipDiv.find(".close").click();
                    return
                }
                $.post(uri("URI_RESHARE_UPDATE", values.id), {
                    commentFromReshare: original_1,
                    commentShare: original_2,
                    title: $.trim($("#shoujiText").val()),
                    notificationId: notificationId
                }, function (data) {
                    im.window.alert("添加成功！");
                    tipDiv.find(".close").click()
                })
            });
            tipDiv.find(".close").on("click", function () {
                tipDiv.remove()
            })
        }
    };
    $.fn.combox = function (ele, para) {
        this.element = ele;
        this.opts = $.extend({}, $.fn.combox.defaults, para);
        this._init()
    };
    $.fn.combox.prototype = {
        _init: function () {
            var _this = this;
            var pannelWidth;
            var addDiv = "";
            if (_this.opts.width) {
                pannelWidth = _this.opts.width
            } else {
                if (_this.element.width() < _this.opts.minWidth) {
                    pannelWidth = _this.opts.minWidth
                } else {
                    pannelWidth = _this.element.width()
                }
            }
            if (!_this.opts.debug) {
                _this.element.hide()
            }
            var newEle = ["<span class='combox' style='width:" + pannelWidth + "px;'><input class='comboxText' style='width:" + (pannelWidth - 37) + "px' readonly='readonly' type='text' value=''/>", "<span class='comboxArrow'></span>", "<input class='comboxValue' type='hidden' value='' /></span>"].join("");
            $(newEle).insertAfter(_this.element);
            if (!_this.opts.pleaseSelect == "") {
                _this.element.next().find(".comboxText").eq(0).val(_this.opts.pleaseSelect)
            }
            var options = _this.element.find("option");
            var li = "",
                ul = "";
            for (var i = 0; i < options.length; i++) {
                if (options.eq(i).val() != "") {
                    if (options.eq(i).attr("manage") == 2) {
                        li += ("<li class='group' value ='" + options.eq(i).val() + "' default='" + options.eq(i).text() + "'>" + $.fn.fixStr(options.eq(i).text(), 18, "...") + "</li>")
                    } else {
                        li += ("<li value ='" + options.eq(i).val() + "' default='" + options.eq(i).text() + "'>" + $.fn.fixStr(options.eq(i).text(), 18, "...") + "</li>")
                    }
                }
            }
            if (_this.opts.addList) {
                addDiv = "<div class='comboxAdd'><span class='innerborder'><input class='deftest' type='text/css' value='' size='10' maxlength='" + (_this.opts.maxlength == undefined ? "20" : "" + _this.opts.maxlength) + "'/></span> <input class='addsort' type='button' value='添加新图格'/></div>"
            }
            ul = "<div class='pannel' style='width:" + pannelWidth + "px'><ul style='width:" + pannelWidth + "px'>" + li + "</ul>" + addDiv + "</div>";
            _this.element.next().append(ul);
            $(".pannel li").each(function () {
                $(this).bind("mouseover", function () {
                    $(this).removeClass("out");
                    $(this).addClass("over")
                });
                $(this).bind("mouseout", function () {
                    $(this).addClass("out")
                })
            });
            if (!this.opts.isSelect) {
                $(".combox").eq(comIdex).find(".comboxText").css({
                    color: "#ccc"
                })
            }
            _this.element.next().find(".comboxText").eq(0).keyup(function () {
                if (_this.opts.allowAnyValue) {
                    _this.element.next().find(".comboxText").eq(0).removeAttr("readonly");
                    var dex = $(".comboxText").index(this);
                    var pLeft = $(".combox").eq(dex).offset().left;
                    var pTop = parseInt($(".combox").eq(dex).offset().top + 26);
                    $(".pannel").eq(index).offset().left = pLeft;
                    $(".pannel").eq(index).offset().top = pTop;
                    $(".pannel").eq(index).css({
                        left: pLeft
                    });
                    $(".pannel").eq(dex).show();
                    var value = $(this).val();
                    var len = $(".pannel").eq(dex).find("li").length;
                    $(".pannel").eq(dex).find("li").each(function () {
                        if ($(this).text().indexOf(value) != 0) {
                            $(this).hide()
                        } else {
                            $(this).show("slide")
                        }
                    })
                }
            });
            _this.element.next().bind("click", function (e) {
                if (_this.opts.lock) {
                    return
                }
                var thisDoc = e.target;
                if (!($(thisDoc).attr("class") == "comboxText" || $(thisDoc).attr("class") == "comboxArrow")) {
                    return
                }
                $(".pannel").hide();
                e.stopPropagation();
                if (!_this.opts.isSelect) {
                    return
                }
                var heightVal = 0;
                var index = $(".combox").index(this);
                var _combox = $(".combox").eq(index);
                var _pannel = _combox.find(".pannel");
                var pLeft = "";
                var pTop = _combox.height();
                var numLi = _pannel.find("ul li").length;
                numLi > 5 ? heightVal = _this.opts.maxHeight : heightVal = numLi * 30;
                _pannel.find("ul").css({
                    height: heightVal
                });
                _pannel.find(".comboxAdd").css({
                    height: "30px"
                });
                if (typeof _this.opts.position == "string" && _this.opts.position == "up") {
                    var diffHeight = $(".combox").eq(index).offset().top - $(".pannel").eq(index).find("ul").eq(0).height();
                    $(".pannel").eq(index).css({
                        top: diffHeight
                    })
                } else {
                    $(".pannel").eq(index).css({
                        top: "-1px"
                    })
                }
                $(".pannel").eq(index).show();
                var pos = $(".pannel").eq(index).find("ul>li").index($(".pannel").eq(index).find("ul>li.select").eq(0)) * 30;
                $(".pannel").eq(index).find("ul").scrollTop(pos);
                _combox.find("ul li").each(function (index) {
                    $(this).unbind("click").bind("click", function () {
                        var _val = $(this).attr("default");
                        _combox.find(".comboxValue").val($(this).attr("value"));
                        _combox.find(".comboxText").val(_val);
                        _combox.find(".pannel").hide();
                        _combox.find("ul>li").removeClass("select");
                        $(this).addClass("select");
                        setTimeout(function () {
                            _combox.prev().find("option").each(function () {
                                if ($(this).text() == _val) {
                                    this.setAttribute("selected", "selected");
                                    if (_this.opts.selectCallBack) {
                                        _this.opts.selectCallBack($(this).attr("value"))
                                    }
                                } else {
                                    this.removeAttribute("selected")
                                }
                            })
                        }, 200)
                    })
                });

                function filter(str) {
                    str = str.replace(/&/g, "&amp;");
                    str = str.replace(/</g, "&lt;");
                    str = str.replace(/>/g, "&gt;");
                    str = str.replace(/'/g, "&acute;");
                    str = str.replace(/"/g, "&quot;");
                    str = str.replace(/\|/g, "&brvbar;");
                    return str
                }
                $(".pannel").eq(index).find(":last-child").find("input.addsort").hover(function () {
                    $(this).addClass("addsorthover")
                }, function () {
                    $(this).removeClass("addsorthover")
                });
                $(".combox").eq(index).find("input.addsort").click(function () {
                    if (_this.opts.lock) {
                        return
                    }
                    var val = $(this).prev().find("input.deftest").val();
                    var inputReg = /^([a-zA-Z0-9\-_\u4e00-\u9fa5]){1,20}/;
                    if (val == "" || !inputReg.test(val)) {
                        return
                    }
                    if (_this.opts.addListCallBack) {
                        if (isDouble(val) > -1) {
                            var pos = isDouble(val) * 30;
                            $(".pannel").eq(index).find("ul").scrollTop(pos);
                            _combox.find("ul li").each(function (index) {
                                if (index != isDouble(val)) {
                                    return
                                }
                                var _val = $(this).text();
                                _combox.find(".comboxValue").val($(this).attr("value"));
                                _combox.find(".comboxText").val(filter(_val));
                                _combox.find(".pannel").hide();
                                _combox.find("ul>li").removeClass("select");
                                $(this).addClass("select");
                                _combox.prev().find("option").each(function () {
                                    if ($(this).text() == _val) {
                                        this.setAttribute("selected", "selected")
                                    } else {
                                        this.removeAttribute("selected")
                                    }
                                })
                            });
                            return
                        }
                        _this.opts.addListCallBack(val);
                        if (_this.opts.selectCallBack) {
                            setTimeout(function () {
                                _this.opts.selectCallBack()
                            }, 500)
                        }
                    }
                    $(this).prev().find("input.deftest").val("");
                    var numLi = _combox.find("ul li").length;
                    if (numLi > 5) {
                        _combox.find("ul").css({
                            height: 5 * 22
                        })
                    }function isDouble(text) {
                        var _opt = _combox.prev().find("option");
                        var sta = -1;
                        for (var o = 0, len = _opt.length; o < len; o++) {
                            if (_opt.eq(o).text().toLowerCase() == text.toLowerCase()) {
                                sta = o
                            }
                        }
                        return sta
                    }
                })
            });
            $(document).click(function (event) {
                if (event.target.nodeName != "INPUT") {
                    $(".pannel").hide()
                }
            })
        },
        getValue: function (obj) {
            return obj.next().find(".comboxValue").eq(0).val()
        },
        setValue: function (obj, val) {
            var index = $(".combox").index(obj.next());
            var combx = $(".combox").eq(index);
            var pobj = $(".pannel").eq(index).find("ul>li"),
                ks = 0;
            for (var i = 0, len = pobj.length; i < len; i++) {
                if (pobj[i].getAttribute("value") == val) {
                    ks = i
                }
            }
            var num = $(".pannel").eq(index).find("ul>li").index($(".pannel").eq(index).find("ul>li").eq(ks));
            var vals = $(".pannel").eq(index).find("ul>li").eq(num).attr("default");
            combx.find(".comboxValue").val($(".pannel").eq(index).find("ul>li").eq(num).attr("value"));
            combx.find(".comboxText").val(filter(vals));
            combx.find(".pannel>ul>li").removeClass("select");
            combx.find(".pannel>ul>li").eq(num).addClass("select");
            combx.prev().find("option").each(function () {
                if ($(this).attr("value") == val) {
                    this.setAttribute("selected", "selected")
                } else {
                    this.removeAttribute("selected")
                }
            });

            function filter(str) {
                str = str.replace(/&amp;/g, "&");
                str = str.replace(/&lt;/g, "<");
                str = str.replace(/&gt;/g, ">");
                str = str.replace(/&acute;/g, "'");
                str = str.replace(/&quot;/g, '"');
                str = str.replace(/&brvbar;/g, "|");
                return str
            }
        },
        lock: function (sta) {
            this.opts.lock = sta
        },
        setAllowAnyValue: function (val) {
            var _this = this;
            _this.opts.allowAnyValue = val
        },
        addList: function (obj, tid, text) {
            var index = $(".combox").index(obj.next());
            var _combox = $(".combox").eq(index);
            _combox.find("ul li").each(function () {
                $(this).removeClass("select")
            });
            var newLi = "<li class='select' default='" + text + "' value='" + tid + "'>" + text + "</li>";
            _combox.find("ul").append(newLi);
            _combox.find(".pannel").hide();
            _combox.prev().find("option").each(function () {
                this.removeAttribute("selected")
            });
            _combox.prev().append("<option selected='selected' manage='1' value='" + tid + "'>" + text + "</option>");
            _combox.find(".comboxValue").val(tid);
            $(".combox").eq(index).find(".comboxText").val(text);
            if (this.opts.selectCallBack) {
                this.opts.selectCallBack()
            }
            $(".pannel li").each(function () {
                $(this).bind("mouseover", function () {
                    $(this).removeClass("out");
                    $(this).addClass("over")
                });
                $(this).bind("mouseout", function () {
                    $(this).addClass("out")
                })
            })
        }
    };
    $.fn.combox.defaults = {
        debug: true,
        pleaseSelect: "",
        allowAnyValue: false,
        position: "down",
        isSelect: true,
        maxHeight: 150,
        minWidth: 50,
        width: null,
        addList: false,
        lock: false,
        addListCallBack: null,
        selectCallBack: null
    };
    var isShow = false;
    $.fn.tab = function (options) {
        this.opts = $.extend({}, $.fn.tab.defaults, options);
        this._init();
        this.disableArr = []
    };
    $.fn.tab.prototype = {
        _init: function () {
            var _this = this;
            if ($(_this.opts.tabList).length > 0) {
                $(_this.opts.tabList).each(function (index) {
                    $(this).bind(_this.opts.eventType, function () {
                        if ($.inArray(index, _this.disableArr) == -1 && (!isShow) && $(this).attr("class").indexOf(_this.opts.tabActiveClass) == -1) {
                            if (_this.opts.callBackStartEvent) {
                                _this.opts.callBackStartEvent(index)
                            }
                            $(_this.opts.tabList).removeClass(_this.opts.tabActiveClass);
                            $(this).addClass(_this.opts.tabActiveClass);
                            showContent(index, _this.opts)
                        }
                    })
                })
            }
        },
        setDisable: function (index) {
            var _this = this;
            if ($.inArray(index, _this.disableArr) == -1) {
                _this.disableArr.push(index)
            }
        },
        setEnable: function (index) {
            var _this = this;
            var i = $.inArray(index, _this.disableArr);
            if (i > -1) {
                _this.disableArr.splice(i, 1)
            }
        },
        triggleTab: function (index) {
            $(this.opts.tabList).eq(index).trigger(this.opts.eventType)
        }
    }, $.fn.tab.defaults = {
        tabList: ".tabList li",
        contentList: ".tabContent",
        tabActiveClass: "active",
        tabDisableClass: "disable",
        eventType: "click",
        showType: "show",
        showSpeed: 200,
        callBackStartEvent: null,
        callBackHideEvent: null,
        callBackShowEvent: null
    };

    function showContent(index, opts) {
        isShow = true;
        var _this = this;
        switch (opts.showType) {
        case "show":
            alert(opts.contentList);
            $(opts.contentList).hide();
            if (opts.callBackHideEvent) {
                opts.callBackHideEvent(index)
            }
            $(opts.contentList).eq(index).show();
            if (opts.callBackShowEvent) {
                opts.callBackShowEvent(index)
            }
            isShow = false;
            break;
        case "fade":
            $(opts.contentList + ":visible").fadeOut(opts.showSpeed, function () {
                if (opts.callBackHideEvent) {
                    opts.callBackHideEvent(index)
                }
                $(opts.contentList).eq(index).fadeIn(function () {
                    if (opts.callBackShowEvent) {
                        opts.callBackShowEvent(index)
                    }
                    isShow = false
                })
            });
            break;
        case "slide":
            $(opts.contentList + ":visible").slideUp(opts.showSpeed, function () {
                if (opts.callBackHideEvent) {
                    opts.callBackHideEvent(index)
                }
                $(opts.contentList).eq(index).slideDown(function () {
                    if (opts.callBackShowEvent) {
                        opts.callBackShowEvent(index)
                    }
                    isShow = false
                })
            });
            break
        }
    }
    $.fn.textInput = function (ele, para) {
        this.element = ele;
        this.opts = $.extend({}, $.fn.textInput.defaults, para);
        this.init()
    };
    $.fn.textInput.prototype = {
        init: function () {
            var thisObj = this;
            var _this = this.element;
            var _html = ['<div class="handlist" id="jqury-handlist"><ul></ul></div>'].join("");
            $(_html).insertAfter(_this);
            var newUl = _this.next(".handlist").find("ul");
            _this.next(".handlist").css({
                height: "190px"
            }).hide();
            _this.keyup(function () {
                if ($(_this).val() == "") {
                    return
                }
                var textValue = $(_this).val();
                $.ajax({
                    url: thisObj.opts.url,
                    data: "nickName=" + encodeURI(textValue),
                    dataType: "json",
                    type: "GET",
                    success: function (data) {
                        if (data.length == 0) {
                            $(_this).attr("to_user_id", 0)
                        } else {
                            for (var len = data.length; len--;) {
                                if (data[len].nickname == $(_this).val()) {
                                    $(_this).attr("to_user_id", data[len].id)
                                } else {
                                    $(_this).attr("to_user_id", 0)
                                }
                            }
                        }
                        insertList(data);
                        if (newUl.find("li").length > 0 && newUl.find("li").length < 6) {
                            _this.next(".handlist").height(38 * newUl.find("li").length + "px")
                        } else {
                            _this.next(".handlist").height("190px")
                        }
                        _this.next().slideDown("slow")
                    }
                })
            });
            $(document).bind("click", function () {
                _this.next().hide()
            });

            function insertList(obj) {
                var jsonObj = obj;
                var li = "";
                for (var i = 0, len = jsonObj.length; i < len; i++) {
                    li += "<li id='" + jsonObj[i].id + "' class='cf' realName='" + jsonObj[i].nickname + "'><img src='" + jsonObj[i].avatarTiny + "'/>&nbsp;<span>" + jsonObj[i].displayName + "</span></li>"
                }
                newUl.html(li);
                newUl.find("li").each(function () {
                    $(this).bind("click", function () {
                        _this.val($(this).attr("realName"));
                        _this.attr("to_user_id", $(this).attr("id"))
                    })
                })
            }
            var _hover = $("#jqury-handlist ul li").on("mouseover", function () {
                $("#jqury-handlist ul li").removeClass("hover");
                $(this).addClass("hover")
            })
        }
    };
    $.fn.textInput.defaults = {
        url: "",
        height: 100,
        width: 100
    };
    im.user = new Object;
    im.user.validate = {
        thisObjError: function (obj, val) {
            this.animate($(obj).parent());
            $(obj).addClass("errortest").parent().parent().next("span").removeClass().addClass("errortips").show().text(val);
            return false
        },
        thisObjTrue: function (obj) {
            $(obj).attr("rel", "1").removeClass("errortest").parent().parent().next("span").css({
                display: "inline-block"
            }).removeClass().addClass("good");
            return true
        },
        thisFocus: function (obj, val) {
            $(obj).removeClass().addClass("deftest").parent().parent().next("span").removeClass().addClass("gray iblock").show().text(val);
            return true
        },
        animate: function (obj) {
            obj.animate({
                left: "+=10"
            }, 100);
            obj.animate({
                left: "-=10"
            }, 100);
            obj.animate({
                left: "+=5"
            }, 100);
            obj.animate({
                left: "-=5"
            }, 100)
        },
        checkName: function (obj) {
            var len = this.checkLength($(obj).val());
            if (len < 4) {
                this.thisObjError(obj, "昵称字符范围为4-20之间！");
                return false
            } else {
                this.thisObjTrue(obj);
                return true
            }
        },
        checkEmail: function (obj, type) {
            var regexp = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,3})$/;
            var str = $(obj).val();
            var sta = true;
            var _this = this;
            if (!str) {
                this.thisObjError(obj, "邮箱不能为空");
                sta = false
            } else {
                if (!regexp.test(str)) {
                    this.thisObjError(obj, "邮箱格式不正确");
                    sta = false
                } else {
                    if (type) {
                        this.thisObjTrue(obj)
                    } else {
                        $(obj).attr("rel", "1").removeClass("errortest").parent().parent().next("span").hide()
                    }
                }
            }
            return sta
        },
        checkPassword: function (obj, type) {
            var str = $(obj).val();
            var sta = true;
            var _this = $(obj).addClass("errortest").parent().parent().next(".errortips");
            if (str) {
                sta = this.checkCn(str)
            }
            var len = this.checkLength($(obj).val());
            if (5 < len && len < 17 && sta) {
                if (str.indexOf(" ") == -1) {
                    if (type) {
                        this.thisObjTrue(obj)
                    } else {
                        $(obj).attr("rel", "1").removeClass("errortest").parent().parent().next("span").hide();
                        sta = true;
                        return true
                    }
                } else {
                    this.thisObjError(obj, "您有特殊字符！");
                    sta = false
                }
            } else {
                if (str == "") {
                    sta = false;
                    this.thisObjError(obj, "密码不能为空")
                } else {
                    this.thisObjError(obj, "密码为6～16个字母、数字或符号，区分大小写！");
                    sta = false
                }
            }
            return sta
        },
        kaptcha: function (obj) {
            var str = $(obj).val();
            var sta = true;
            var ajaxSta = true;
            var _this = $(obj);
            if (str) {
                sta = this.checkCn(str)
            }
            var len = this.checkLength($(obj).val());
            if (len == 4) {
                $.ajax({
                    type: "get",
                    url: "/captcha/check?captcha=" + str,
                    dataType: "text",
                    success: function (data) {
                        if (data) {
                            _this.removeClass("errortest").parent().parent().parent().find(".stata").hide();
                            return true
                        } else {
                            _this.animate(_this.parent());
                            _this.addClass("errortest").parent().parent().parent().find(".stata").show().text("请正确输入！");
                            return false
                        }
                    }
                })
            } else {
                this.animate(_this.parent());
                _this.addClass("errortest").parent().parent().parent().find(".stata").show().text("请正确输入！");
                return false
            }
        },
        checkLength: function (str) {
            var len = 0;
            for (var i = 0; i < str.length; i++) {
                if (str.charCodeAt(i) > 255) {
                    len += 2
                } else {
                    len++
                }
            }
            return len
        },
        checkCn: function (str) {
            var sta = true;
            for (var i = 0; i < str.length; i++) {
                if (str.charCodeAt(i) > 255) {
                    sta = false;
                    break
                }
            }
            return sta
        },
        checkCharact: function (str) {
            var reg = /^([a-zA-Z0-9\-_\u4e00-\u9fa5]){2,30}$/;
            if (reg.test(str)) {
                return true
            } else {
                return false
            }
            return true
        },
        service: function (obj) {
            return obj.checked
        },
        regName: function (obj) {
            var len = this.checkLength($(obj).val());
            var str = $(obj).val();
            var _this = this;
            if (str == "") {
                this.thisObjError(obj, "昵称不能为空")
            } else {
                if (len < 4) {
                    this.thisObjError(obj, "昵称不能少于4个字符")
                } else {
                    if (len > 30) {
                        this.thisObjError(obj, "昵称不能超过30个字符")
                    } else {
                        if (!this.checkCharact(str)) {
                            this.thisObjError(obj, "昵称只支持汉字、英文、下划线和减号");
                            return false
                        }
                        _this.thisObjTrue(obj);
                        $.post("/regist/nickname", {
                            userNickname: str
                        }, function (data) {
                            if (typeof eval(data).result != "undefined") {
                                _this.thisObjError(obj, data.result)
                            } else {
                                _this.thisObjTrue(obj)
                            }
                        }, "json");
                        return true
                    }
                }
            }
        },
        regEmail: function (obj) {
            var str = $(obj).val();
            var sta = true;
            var _this = this;
            var regexp = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z\u4e00-\u9fa5]{2,4})$/;
            if (!str) {
                this.thisObjError(obj, "邮箱不能为空")
            } else {
                if (!regexp.test(str)) {
                    this.thisObjError(obj, "您的电子邮箱格式错误")
                } else {
                    $(obj).removeClass("errortest").parent().next(".errortips").hide();
                    $.post("/regist/email", {
                        userEmail: str
                    }, function (data) {
                        if (typeof eval(data).result != "undefined") {
                            _this.thisObjError(obj, data.result);
                            $(obj).addClass("errortest");
                            return false
                        } else {
                            _this.thisObjTrue(obj)
                        }
                    }, "json");
                    return true
                }
            }
        },
        openEmail: function (obj) {
            var str = $(obj).val();
            var sta = true;
            var _this = this;
            if (str) {
                sta = this.checkCn(str)
            } else {
                _this.thisObjError(obj, "邮箱不能为空");
                return false
            }
            if (str.indexOf("@") > 1 && str.indexOf(".") > 1 && sta) {
                $(obj).removeClass("errortest").parent().next(".errortips").hide();
                $.post("/regist/email", {
                    userEmail: str
                }, function (data) {
                    if (typeof eval(data).result == "undefined" || typeof eval(data).result == "") {
                        _this.thisObjError(obj, "邮箱不存在，请重新输入")
                    } else {
                        _this.thisObjTrue(obj)
                    }
                }, "json");
                return true
            } else {
                _this.thisObjError(obj, "邮箱格式不正确")
            }
        },
        haveEmail: function (obj) {
            this.thisObjError(obj, "该账号已经被绑定！")
        },
        errorPassword: function (obj) {
            this.animate($(obj).parent());
            this.thisObjError(obj, "密码错误，请重试")
        },
        checkMoreEmail: function (mails) {
            var str = mails;
            var sta = true;
            var s_space = mails.split(/[, ，]/);
            var _status = true;
            for (var i = 0; i < s_space.length; i++) {
                var mail = $.trim(s_space[i]);
                if (mail.length > 0) {
                    var result = _check(mail);
                    if (result == false) {
                        _status = false
                    }
                }
            }
            return _status;

            function _check(str) {
                if (str) {
                    sta = im.user.validate.checkCn(str)
                }
                if (str.indexOf("@") > 1 && str.indexOf(".") > 1 && sta) {
                    return true
                } else {
                    return false
                }
            }
        },
        checkForm: function (opt) {
            var _defaults = {
                objValue: {
                    ele: null,
                    type: "",
                    func: null,
                    defaultSta: true
                },
                element: null,
                openClass: "",
                closeClass: ""
            };
            var opts = $.extend({}, _defaults, opt);
            var status = [];
            if (opts.objValue) {
                for (var i = 0, len = opts.objValue.length; i < len; i++) {
                    switch (opts.objValue[i].type) {
                    case "text":
                        status[i] = false;
                        inputCheck(opts.objValue[i].ele, opts.objValue[i].func, i, opts.objValue[i].defaultSta);
                        break;
                    case "select":
                        status[i] = false;
                        selectCheck(opts.objValue[i].ele, opts.objValue[i].func, i);
                        break;
                    case "checkbox":
                        break;
                    case "radio":
                        status[i] = false;
                        radioCheck(opts.objValue[i].ele, opts.objValue[i].func, i);
                        break;
                    case "textarea":
                        status[i] = false;
                        inputCheck(opts.objValue[i].ele, opts.objValue[i].func, i, opts.objValue[i].defaultSta);
                        break;
                    case "combox":
                        status[i] = opts.objValue[i].func(opts.objValue[i].ele);
                        comboxCheck(opts.objValue[i].ele, opts.objValue[i].func, i);
                        break;
                    case "hiddenText":
                        status[i] = opts.objValue[i].func(opts.objValue[i].ele);
                        hiddenText(opts.objValue[i].ele, opts.objValue[i].func, i);
                        break;
                    default:
                        break
                    }
                }
            }function radioCheck(obj, func, num) {
                obj.each(function () {
                    if ($(this).attr("checked") == "checked") {
                        var _sta = func($(this));
                        status[num] = _sta;
                        if (getTrue(status)) {
                            opts.element.removeClass(opts.closeClass).addClass(opts.openClass)
                        } else {
                            opts.element.removeClass(opts.openClass).addClass(opts.closeClass)
                        }
                    }
                    $(this).click(function () {
                        var _sta = func($(this));
                        status[num] = _sta;
                        if (getTrue(status)) {
                            opts.element.removeClass(opts.closeClass).addClass(opts.openClass)
                        } else {
                            opts.element.removeClass(opts.openClass).addClass(opts.closeClass)
                        }
                    })
                })
            }function hiddenText(obj, func, num) {
                var _sta = func(obj);
                status[num] = _sta;
                if (getTrue(status)) {
                    opts.element.removeClass(opts.closeClass).addClass(opts.openClass)
                } else {
                    opts.element.removeClass(opts.openClass).addClass(opts.closeClass)
                }
            }function comboxCheck(obj, func, num) {
                var _sta = func(obj);
                status[num] = _sta;
                if (getTrue(status)) {
                    opts.element.removeClass(opts.closeClass).addClass(opts.openClass)
                } else {
                    opts.element.removeClass(opts.openClass).addClass(opts.closeClass)
                }
            }
            var thisTime = null;

            function inputCheck(obj, func, num, sta) {
                if (sta) {
                    var _sta = func(obj);
                    status[num] = _sta;
                    if (getTrue(status)) {
                        opts.element.removeClass(opts.closeClass).addClass(opts.openClass)
                    } else {
                        opts.element.removeClass(opts.openClass).addClass(opts.closeClass)
                    }
                } else {
                    status[num] = false;
                    opts.element.removeClass(opts.openClass).addClass(opts.closeClass)
                }
                obj.keyup(function () {
                    if (thisTime !== null) {
                        return
                    }
                    var _sta = func($(this));
                    thisTime = setTimeout(function () {
                        status[num] = _sta;
                        if (getTrue(status)) {
                            opts.element.removeClass(opts.closeClass).addClass(opts.openClass)
                        } else {
                            opts.element.removeClass(opts.openClass).addClass(opts.closeClass)
                        }
                        thisTime = null
                    }, 30)
                });
                obj.blur(function () {
                    if (this.nodeName.toLowerCase() == "input") {
                        if (thisTime !== null) {
                            return
                        }
                        var _sta = func($(this), true);
                        thisTime = setTimeout(function () {
                            status[num] = _sta;
                            if (getTrue(status)) {
                                opts.element.removeClass(opts.closeClass).addClass(opts.openClass)
                            } else {
                                opts.element.removeClass(opts.openClass).addClass(opts.closeClass)
                            }
                            thisTime = null
                        }, 30)
                    }
                })
            }function selectCheck(obj, func, num) {
                var _sta = func(obj);
                status[num] = _sta;
                if (getTrue(status)) {
                    opts.element.removeClass(opts.closeClass).addClass(opts.openClass)
                } else {
                    opts.element.removeClass(opts.openClass).addClass(opts.closeClass)
                }
                obj.change(function () {
                    var _sta = func($(this));
                    status[num] = _sta;
                    if (getTrue(status)) {
                        opts.element.removeClass(opts.closeClass).addClass(opts.openClass)
                    } else {
                        opts.element.removeClass(opts.openClass).addClass(opts.closeClass)
                    }
                })
            }function getTrue(arr) {
                var sts = true;
                for (var per = 0; per < arr.length; per++) {
                    if (!arr[per]) {
                        sts = false;
                        break
                    }
                }
                return sts
            }
        },
        checkTextarea: function (obj) {
            var sta = true;
            for (var i = 0, len = obj.length; i < len; i++) {
                if ($.fn.getbytelength(obj[i].val().Trim()) > 140) {
                    obj[i].addClass("bgcolor").animate({
                        opacity: "0.25"
                    }, 50).animate({
                        opacity: "1"
                    }, 50).animate({
                        opacity: "0.25"
                    }, 50).animate({
                        opacity: "1"
                    }, 50);
                    setTimeout(function () {
                        obj[i].removeClass("bgcolor")
                    }, 400);
                    return false
                }
            }
            return sta
        }
    };
    $.fn.userOperation = new Object;
    $.fn.userOperation.userId = [];
    $.fn.userOperation.init = function (obj, pera) {
        var _this = this;
        var userId;
        if (arguments.length > 1) {
            userId = pera.slice(0)
        } else {
            userId = _this.userId
        }
        obj.bind("click", function () {
            if ($(this).attr("class").indexOf("current") > -1) {
                $(this).removeClass("current");
                $(this).find("span:nth-child(1)").removeClass("true");
                for (var i = 0; i < userId.length; i++) {
                    if (userId[i] == $(this).attr("userId")) {
                        userId.splice(i, 1)
                    }
                }
            } else {
                $(this).addClass("current");
                $(this).find("span:nth-child(1)").addClass("true");
                userId.push($(this).attr("userId"))
            }
        })
    };
    $.fn.userOperation.select = function (id, scrtop) {
        $("#" + id).animate({
            marginTop: scrtop
        }, "1000")
    };
    $.fn.userOperation.back = function (id) {
        $("#" + id).animate({
            marginTop: "0px"
        }, "1000")
    };
    $.fn.userOperation.update = function (parentId, json) {
        var content = json;
        var _par = $("#" + parentId).find("div[dataId=" + content.value.id + "]").find(".contentsms");
        var _h = _par.height();
        var cols = _par.offsetParent().attr("columns");
        var docTop = parseInt(_par.offsetParent().css("top"));

        function unique(data) {
            data = data || [];
            var a = {};
            for (var i = 0; i < data.length; i++) {
                var v = data[i];
                if (typeof (a[v]) == "undefined") {
                    a[v] = 1
                }
            }
            data.length = 0;
            for (var i in a) {
                data[data.length] = i
            }
            return data
        }
        var nTitle = content.value.title;
        var rr = /(?:#[A-Za-z0-9\u4E00-\u9FA5]+#)/gi;
        var mm = unique(nTitle.match(rr));
        var o = nTitle;
        if (mm) {
            for (var i = 0; i < mm.length; i++) {
                o = nTitle.replace(new RegExp(mm[i], "gm"), '<a href="/tag?tag=' + mm[i].substring(1, mm[i].length - 1) + '" class="themTitle">' + mm[i] + "</a>");
                nTitle = o
            }
        }
        $("#" + parentId).find("div[dataId=" + content.value.id + "]").find(".contentsms").html(o);
        var addHeight = parseInt(_par.height() - _h);
        if (autoLayout.defaults) {
            try {
                updateHeight(autoLayout.defaults.contentID, cols, addHeight, docTop)
            } catch (e) {}
        }function updateHeight(objs, col, diffHeight, bTop) {
            var objDiv = autoLayout.getElements(objs);
            for (var i = objDiv.length; i--;) {
                var colums = $(objDiv[i]).attr("columns");
                var docTop = parseInt($(objDiv[i]).css("top"));
                if (colums == col && docTop > bTop) {
                    $(objDiv[i]).css({
                        top: docTop + diffHeight
                    })
                }
            }
            autoLayout.colArray[col] += diffHeight;
            document.getElementById(autoLayout.defaults.contentID).style.height = Math.max.apply(Math, autoLayout.colArray) + "px"
        }
    };
    $.fn.userOperation.deleteBoard = function (parentId, dataId) {
        $("#" + parentId).find("div[dataId=" + dataId + "]").remove();
        autoLayout.debounceFunc(autoLayout.updateDiv(), 30, true)
    }
})(jQuery);
im.zm.categoryNav = function (t) {
    var d, b, q, s, o, n, g, m, a, l, r;
    d = {
        ele: null,
        subEle: null,
        obj: null,
        upClass: "",
        downClass: "",
        top: "",
        left: "",
        top_up: "-1px"
    };
    b = $.extend({}, d, t);
    q = !0, s = !1, r = !1;
    o = b.subEle.height();
    n = b.ele.offset().top;
    g = b.ele.height();
    m = $("#nav .navandshadow").height() + 4;
    if (jQuery.browser.msie && Math.floor(jQuery.browser.version) < 7) {
        l = b.ele.height()
    }
    b.obj.on("click", function () {
        var u = $(this);
        if (b.subEle.css("display") == "block") {
            if (jQuery.browser.msie && Math.floor(jQuery.browser.version) < 7) {
                b.subEle.stop(true, true).slideUp(300)
            } else {
                b.subEle.stop(true, true).slideUp("300", function () {
                    if (r) {
                        $("#nav").css({
                            top: "49px"
                        })
                    } else {
                        $("#nav").css({
                            top: b.top_up
                        })
                    }
                })
            }
            q = !1;
            s = !1;
            if (jQuery.browser.msie && Math.floor(jQuery.browser.version) < 8) {
                $("#nav").css({
                    height: 0
                }).find(".sheetshadow").css({
                    top: 0
                });
                if (Math.floor(jQuery.browser.version) == 7) {
                    $("#nav .calloutcontainer").css({
                        top: "43px"
                    })
                }
            }
            $('.callout span').removeClass('arrow');
            $('.callout span').addClass('arrowup');
        } else {
            if (r) {
                $("#nav").css({
                    top: "49px"
                })
            } else {
                $("#nav").css({
                    top: "0px"
                })
            }
            b.subEle.stop(true, true).slideDown(300);
            q = !0;
            s = !0;
            a = b.ele.offset().top;
            //e(b.obj);
            if (jQuery.browser.msie && Math.floor(jQuery.browser.version) < 8) {
                var h = $("#nav .sortnav-mod>div").first().height() + 85 + "px";
                $("#nav").css({
                    height: h
                }).find(".sheetshadow").css({
                    top: ""
                });
                $("#nav .calloutcontainer").css({
                    top: ""
                })
            }
            $('.callout span').removeClass('arrowup');
            $('.callout span').addClass('arrow');
        }
    });
    // $(window).scroll(function () {
    //     if (jQuery.browser.msie && Math.floor(jQuery.browser.version) < 8) {
    //         return
    //     }
    //     if (q) {
    //         if ($(document).scrollTop() > m) {
    //             c(b.ele);
    //             b.ele.find(".navandshadow").hide();
    //             k(b.obj);
    //             $("body").css({
    //                 paddingTop: "261px"
    //             });
    //             r = !0
    //         } else {
    //             b.ele.find(".navandshadow").show();
    //             f(b.ele);
    //             e(b.obj);
    //             $("body").css({
    //                 paddingTop: b.top
    //             });
    //             r = !1
    //         }
    //     } else {
    //         $(document).scrollTop() > 0 ? c(b.ele) : f(b.ele);
    //         $("body").css({
    //             paddingTop: b.top
    //         });
    //         if ($(document).scrollTop() == 0) {
    //             if (r) {
    //                 $("#nav").css({
    //                     top: "-44px"
    //                 });
    //                 r = !1
    //             }
    //         } else {
    //             r = !0
    //         }
    //     }
    //     if (q && s) {
    //         p(b.ele);
    //         b.subEle.show();
    //         e(b.obj);
    //         if ($(document).scrollTop() > parseInt(a) + g - 105) {
    //             c(b.ele);
    //             b.ele.find(".navandshadow").hide();
    //             s = !1;
    //             k(b.obj)
    //         } else {
    //             if ($(document).scrollTop() < parseInt(a) && $(document).scrollTop() > 0) {
    //                 c(b.ele);
    //                 $("body").css({
    //                     paddingTop: "261px"
    //                 })
    //             } else {
    //                 if ($(document).scrollTop() == 0) {
    //                     f(b.ele);
    //                     $("body").css({
    //                         paddingTop: b.top
    //                     });
    //                     s = !1
    //                 }
    //             }
    //         }
    //     }
    // });
    // 
    // function p(h) {
    //     h.css({
    //         position: "absolute",
    //         top: a,
    //         left: "50%",
    //         marginLeft: b.left
    //     })
    // }function c(u) {
    //     if (jQuery.browser.msie && Math.floor(jQuery.browser.version) < 7) {
    //         var h = parseInt($(document).scrollTop()) + parseInt(b.top);
    //         u.css({
    //             position: "absolute",
    //             top: h,
    //             left: "50%",
    //             marginLeft: b.left,
    //             zIndex: 2
    //         })
    //     } else {
    //         u.css({
    //             position: "fixed",
    //             top: b.top,
    //             left: "50%",
    //             marginLeft: b.left
    //         })
    //     }
    // }function f(h) {
    //     h.css({
    //         position: "relative",
    //         top: "",
    //         left: "",
    //         margin: "0 auto"
    //     })
    // }function e(h) {
    //     h.children("span").removeClass(b.upClass).addClass(b.downClass)
    // }function k(h) {
    //     h.children("span").removeClass(b.downClass).addClass(b.upClass)
    // }
};






















im.zm.fnDropmenu = function (b, a) {
    b.hover(function () {
        $(this).addClass(a).find(".dropdown").stop(true, true).slideDown(200);
        if ($(this).parent().hasClass("sysmenulist") && $(this).addClass(a).find(".dropdown").size() > 0) {
            $("#js-mesg").hide()
        }
    }, function () {
        $(this).removeClass(a).find(".dropdown").hide();
        if (im.zm.messageShow) {
            $("#js-mesg").show()
        }
    })
};
im.zm.messageShow = !1;
im.zm.detailPic = function (f, d) {
    $("#zoomDetail").remove();
    $("#shoujiTips").remove();
    var b = ['<div id="zoomDetail" class="zoomlayer">', '<a id="zoomButt" class="bgimg shut" style="display:none;" href="###"><span>点击两边的空白处也可以关闭</span></a><a class="bgimg preimg" title="上一张" style="display:none;"></a><a class="bgimg nextimg" title="下一张" style="display:none;"></a>', '<div class="sharedetail"></div>', "</div>"].join("");
    $("body").append(b);
    var c = document.location.href;
    $("#zoomDetail>div").removeClass().addClass("firstload").html("请稍等...");
    window.replyComment = function (g, h) {
        $("#replyCommentId").val(g);
        $("#commentta").focus().val("回复 " + h + "：")
    };
    $.get(uri("URI_SHARE_AJAX", f), function (q) {
        $("#zoomDetail").children("a").first().show();
        $("#zoomDetail>div").removeClass().addClass("sharedetail").html("").html(q);
        var s = $("#zoomDetail>div");
        if (window.history.pushState) {
            window.history.pushState({
                content: q
            }, f, uri("URI_BOARD_PIC", f))
        }
        if ($("#previousReshareId").val()) {
            $("#zoomDetail .preimg").show().attr("href", "/share/" + $("#previousReshareId").val()).off().on("click", function () {
                im.zm.detailPic($("#previousReshareId").val(), d);
                return false
            })
        }
        if ($("#nextReshareId").val()) {
            $("#zoomDetail .nextimg").show().attr("href", "/share/" + $("#nextReshareId").val()).off().on("click", function () {
                im.zm.detailPic($("#nextReshareId").val(), d);
                return false
            })
        }
        $("#zoomDetail").scroll(function () {
            im.zm.delayImg.init("#zoomDetail")
        });

        function l(x) {
            x = x || [];
            var o = {};
            for (var w = 0; w < x.length; w++) {
                var u = x[w];
                if (typeof (o[u]) == "undefined") {
                    o[u] = 1
                }
            }
            x.length = 0;
            for (var w in o) {
                x[x.length] = w
            }
            return x
        }
        var h = $("#boardPicTitleContent").html();
        var m = /(?:#[A-Za-z0-9\u4E00-\u9FA5]+#)/gi;
        var k = l(h.match(m));
        var g = h;
        if (k) {
            for (var r = 0; r < k.length; r++) {
                g = h.replace(new RegExp(k[r], "gm"), '<a href="/tag?tag=' + k[r].substring(1, k[r].length - 1) + '" class="themTitle">' + k[r] + "</a>");
                h = g
            }
        }
        $("#boardPicTitleContent").html(h);
        if ($("#commentta").val() == "说点什么吧……") {
            $("#textCount").text("0")
        } else {
            $("#textCount").text($.fn.getbytelength($("#commentta").val()))
        }
        $("#commentta").focus(function () {
            if ($(this).val() == "说点什么吧……" || $(this).val() == "") {
                $(this).val("")
            }
            $.fn.countNumber("#commentta", {
                scroll: false,
                numberid: 140,
                textareaid: "#textCount",
                effactOn: false,
                buttonClass: "submitbtn confirm-btn",
                buttonOff: "submitbtn unconfirm-btn"
            });
            $(this).keyup(function () {
                var o = $.fn.getbytelength($.trim($(this).val()));
                if (o > 0) {
                    $("#zoomSubmit a").removeClass("unconfirm-btn").addClass("confirm-btn");
                    $("#textCount").css({
                        color: "#3a9"
                    })
                } else {
                    $("#zoomSubmit a").removeClass("confirm-btn").addClass("unconfirm-btn");
                    $("#replyCommentId").val(0);
                    $("#textCount").css({
                        color: "#A8A8A8"
                    })
                }
                if (o > 140) {
                    $("#textCount").css({
                        color: "#f86"
                    })
                }
                if (o > 0 && o < 141) {
                    $("#zoomSubmit a").removeClass("unconfirm-btn").addClass("confirm-btn")
                } else {
                    $("#zoomSubmit a").removeClass("confirm-btn").addClass("unconfirm-btn");
                    $("#replyCommentId").val(0)
                }
            })
        }).focusout(function () {
            if ($("#commentta").val().length == 0) {
                $(this).val("说点什么吧……").addClass("error-input")
            } else {
                $(this).removeClass("error-input")
            }
        });
        var p = function (o) {
                $.post(uri("URI_ADD_BOARD_PIC_COMMENT_AGREE", o), function (u) {
                    if (u == 1) {
                        $("#spanAgree_" + o).text(parseInt($("#spanAgree_" + o).text()) + 1)
                    } else {
                        im.window.alert(u)
                    }
                }, "json")
            };
        window.deleteComment = function (v, u) {
            var o = "#commentLi" + u;
            im.window.confirm($(o), "确认要删除这条评论吗?", function () {
                $.delete_(uri("URI_ADD_RESHARE_COMMENT", v), {
                    commentId: u
                }, function (w) {
                    if (w.code == 1) {
                        $("#li" + u).remove()
                    } else {
                        im.window.alert("删除失败。", false)
                    }
                }, "json")
            })
        };
        var t = function (x, v, y, u, w) {
                y = $.trim(y);
                var o = uri("URI_ADD_RESHARE_COMMENT", v);
                if (y.length < 1) {
                    im.window.alert("请输入评论内容.", false);
                    return
                }
                if ($.fn.getbytelength(y) > 140) {
                    $("#commentta").addClass("commenttaover").animate({
                        opacity: "0.25"
                    }, 100).animate({
                        opacity: "1"
                    }, 100).animate({
                        opacity: "0.25"
                    }, 100).animate({
                        opacity: "1"
                    }, 100);
                    setTimeout("$('#commentta').removeClass('commenttaover')", 400);
                    return
                }
                if (u == consts("BOARD_PIC_SHARE_TYPE_QUESTION") && (x > 1 || x > 9)) {
                    im.window.alert("请选择评论积分.", false);
                    return
                }
                if (u == consts("BOARD_PIC_SHARE_TYPE_QUESTION") && (x > 1 || x > 3)) {
                    im.window.alert("请选择评论积分.", false);
                    return
                }
                $.post(o, {
                    comment: y,
                    score: x,
                    replyCommentId: w
                }, function (z) {
                    if (z == "" || z == null) {
                        $.fn.tipsMsm(false, "tips", "评论失败");
                        return false
                    }
                    $("#tips").show();
                    $.fn.tipsMsm(true, "tips", "评论成功");
                    n(u, z)
                }, "json")
            };
        var n = function (u, v) {
                $.get(uri("URI_CERTIFY_GET", v.userId), function (x) {
                    var w;
                    if (v != null) {
                        if (x != null) {
                            w = makeCommentLi(u, v, loginUser.avatarTiny, x.certifyType);
                            $(w).prependTo($("#commentList"))
                        } else {
                            w = makeCommentLi(u, v, loginUser.avatarTiny, 0);
                            $(w).prependTo($("#commentList"))
                        }
                    } else {
                        w = makeCommentLi(u, v, loginUser.avatarTiny, 0);
                        $(w).prependTo($("#commentList"))
                    }
                }, "json");
                if ($("#commentCountContent").html() == "评论") {
                    $("#commentCountContent").html('<h2 class="yahei"><span id="commentCountNum">1</span>条评论</h2>')
                } else {
                    var o = parseInt($("#commentCountNum").text()) + 1;
                    $("#commentCountNum").text(o)
                }
                $("#zoomSubmit .submitbtn").removeClass("confirm-btn").addClass("unconfirm-btn");
                $("#zoomSubmit #textCount").text(0);
                $("#txtComment").val("");
                $("#divconfirm em").text(0);
                $("#commentta").val("");
                $("#replyCommentId").val(0)
            };
        $("#zoomDetail .confirm-btn").off().on("click", function () {
            if ($(this).hasClass("unconfirm-btn")) {
                return
            }
            var u = $("#commentta").val();
            var o = $("#replyCommentId").val();
            if (u.Trim() == "" || u.Trim() == "说点什么吧……") {
                return false
            }
            $(this).removeClass("confirm-btn").addClass("unconfirm-btn");
            t(0, f, u, 0, o)
        });
        window.makeCommentLi = function (w, y, o, v) {
            var u = loginUser.id;
            var z = d;
            var x = new Array();
            x.push('<li id="li' + y.id + '" class="cf">');
            x.push('	<div class="avatar">');
            x.push('		<a href="' + uri("URI_USER", y.userId) + '" usercard="' + y.userId + '" havecard="1"><img src="' + o + '" /> </a>');
            x.push("	</div>");
            x.push('	<div class="usay">');
            x.push("	<h3>");
            x.push('<a href="' + uri("URI_USER", y.userId) + '" usercard="' + y.userId + '" havecard="1">' + y.userName + "</a>");
            if (v == consts("CERTIFY_COMPANY")) {
                x.push('<span class="ctf-icon small-ctf-w" title="认证专家"></span>')
            }
            if (v == consts("CERTIFY_USER")) {
                x.push('<span class="ctf-icon small-ctf-star-w" title="Kejian.TV认证达人"></span>')
            }
            x.push("</h3>");
            x.push("<p>" + y.commentHtmlEscape + "</p>");
            x.push("</div>");
            x.push('<div class="date">');
            if (u > 0 && (u == y.userId || z == u)) {
                x.push('<a id="commentLi' + y.id + '" onclick="deleteComment(' + y.reshareId + "," + y.id + ');" href="###">删除</a>')
            }
            if (u > 0 && z == u && u != y.userId) {
                x.push('<span class="gray">&nbsp;|&nbsp;</span>')
            }
            if (u > 0 && u != y.userId) {
                x.push('<a onclick="replyComment(' + y.id + ", '" + y.userName + '\');" href="###">回复</a>')
            }
            x.push('<br /><span class="gray">' + y.intervalTime + "</span>");
            x.push("</div>");
            x.push("</li>");
            return x.join("")
        };
        loadComment(1)
    }, "html");
    window.loadComment = function (g) {
        $.get(uri("URI_ADD_RESHARE_COMMENT_LIST", f, g), function (p) {
            var n = new Array();
            for (var m in p.comments.result) {
                var o = p.comments.result[m];
                var q = 0;
                var k = "/thumb/head_30.jpg";
                var l = 0;
                if (p.avatars[o.userId] != undefined && p.avatars[o.userId] != "") {
                    k = p.avatars[o.userId]
                }
                if (p.userCertifys[o.userId] != undefined && p.userCertifys[o.userId] != "") {
                    l = p.userCertifys[o.userId]
                }
                var h = makeCommentLi(q, o, k, l);
                n[m] = h
            }
            $(".commentPage").prevAll().remove();
            $(n.join("")).prependTo($("#commentList"));
            im2Page.pageSize = p.comments.totalPageCount;
            im2Page.divId = "page";
            im2Page.ajaxFunctionName = "window.loadComment";
            im2Page.pageHtml(p.comments.pageNo)
        })
    };
    $("body").addClass("unscroll");
    if (jQuery.browser.msie && parseInt(jQuery.browser.version) == 7) {
        $("html").addClass("unscroll")
    }
    $("#zoomButt").off().on("click", function () {
        e()
    });
    $(document).keyup(function (g) {
        if (g.keyCode == 27) {
            e()
        }
    });
    $("body").on("click", function (g) {
        if (g.target.className == "zoomlayer") {
            e()
        }
    });

    function e() {
        $("#zoomDetail a").unbind("click");
        $(".altdiv").remove();
        $("#zoomDetail").remove();
        $("body").removeClass("unscroll");
        $("html").removeClass("unscroll");
        if (window.history.replaceState) {
            window.history.replaceState({}, 0, c)
        }
    }
    $("#zoomDetail .btn-xcollect").off().on("click", function () {
        if (typeof loginUser.id == "undefined" || loginUser.id == "") {
            var h = window.location.pathname;
            window.location.href = "/login?flag=4&p=" + h;
            return
        }
        var g = window.reshareC;
        reshare(g)
    });
    var a = function (g) {
            $("#addlabel-tips").find("em").text(g);
            $("#addlabel-tips").show();
            $("#tag_val").parent().addClass("intexterror").stop().animate({
                opacity: "0.25"
            }, 100).animate({
                opacity: "1"
            }, 100).animate({
                opacity: "0.25"
            }, 100).animate({
                opacity: "1"
            }, 100);
            setTimeout(function () {
                $("#addlabel-tips").hide();
                $("#tag_val").parent().removeClass("intexterror")
            }, 2000)
        };
    $("#tag_val").off().on("keyup focus", function (g) {
        if ($(this).val() == "+标签") {
            $(this).val("")
        }
        $("#but_add_tag").animate({
            width: "40px"
        }, 100);
        if (g.keyCode == 13) {
            $("#but_add_tag").click();
            $("#tag_val").focus()
        }
    }).on("blur", function () {
        if ($(this).val().Trim() == "") {
            $(this).val("+标签")
        }
    });
    $("#but_add_tag").off().on("click", function () {
        var g = $("#tag_val").val();
        if ($.fn.getbytelength($.trim(g)) < 1 || $("#tag_val").val() == "+标签") {
            a("标签不能为空!");
            return false
        }
        if ($.fn.getbytelength(g) > 7) {
            a("标签最长14个字符!");
            return false
        }
        var h = false;
        $("#detailLabel > span[class='btn-customlabel']").each(function () {
            if ($.trim($(this).text()) == $.trim(g)) {
                h = true;
                return false
            }
        });
        if (h == true) {
            a("标签重复!");
            return false
        }
        var k = $("#detailLabel > span[class='btn-customlabel']").size();
        if (k == 10) {
            a("标签数不可以超过10个!");
            return false
        }
        $("#but_add_tag").animate({
            left: "50px"
        }, 100);
        $.ajax({
            type: "POST",
            url: uri("URI_SHARE_TAG_ADD", $("#shareId").val()),
            data: {
                tag: g
            },
            dataType: "json",
            success: function (m) {
                if (m != null) {
                    var l = '<span class="btn-customlabel"><a href="/tagSearch/' + m.id + '">' + m.htmlTag + '</a><a class="close" tag_id="' + m.id + '" board_pic_id="' + f + '"></a></span>';
                    $(l).appendTo($("#detailLabel"));
                    $("#tag_val").attr("value", "")
                } else {
                    a("标签数不可以超过10个!")
                }
            }
        })
    });
    $("#detailLabel .close").off().on("click", function () {
        var g = $(this).attr("tag_id");
        var h = $(this).attr("board_pic_id");
        var k = $(this).parent();
        $.delete_(uri("URI_SHARE_TAG_DELETE", g, $("#shareId").val()), function (l) {
            if (l > 0) {
                k.remove()
            }
        })
    })
};
im.zm.showTimes = function (a, d, c, b) {
    this.startTime = a;
    this.lastTime = d;
    this.obj = c;
    this.step = b
};
im.zm.showTimes.prototype = {
    atTime: function (o, n) {
        var f = this;
        var h = (f.lastTime - f.startTime);
        var m = 24 * 60 * 60 * 1000;
        var e = h / m;
        var l = Math.floor(e);
        var g = (e - l) * 24;
        var d = Math.floor(g);
        var k = (g - d) * 60;
        var q = Math.floor((g - d) * 60);
        var p = Math.floor((k - q) * 60);
        var c = Math.ceil(Math.floor(((k - q) * 60 - p) * 1000) / 100) * 10;
        if (c == 100) {
            c = 99
        }
        if (f.startTime >= f.lastTime) {
            arguments[0]()
        } else {
            arguments[1](f.getStr(l), f.getStr(d), f.getStr(q), f.getStr(p), f.getStr(c));
            f.startTime = parseInt(f.startTime) + f.step;
            window.setTimeout(function () {
                f.atTime(o, n)
            }, f.step)
        }
    },
    getStr: function (a) {
        return a.toString().length < 2 ? "0" + a : a
    }
};
im.zm.delayImg = {
    init: function (e) {
        var d = this,
            c;
        d.imgObj = $("img[data-delay]");
        var b = document.documentElement.clientHeight;
        var a = $(e).scrollTop();
        if (!d.imgObj.length) {
            return
        }
        this.imgObj.each(function () {
            if (typeof e == "string") {
                c = $(this).offset().top;
                a = $(e).offset().top
            } else {
                c = $(this).offset().top
            }
            if (c < b + a) {
                d.delayImg.push($(this))
            }
        });
        d.run(d.delayImg)
    },
    imgObj: null,
    delayImg: [],
    run: function (b) {
        if (b.length == 0) {
            return
        }
        for (var c = 0, a = b.length; c < a; c++) {
            b[c].attr("src", b[c].data("delay")).removeAttr("data-delay")
        }
        this.delayImg = []
    }
};
im.zm.load = function () {
    if (!arguments[0]) {
        return
    }
    if (typeof arguments[0] == "string") {
        a(arguments[0])
    } else {
        for (var c = 0, b = arguments[0].length; c < b; c++) {
            a(arguments[0][c])
        }
    }function a() {
        var d = document.createElement("SCRIPT");
        d.setAttribute("type", "text/javascript");
        d.setAttribute("charset", "utf-8");
        d.setAttribute("src", arguments[0]);
        document.getElementsByTagName("head")[0].appendChild(d)
    }
};
im.zm.scmAd = function (c) {
    var e = null,
        b = null,
        a = null;
    var d = {
        src1: null,
        src2: null,
        src: [],
        className: [],
        text: [],
        arr: [],
        timer: 1,
        nums: 0,
        init: function () {
            d.arr = d.getArr();
            d.goTo();
            d.animate()
        },
        getArr: function () {
            var f = [],
                l;

            function k(o) {
                return Math.floor(Math.random() * o + 1)
            }function m(p) {
                if (f.length == 0) {
                    return true
                }
                for (var o = 0; o < f.length; o++) {
                    if (p == f[o]) {
                        return false
                    }
                }
                return true
            }function g() {
                var o, n = 1;
                while (n > 0) {
                    o = k(d.src.length);
                    if (m(o)) {
                        break
                    } else {
                        n++
                    }
                }
                return o
            }
            for (var h = 0; h < d.src.length; h++) {
                f.push(g())
            }
            return f
        },
        goTo: function () {
            clearTimeout(e);
            e = null;
            if (d.nums > d.src.length - 1) {
                d.nums = 0
            }
            var k = d.src[d.arr[d.nums] - 1];
            var h = d.className[d.arr[d.nums] - 1];
            $("#c1").removeClass().addClass("png inviteadicon " + h);
            $("#t1 em").eq(1).text(d.text[d.arr[d.nums] - 1]);
            $("#c1").parent().attr("href", k);
            var g = 15;
            if (16 - d.timer == 0) {
                $("#t1 em").eq(0).text(15)
            } else {
                $("#t1 em").eq(0).text(16 - d.timer)
            }
            if (d.timer == g + 1) {
                d.timer = 1;
                var f;
                if (d.nums + 1 > d.src.length - 1) {
                    f = 0
                } else {
                    f = d.nums + 1
                }
                $("#c1").stop(true, true).css("left", 5).removeClass().addClass("png inviteadicon " + d.className[d.arr[f] - 1]);
                $("#t1 em").eq(1).text(d.text[d.arr[f] - 1]);
                $("#c1").parent().attr("href", d.src[d.arr[f] - 1]);
                $("#s2").stop(true, true).css("width", 0);
                d.animate();
                d.nums++
            } else {
                d.timer++
            }
            e = setTimeout(arguments.callee, 1000)
        },
        animate: function () {
            if (b) {
                clearInterval(b)
            }
            if (a) {
                clearInterval(a)
            }
            b = setInterval(function () {
                if (!document.getElementById("c1").style.left) {
                    document.getElementById("c1").style.left = 0
                }
                document.getElementById("c1").style.left = (parseInt(document.getElementById("c1").style.left) + 1) + "px"
            }, 88);
            a = setInterval(function () {
                if (!document.getElementById("s2").style.width) {
                    document.getElementById("s2").style.width = 0
                }
                document.getElementById("s2").style.width = (parseInt(document.getElementById("s2").style.width) + 1) + "px"
            }, 77)
        }
    };
    $.extend(d, c);
    d.init(c)
};
im.zm.autoLayout = function () {
    this.columnCount = 4;
    this.divWidth = 222;
    this.marginTop = 14;
    this.marginLeft = 14;
    this.colArray = [];
    this.freeLeft = 0;
    this.rightLoad = true;
    this.numbers = 0;
    this.isHasNextPage = true;
    this.pageAuto = false;
    this.searchPage = false;
    this.loading = true;
    this.isFirst = false;
    this.divId = 0;
    this.defaults = {}
};
im.zm.autoLayout.prototype = {
    init: function (b, c, a) {
        var d = {
            contentID: "",
            rightLoad: true,
            leftID: null,
            rightID: null,
            linkUrl: "",
            noText: "",
            loadingID: "",
            dataContent: "",
            callBack: null,
            isPosition: true,
            cols: null,
            colName: null
        };
        $.extend(this.defaults, d, b)
    },
    run: function () {
        var o, g, f, s, c, p = this;
        if (typeof options == "object") {
            c = autoLayout.defaults;
            o = c.linkUrl;
            dataContent = c.dataContent;
            if (c.isPosition) {
                if (!c.rightLoad) {
                    autoLayout.rightLoad = false
                }
                s = document.documentElement.clientWidth - 17;
                var m = document.documentElement.clientHeight;
                var t;
                var q = [];
                f = Math.floor((s + autoLayout.marginLeft) / (autoLayout.divWidth + autoLayout.marginLeft));
                g = 0;
                f = Math.max(f, 4);
                var b = f * 236 - 14 + "px";
                document.getElementById(c.contentID).style.width = b;
                $(".filterbar").css({
                    width: f * 236 - 14 - 16 + "px"
                }).show();
                if (autoLayout.pageAuto) {
                    var n = autoLayout.divWidth * (f - 1) + autoLayout.marginLeft * (f - 1) - 17 + "px";
                    document.getElementById("content").style.width = b
                }
                for (var l = 0; l < f; l++) {
                    q[l] = 0
                }
                if (document.getElementById(c.leftID)) {
                    $("#" + c.leftID).css({
                        display: "block",
                        left: g + "px",
                        top: q[0] + "px"
                    });
                    q[0] = ($("#" + c.leftID).height() + autoLayout.marginTop)
                }
                if (c.rightID) {
                    for (var a = 0, k = c.rightID.length; a < k; a++) {
                        var e = document.getElementById(c.rightID[a]),
                            r;
                        if (e) {
                            if (this.getImgH(e.getElementsByTagName("img")[0].src) == "head_190") {
                                r = 190
                            } else {
                                r = this.getImgH(e.getElementsByTagName("img")[0].src)
                            }
                            e.getElementsByTagName("img")[0].setAttribute("height", r);
                            if (/js-ad-show/g.test(e.id)) {
                                e.style.height = this.getImgH(e.getElementsByTagName("img")[0].src) + "px"
                            }
                            $("#" + c.rightID[a]).css({
                                position: "absolute",
                                display: "block",
                                left: g + autoLayout.divWidth * (f - 1) + autoLayout.marginLeft * (f - 1) + "px",
                                top: q[f - 1] + "px"
                            });
                            var d;
                            e.style.marginTop ? d = parseInt(e.style.marginTop) : d = 0;
                            q[f - 1] += (e.offsetHeight + autoLayout.marginTop + d)
                        }
                    }
                }
                if (!autoLayout.rightLoad) {
                    q.splice(q.length - 1, 1)
                }
                document.getElementById(autoLayout.defaults.contentID).style.height = Math.max.apply(Math, q) + "px"
            }
        } else {
            o = options;
            $("#imloading").css({
                visibility: ""
            });
            if (this.defaults.isPosition) {
                var s = document.documentElement.clientWidth;
                var f = Math.floor((s + autoLayout.marginLeft) / (autoLayout.divWidth + autoLayout.marginLeft));
                g = 0;
                var f = Math.max(f, 4);
                var b = f * 236 - 14 + "px";
                document.getElementById(autoLayout.defaults.contentID).style.width = b;
                var q = autoLayout.colArray;
                autoLayout.isIE ? autoLayout.opacityVal = 1 : autoLayout.opacityVal = 0.2
            }
        }
        autoLayout.loading = false;
        if (!sta) {
            $.ajax({
                type: "GET",
                url: encodeURI(o),
                dataType: "json",
                data: dataContent,
                async: true,
                success: function (h) {
                    $("#imloading").css({
                        visibility: ""
                    });
                    p.loadText(h);
                    _gaq.push(["_trackPageview", "/ajax/" + encodeURI(o)])
                }
            })
        } else {
            p.loadText(dataObj)
        }
    },
    loadText: function (data) {
        var _jsonMain = eval(json);
        var picBoard = _jsonMain.result;
        for (var j = 0, len = picBoard.length; j < len; j++) {
            var inserDiv = this.getHtml(picBoard[i]);
            if (autoLayout.defaults.isPosition) {
                $(document.getElementById(autoLayout.defaults.contentID)).append(inserDiv);
                autoLayout.numbers++;
                heightArray[cols] += (parseInt(document.getElementById(autoLayout.divId).offsetHeight) + autoLayout.marginTop)
            } else {
                if (autoLayout.defaults.colName) {
                    $(autoLayout.defaults.colName + cols).append(inserDiv)
                } else {
                    $("#col_" + cols).append(inserDiv)
                }
                autoLayout.numbers++
            }
            var _thisBoard = $(document.getElementById(autoLayout.divId));
            if (!autoLayout.isIE) {
                _thisBoard.stop(true, true).animate({
                    opacity: 1
                }, 800)
            }
            autoLayout.divId++
        }
        autoLayout.colArray = heightArray;
        if (autoLayout.defaults.isPosition) {
            document.getElementById(autoLayout.defaults.contentID).style.height = Math.max.apply(Math, heightArray) + "px"
        }
        $(".maskDiv").css({
            height: $("body").height()
        })
    },
    getHtml: function (J) {
        var g = _getWidth(J.mediumZoom);
        var t = _getHeight(J.mediumZoom);
        var k = "";
        var K = "";
        var q = "";
        var a, d;
        J.isSurprise ? d = "price-label small-label-gift" : d = "price-label small-label";
        a = '<div class="' + d + '"><span class="leftfold png"></span><span class="rightfold png"><a href="/courses/'+picBoard[j].boardId+'"'+(window.psvr_is_ie ? ' style="color:white"' : '')+'>' + picBoard[j].price + "</a></span></div>";
        if (picBoard[j].isSurprise) {
            a = '<div class="' + d + '"><span class="leftfold png"></span><span class="rightfold png">免费中</span></div>'
        }
        var h;
        if (picBoard[j].comments.length > 0) {
            K = _getComment(picBoard[j].comments, picBoard[j].avatars)
        }
        var F = "";
        picBoard[j].certifyType == 1 ? F = '<span class="ctf-icon small-ctf-g" title="Kejian.TV认证专家"></span>' : F = '<span class="ctf-icon small-ctf-star-g" title="Kejian.TV认证达人"></span>';
        var z, u, E;
        parseInt(picBoard[j].reshareCount) == 0 ? z = "" : z = '<em class="favourite-ico"></em><em>' + picBoard[j].reshareCount + "</em>";
        if (!parseInt(picBoard[j].commentCount)) {
            u = '<span style="display:none;"><span class="pointsNum">·</span><span>评论</span><span class="commentNum">0</span></span>';
            E = 'style="display:none;"'
        } else {
            u = '<span style="display:inline-block;"><span class="pointsNum">·</span><span>评论</span><span class="commentNum">' + picBoard[j].commentCount + "</span></span>";
            parseInt(picBoard[j].commentCount) - 2 > 0 ? E = 'style="display:block;"' : E = 'style="display:none;"'
        }
        var n, s, f, y, G;
        if (autoLayout.defaults.isPosition) {
            n = Math.min.apply(Math, heightArray);
            s = $.inArray(n, heightArray);
            f = freeLeft + autoLayout.divWidth * s + autoLayout.marginLeft * (s) + "px";
            y = n + "px";
            G = "absolute"
        } else {
            var c = [];
            for (var B = 0; B < autoLayout.defaults.cols.length; B++) {
                c.push(autoLayout.defaults.cols[B].height())
            }
            n = Math.min.apply(Math, c);
            s = $.inArray(n, c);
            f = 0;
            y = 0;
            G = ""
        }
        var A = picBoard[j].shareTitle;
        var C = unique(A.match(/(?:#[A-Za-z0-9\u4E00-\u9FA5]+#)/gi));
        var x = A;
        if (C) {
            for (var B = 0; B < C.length; B++) {
                x = A.replace(new RegExp(C[B], "gm"), '<a href="/tag?tag=' + C[B].substring(1, C[B].length - 1) + '" class="themTitle">' + C[B] + "</a>");
                A = x
            }
        }
        var v = "",
            m = 1;
        if (!picBoard[j].isOriginal) {
            v = picBoard[j].title;
            m = 0
        }
        if (picBoard[j].boardName == "我的收集") {
            q = ['<li class="share-owner cf"><a href="/users/' + picBoard[j].userId + '" class="avatar"><img src="' + picBoard[j].avatarTiny + '"  usercard="' + picBoard[j].userId + '" havecard="1"/></a>', '<div class="cmt-content"><p class="userinfo"><a havecard="1" href="/users/' + picBoard[j].userId + '" usercard="' + picBoard[j].userId + '" class="username changecolor">' + picBoard[j].nickName + "</a> " + F + "收集</p><p>" + v + "</p></div></li>"].join("")
        } else {
            q = ['<li class="share-owner cf"><a href="/users/' + picBoard[j].userId + '" class="avatar"><img src="' + picBoard[j].avatarTiny + '"  usercard="' + picBoard[j].userId + '" havecard="1"/></a>', '<div class="cmt-content"><p class="userinfo"><a havecard="1" href="/users/' + picBoard[j].userId + '" class="username changecolor" usercard="' + picBoard[j].userId + '">' + picBoard[j].nickName + "</a> " + F + '上传了此课件到课程 <a href="/courses/' + picBoard[j].boardId + '" class="boardname changecolor">' + picBoard[j].boardName + "</a></p><p>" + v + "</p></div></li>"].join("")
        }
        var b;
        if (picBoard[j].userId == loginUser.id) {
            b = '<div class="sharebutton" style="display:none;"><a class="btn-editshare png" href="javascript:void(0);" to="' + picBoard[j].id + '"></a></div>'
        } else {
            var H = "";
            if (_jsonMain.boards.length) {
                for (var w = 0, r = _jsonMain.boards.length; w < r; w++) {
                    var I = "";
                    if (haveBoardId(_jsonMain.boards[w].id, picBoard[j].selectedBoardIds)) {
                        I = "select-ico"
                    } else {
                        I = "blank-ico"
                    }
                    H += '<a boardId = "' + _jsonMain.boards[w].id + '" title="' + _jsonMain.boards[w].boardName + '"><span class="' + I + '"></span>' + $.fn.fixStr(_jsonMain.boards[w].boardName, 14, "...") + "</a>"
                }
            }
            b = ['<div class="sharebutton" style="display:none;"><a class="btn-collect png" href="###"></a><a class="btn-select png" href="###"></a></div>', '<div class="boardlist" style="display:none;">', "<h3>上传了此课件到课程</h3> " + H, "</div>"].join("")
        }
        var l, D;
        if (picBoard[j].isSurprise) {
            l = '<div class="getsur"><a href="' + uri("URI_BOARD_PIC", picBoard[j].id) + '" target="_blank" class="greenbtn btn-xxlargegreen yahe">立即免费领取</a></div>';
            D = ""
        } else {
            var e = (loginUser.avatarTiny ? 'src="' + loginUser.avatarTiny + '"' : "");
            l = ['<ul class="comment">' + q + K + "</ul>", '<div class="add-comment" style="display:none;">', '<h3 class="cf"><a class="commentClose">close</a>添加评论</h3>', '<div class="commentbody cf">', '<a class="avatar"><img  ' + e + " /></a>", '<div class="comment-form">', '<span class="input-border">', '<textarea class="comment-textarea"></textarea>', "</span>", '<div class="cmt-submit cf">', '<span class="floatright count"><em class="lightblue">0</em>/140</span>', '<a href="javascript:void(0);" class="unpincomment">提交</a>', "</div>", "</div>", "</div>", "</div>", '<div class="morecomment" ' + E + '><a href="' + uri("URI_BOARD_PIC", picBoard[j].id) + '" class="changecolor" target="_blank">还有<em>' + (parseInt(picBoard[j].commentCount) - 2) + "</em>条评论&gt;&gt;</a></div>"].join("");
            D = '<a class="lk-comment" style="display:none;"></a>' //todo:评论
        }
        return ['<div class="share-mod" id="' + autoLayout.divId + '" userId = "' + picBoard[j].userId + '" sharePicId = "' + picBoard[j].sharePicId + '" dataId="' + picBoard[j].id + '" columns="' + s + '" style="position:' + G + ";opacity:" + autoLayout.opacityVal + ";left:" + f + ";top:" + y + ';">', '<div class="actions">' + b + "</div>", '<div class="sharecontainer">', '<div class="share-img" style="height:' + t + 'px;">' + a, '<a href="' + uri("URI_BOARD_PIC", picBoard[j].id) + '" target="_blank"><img class="picUrl" width="' + g + '" height="' + t + '" src="/zm_dian.gif" data-delay="' + picBoard[j].mediumZoom + '" alt="' + picBoard[j].shareTitle + '" title="' + picBoard[j].shareTitle + '" /></a>', "</div>", '<div class="shareprofile">', '<p class="contentsms" isorigin="' + m + '">' + x + "</p>", '<p class="quantity">' + D + '<span class="favourite-num">' + z + "</span></p>", "</div>", "</div>", '<div class="commentcontainer">' + l, "</div>", "</div>"].join("")
    },
    update: function () {},
    unique: function (e) {
        e = e || [];
        var b = {};
        for (var d = 0; d < e.length; d++) {
            var c = e[d];
            if (typeof (b[c]) == "undefined") {
                b[c] = 1
            }
        }
        e.length = 0;
        for (var d in b) {
            e[e.length] = d
        }
        return e
    },
    hasIt: function (e, b) {
        var d = false;
        for (var c = 0, a = b.length; c < a; c++) {
            if (e == b[c]) {
                d = true;
                break
            }
        }
        return d
    },
    filter: function (a) {
        a = a.replace(/</g, "&lt;");
        a = a.replace(/>/g, "&gt;");
        a = a.replace(/"/g, "&quot;");
        return a
    },
    getComment: function (d, h) {
        var b = [];
        for (var a = 0; a < d.length; a++) {
            var g = "",
                f, c = "",
                e;
            if (loginUser.id != d[a].userId) {
                g = '<a class="gray changecolor">回复</a>'
            }
            if (typeof h[d[a].userId] == "string") {
                f = h[d[a].userId]
            }
            if (d[a].certifyType == 1) {
                c = '<span class="ctf-icon small-ctf-g" title="Kejian.TV认证专家"></span>'
            } else {
                if (d[a].certifyType == 2) {
                    c = '<span class="ctf-icon small-ctf-star-g" title="Kejian.TV认证达人"></span>'
                }
            }
            e = d[a].comment;
            xHtml = ['<li class="cf"><a href="/users/' + d[a].userId + '" class="avatar"><img havecard="1" src="' + f + '" usercard="' + d[a].userId + '"/></a>', '<div class="cmt-content"><p class="userinfo"><a href="/users/' + d[a].userId + '" class="username changecolor" havecard="1" usercard="' + d[a].userId + '">' + d[a].userName + "</a>" + c + "</p>", '<p commentId="' + d[a].id + '">' + e + "&nbsp;" + g + "</p></div></li>"].join("");
            b[a] = xHtml
        }
        return b.join("")
    },
    getImgH: function (a) {
        var c = a.split("/"),
            b;
        b = c[c.length - 1].split(".");
        return b[b.length - 2]
    },
    getImgW: function (a) {
        var c = a.split("/"),
            b;
        b = c[c.length - 1].split(".");
        return b[b.length - 3]
    },
    debounceFunc: function (d, a, b) {
        var e;
        return function c() {
            var h = this,
                g = arguments;

            function f() {
                if (!b) {
                    d.apply(h, g)
                }
                e = null
            }
            if (e) {
                clearTimeout(e)
            } else {
                if (b) {
                    d.apply(h, g)
                }
            }
            e = setTimeout(f, a || 30)
        }
    },
    reshareCount: function () {},
    getEle: function () {},
    updateHeight: function () {},
    addEvent: function () {},
    scrollEvent: function () {}
};
im.zm.newcw = function () {
    var g, f, c;
    g = [
    	'<div class="dialogbody dia-landing cf">',
    	'<div class="dia-left" style="height:388px;">',
    	'<div class="dia-guid f18 yahei orange">我要上传分享课件</div>',
    	'<div class="dia-desc">1、对于网上已有的课件，只需贴一个链接，系统即可自动导入</div>',
    	'<ul class="dia-login cf dia-psvr" id="js-log2">',
    	'<li><a class="youku" href="#"><em class="png">视频网站视频（如优酷,土豆）</em></a></li>',
    	'<li><a class="emule" href="#"><em class="png">原始下载地址（如http,ed2k）</em></a></li>',
    	'<li><a class="sina" href="#"><em class="png">外站资源链接（如新浪爱问）</em></a></li>',
    	"</ul>",
    	'<div class="dia-desc" style="padding:0;margin:10px 0 -5px">2、上传文件，虽然稍微麻烦一点，但绝对靠谱：）</div>',
    	'<ul class="dia-login cf dia-psvr" id="js-log3" style="margin-top: 18px;"><li><a class="upload" href="/account/auth/renren"><em class="png">上传课件</em></a></li></ul>',
    	'<div class="dia-zmbottom cf">',
    	"</div>",
    	"</div>",
    	'</div>'
    ].join("");
    var e, a;
    if (arguments.length > 0) {
        a = arguments[0]
    } else {
        e = document.location.href;
        a = e.replace(new RegExp("http://" + document.location.host), "")
    }
    $("#loginLayout").definedDialog({
        title: "",
        width: 400,
        height: 0,
        showClose: !0,
        open: !1,
        modal: !0,
        show: "normal",
        buttons: null,
        html: g,
        dialogClass: "dialog3",
        closeCallBack: function () {
            try {
                _gaq.push(["_trackPageview", "/c_l_c/" + a])
            } catch (h) {}
        }
    });
    $("#js-log2 .youku").attr("href", "/coursewares/new_youku");
    $("#js-log2 .emule").attr("href", "/coursewares/new_emule");
    $("#js-log2 .sina").attr("href", "/coursewares/new_sina");
    $("#js-log3 .upload").attr("href", "/upload");
};
im.zm.psvrsharedown = function (closeCallBack) {
    var g, f, c, j_h1;
    j_h1 = jQuery('#core_cw_h1');
    psvr_elem = jQuery(jQuery('#psvrsharedown_thumbnails')[0].outerHTML);
		psvr_elem.addClass("setup");
		psvr_elem.attr('id',"psvrsharedown_thumbnails_small");
		psvr_elem.attr('style',"margin:0;z-index:7777;position:absolute;top: 33px;left: 22px;");
		psvr_elem.find('.scrubber').attr('style'," z-index: 9999; width: 208px; margin-left: 0px; ");
		psvr_elem.find('.preview_info').remove();
		g = [
			'<div id="psvrsharedown_bulk">',
			'<div class="__sdk">'+psvr_elem[0].outerHTML+'</div>',
      '<img src="'+KTV.psvrsharedown_dialog_src+'" style="position:absolute;z-index:8888;top:15px"/>',
      '<a href="javascript:void(0)" id="psvrsharedown_thumbnails_btn1" class="'+(j_h1.data('yigoumai') ? 'already' : '')+'" style="position:absolute;z-index:8899;top:289px;left:22px">立即购买</a>',
      '<a href="javascript:void(0)" id="psvrsharedown_thumbnails_btn2" class="'+(j_h1.data('shoucang') ? 'already' : '')+'" style="position:absolute;z-index:8899;top:340px;left:22px">加入收藏</a>',
			'<div id="psvrsharedown_yigoumai" class="'+(j_h1.data('yigoumai') ? 'yigoumai' : '')+'">&nbsp;</div>',
			'<div id="psvrsharedown_big_window">&nbsp;</div>',
      '<div class="psvrsharedown_spinners" id="psvrsharedown_spinner1" style="display:none" />',
      '<div class="psvrsharedown_spinners" id="psvrsharedown_spinner2" style="display:none" />',
			'<div id="psvrsharedown_title">'+j_h1.html()+'</div>',
			'<div id="psvrsharedown_subtitle">'+jQuery('#core_cw_h2').html()+'</div>',
			'<a class="js-close close" style="display:block;width:46px;height:50px;background: transparent url('+KTV.psvrsharedown_ijiojioji_src+') no-repeat scroll top left;text-indent:-9999em;position:absolute;top:0;left:613px;z-index:9999">Close</a>',
			'</div>'
    ].join("");
    var e, a;
    if (arguments.length > 0) {
        a = arguments[0]
    } else {
        e = document.location.href;
        a = e.replace(new RegExp("http://" + document.location.host), "")
    }

    $("#loginLayout").definedDialog({
        title: "",
        width: 658,
        height: 472,
        showClose: !!0,
        open: !1,
        modal: !0,
        show: "normal",
        buttons: null,
        html: g,
        dialogClass: "dialog_psvrsharedown",
        closeCallBack: closeCallBack
    });
    $("#js-log .sina").attr("href", "/account/auth/weibo");
    $("#js-log .qzone").attr("href", "/account/auth/qq_connect");
    $("#js-log .qq").attr("href", "");
    $("#js-log .renren").attr("href", "/account/auth/renren");
    $("#js-log .taobao").attr("href", "");
    $("#js-log .douban").attr("href", "/account/auth/douban");
    $("#js-log .google").attr("href", "/account/auth/google_oauth2");
    $("#js-log .github").attr("href", "/account/auth/github");
    $("#register").attr("href", "/register");
  	$('#psvrsharedown_thumbnails_btn1').live('click',function(){
      if($(this).hasClass('already')){
        return false;
      }
      if($(this).hasClass('insufficient')){
        return false;
      }
      window.meiqianle=true;
      window.scrollTo(0,0);
      $('body').animate({'padding-top':375},{duration: 500, queue:false});
      $('#psvrsharedown_sorry').animate({'height':375},{duration: 500, queue:false});
      $('#masksDiv0').animate({'margin-top':375},{duration: 500, queue:false});
      $('#loginLayout').animate({'margin-top':375},{duration: 500, queue:false});
      window.disable_scroll();
      $('#psvrsharedown_thumbnails_btn1').addClass('insufficient');
      // tmp = this;
      //       $('#psvrsharedown_spinner1').show();
      // $.ajax({
      //   url:'/ajax/add_to_playlist_by_id',
      //   type:'POST',
      //         data:{'authenticity_token':window.form_authenticity_token,'pid':$('#core_cw_h1').data('shoucang-id'),'cwid':$('#core_cw_h1').data('cw-id')},
      //   dataType:'json'
      // }).done(function(json){
      //         $('#psvrsharedown_thumbnails_btn1').removeClass('active_loading');
      //         $('#psvrsharedown_spinner1').hide();
      // 
      //         // $('#psvrsharedown_thumbnails_btn1').addClass('already');
      // });
  	});



  	$('#psvrsharedown_thumbnails_btn2').live('click',function(){
      if($(this).hasClass('already')){
        return false;
      }
  		tmp = this;
      $('#psvrsharedown_spinner2').show();
  		$.ajax({
  			url:'/ajax/add_to_playlist_by_id',
  			type:'POST',
        data:{'authenticity_token':window.form_authenticity_token,'pid':$('#core_cw_h1').data('shoucang-id'),'cwid':$('#core_cw_h1').data('cw-id')},
  			dataType:'json'
  		}).done(function(json){
        $('#psvrsharedown_thumbnails_btn2').removeClass('active_loading');
        $('#psvrsharedown_spinner2').hide();
        if(json.status == 'failed'){
          alert(json.reason);
  			}
        $('#psvrsharedown_thumbnails_btn2').addClass('already');
  		});
  	});

		$("#psvrsharedown_big_window").hover(function(){
			jQuery('#psvrsharedown_thumbnails_btn1').addClass('hover');
			jQuery('#psvrsharedown_bulk div.scrubber').css({'opacity':1,'visibility':'visible'});
		}).mousedown(function(){
			jQuery('#psvrsharedown_thumbnails_btn1').addClass('active');
		}).mouseup(function(){
			jQuery('#psvrsharedown_thumbnails_btn1').removeClass('active');
      $('#psvrsharedown_thumbnails_btn1').trigger('click');
		}).mousemove(function (a) {
				var psvr_b = jQuery('#psvrsharedown_big_window'),
				    psvr_left_fix = jQuery('#loginLayout').position().left;
        var b = jQuery('#psvrsharedown_thumbnails_small'),
            c = b.closest(".presentation"),
            d = b.find(".scrubbed"),
            e = parseInt(c.attr("data-slide-count"), 10);
        if (!b.hasClass("setup")) {
            b.addClass("setup");
            var f = c.attr("data-id"),
                g = b.find("img").attr("src").replace(/0\.jpg$/, "");
            for (var h = 1; h < e; h++) b.prepend('<img src="' + g + h + '.jpg" alt="Slide ' + (h + 1) + '" class="timeline" data-slide="' + h + '" style="display:none;" />')
        }
        var i = 180,
            j = a.pageX - psvr_b.position().left - 15 - psvr_left_fix,
            k = j > 180 ? 180 : j < 0 ? 0 : j,
            l = k / i,
            m = Math.floor(l * e) - 1;
        m > e && (m = e), m < 0 && (m = 0), b.find("img[data-slide]:visible").hide(), b.find("img[data-slide=" + m + "]").show(), b.find(".scrubbed").width(Math.round((m + 1) * 100 / e) + "%")
    }).mouseleave(function () {
      // jQuery('#psvrsharedown_thumbnails_small').find("img[data-slide]:visible").hide();
			jQuery('#psvrsharedown_thumbnails_btn1').removeClass('hover');
			jQuery('#psvrsharedown_thumbnails_btn1').removeClass('active');			
			jQuery('#psvrsharedown_bulk div.scrubber').css({'opacity':0,'visibility':'hidden'});
    })
    function b() {
      return true;//todo:captcha
        var h = new Date();
        im("#verifyImg").attr("src", "/captcha/image.html?t=" + h.getTime());
        $("#kapchaTr").show();
        $("#zmjsDiaLeft").css({
            height: "424px"
        });
        $("#zmjsDiaRight").css({
            height: "364px"
        })
    }function d() {
        $("#kapchaTr").hide();
        $("#zmjsDiaLeft").css({
            height: "380px"
        });
        $("#zmjsDiaRight").css({
            height: "320px"
        })
    }
    $("#hasZM").off().on("click", function () {
        var m, p, n, k, h, o;
        m = $("#js-log .sina").attr("href");
        p = $("#js-log .qq").attr("href");
        n = $("#js-log .qzone").attr("href");
        k = $("#js-log .renren").attr("href");
        h = $("#js-log .taobao").attr("href");
        o = $("#js-log .douban").attr("href");
        $("#loginLayout").definedDialog("close");
        $("#loginLayout").definedDialog({
            title: "",
            width: 646,
            height: 457,
            showClose: !!0,
            open: !0,
            modal: !0,
            show: "normal",
            buttons: null,
            html: f,
            dialogClass: "dialog3",
            closeCallBack: function () {
                try {
                    _gaq.push(["_trackPageview", "/c_l_c/" + a])
                } catch (q) {}
            }
        });
        $("#js-log2 .sina").parent().attr("href", m);
        $("#js-log2 .qzone").parent().attr("href", p);
        $("#js-log2 .qq").parent().attr("href", n);
        $("#js-log2 .renren").parent().attr("href", k);
        $("#js-log2 .taobao").parent().attr("href", h);
        $("#js-log2 .douban").parent().attr("href", o);
        $("#hasMZ").off().on("click", function () {
          $('#loginLayout').find(".js-close").trigger("click");
          im.zm.login();
          $("#loginLayout").definedDialog("open");
        });
        var l = !1;
        $("#changePic").click(function () {
            b()
        });
        var email_check_psvr = function () {
            var q = im.user.validate.checkEmail(this, false);
            if (q) {
                $.ajax({
                    type: "post",
                    url: "/ajax/logincheck",
                    data: {
                        userEmail: $("#userEmail").val()
                    },
                    success: function (r) {
                        r == 1 ? l = !0 : l = !1;
                        if (r == '0') {
                          im.user.validate.thisObjTrue('#userEmail');
                          d();
                        } else {
                          im.user.validate.thisObjError('#userEmail',r);
                          b();
                        }
                    }
                })
            }
        }
        $("#userEmail").on("blur", email_check_psvr);
        $('#userEmail').bind("input.autocomplete", email_check_psvr);
        $('#userPassword').keydown(function (q) {
            if (q.which == 13) {
                $("#js-login").click()
            }
        });
        $("#js-login").off().on("click", function () {
          console.log('js-login clicked');
          $(this).parents('form')[0].submit();
          return false;//todo captcha
            if (!(im.user.validate.checkEmail(im("#userEmail")) && im.user.validate.checkPassword(im("#userPassword")))) {
                return
            }
            var q = "",
                r = !1;
            if (l) {
                r = !0;
                q = $("#captcha").val()
            } else {
                q = ""
            }
            $.ajax({
                type: "post",
                url: "/ajaxlogin",
                data: {
                    userEmail: $("#userEmail").val(),
                    userPassword: $("#userPassword").val(),
                    userKeepLogin: $("#userKeepLogin").val(),
                    pageNeedCaptcha: r,
                    captcha: q
                },
                success: function (s) {
                    switch (s.status) {
                    case 1:
                        if (arguments.length > 0) {
                            document.location.href = a
                        } else {
                            document.location.reload()
                        }
                        break;
                    case 2:
                        $("#errortips1").text("邮箱或者密码错误").attr("class", "errortips").show();
                        break;
                    case 3:
                        $("#errortips1").text("验证码错误").attr("class", "errortips").show();
                        break;
                    case 4:
                        $("#errortips1").text("账号或密码错误，请重试").attr("class", "errortips").show();
                        break;
                    case 5:
                        $("#errortips1").text("该账号已被冻结").attr("class", "errortips").show();
                        break;
                    case 6:
                        l = !0;
                        $("#errortips1").text(s.desc).attr("class", "errortips").show();
                        b();
                        break;
                    default:
                        return false
                    }
                }
            })
        })
    })

};
im.zm.login = function () {
//important

    var g, f, c;
    if('ibeike'==window.psvr_subject){
      g = [
        '<div class="dialogbody dia-landing cf">',
        '<div class="dia-left" style="height:388px;">',
        '<div class="dia-guid f18 yahei orange">登录/注册新用户</div>',
        '<div class="dia-desc">1、用人人网账户登录</div>',
        '<a class="renren" href="/account/auth/renren"><img class="core_renren" src="'+KTV.renren_src0+'" alt="用人人网账号登录" /></a>',
        '<div class="dia-desc" style="margin-top:22px">2、用iBeiKe账户登录</div>',
        '<a class="renren" href="/account/auth/spetial_ibeike"><img class="core_spetial"  src="'+KTV.spetial_src0+'" alt="用iBeiKe账号登录" /></a>',
        '<div class="dia-desc" style="padding:0;margin:22px 0 -5px">3、或者您可以使用电子邮箱登录或注册新用户</div>',
        '<div class="dia-zmbottom cf">',
        '<p class="floatleft f14"><a id="hasZM" href="javascript:void(0);">使用电子邮箱登录</a> / <a href="#" id="register">注册新用户</a></p>',
        "</div>",
        "</div>",
        '</div>'
      ].join("");
    }else{
      g = [
        '<div class="dialogbody dia-landing cf">',
        '<div class="dia-left" style="height:272px;">',
        '<div class="dia-guid f18 yahei orange">登录/注册新用户</div>',
        '<div class="dia-desc">1、用人人网账户登录，5秒完成</div>',
        '<a class="renren" href="/account/auth/renren"><img src="'+window.psvr_asset_host+'<%= asset_path '234_48dark.png'%>" alt="用人人网账号登录" /></a>',
        '<div class="dia-desc" style="padding:0;margin:22px 0 -5px">2、或者您可以使用电子邮箱登录或注册新用户</div>',
        '<div class="dia-zmbottom cf">',
        '<p class="floatleft f14"><a id="hasZM" href="javascript:void(0);">使用电子邮箱登录</a> / <a href="#" id="register">注册新用户</a></p>',
        "</div>",
        "</div>",
        '</div>'
      ].join("");
    }
    f = [
    	'<div class="dialogbody dia-landing cf">',
    	'<div class="dia-left" style="height:380px;" id="zmjsDiaLeft">',
    	'<div class="dia-guid f18 yahei orange">使用电子邮箱登录/注册</div>',
    	'<form accept-charset="UTF-8" action="/account/sign_in" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="'+$('meta[name=csrf-token]').attr('content')+'" /></div><input type="hidden" name="redirect_to" value="'+window.location.pathname+'"/>',
    	"<table>",
    	'<colgroup><col width="70"><col width="*"></colgroup>',
    	"<tr>",
    	'<td class="tdleft">邮箱：</td>',
    	'<td class="tdmail">',
    	'<span class="ioginInput">',
    	'<span class="innerborder">',
    	'<input type="text" class="deftest" id="userEmail" name="user[email]" value="" onfocus="im.user.validate.thisFocus(this , \'请输入注册邮箱\');"/>',
    	"</span>",
    	"</span>",
    	'<span class="errortips" id="errortips1"></span></td>',
    	"</tr>",
    	"<tr>",
    	'<td class="tdleft">密码：</td>',
    	'<td class="tdpassword">',
    	'<span class="ioginInput">',
    	'<span class="innerborder"><input type="password" maxlength="16" class="deftest" id="userPassword" name="user[password]" onfocus="im.user.validate.thisFocus(this , \'请输入密码\');"  onblur="im.user.validate.checkPassword(this , false);"/></span>',
    	"</span>",
    	'<span class="errortips" id="errortips2"></span>',
    	"</td>",
    	"</tr>",
    	'<tr id="kapchaTr" style="display:none;">',
    	'<td class="tdleft">验证码：</td>',
    	"<td>",
    	'<span class="ioginInput kap" style="width:100px;vertical-align:middle">',
    	'<span class="innerborder" style="margin-right:10px;"><input type="text" class="deftest" id="captcha" style="width:85px ;float:left\9; " name="captcha" maxlength="4" />',
    	"</span>",
    	"</span>",
    	'<span id="imgSpan" style="vertical-align:middle;"><img id="verifyImg" /></span>',
    	'<span id="changePic"  class="blue" style="cursor:pointer; margin-left:6px">换一张</span><span id="kaptchaTip" class="false stata" style="width:110px ;font-size:12px ; margin-left:4px; vertical-align: text-bottom;  vertical-align: middle\9;display:none"></span>',
    	"</td>",
    	"</tr>",
    	"<tr>",
    	"<td></td>",
    	'<td class="dia-autologin"><input type="checkbox" id="userKeepLogin" name="userKeepLogin" checked="checked" /><label for="autologin">下次自动登录</label></td>',
    	"</tr>",
    	"<tr>",
    	"<td></td>",
    	'<td class="dia-button"><a href="javascript:void(0)" id="js-login" class="btn-login">登录</a></td>',
    	"</tr>",
    	"</table></form>",
    	'<div class="dia-zmbottom2">',
    	'<p class="blue"><a href="/register">注册新用户</a><br><a href="/account/password/new">忘记密码？</a><br><a href="/account/confirmation/new">重发激活邮件</a> / <a href="/account/unlock/new">索取解锁邮件</a><br><a href="javascript:void(0)" id="hasMZ">使用第三方网站账号登录</a></p>',
    	"</div>",
    	"</div>",
    	"</div>"
    ].join("");
    var e, a;
    if (arguments.length > 0) {
        a = arguments[0]
    } else {
        e = document.location.href;
        a = e.replace(new RegExp("http://" + document.location.host), "")
    }
    $("#loginLayout").definedDialog({
        title: "",
        width: 400,
        height: 0,
        showClose: !0,
        open: !1,
        modal: !0,
        show: "normal",
        buttons: null,
        html: g,
        dialogClass: "dialog3",
        closeCallBack: function () {
            try {
                _gaq.push(["_trackPageview", "/c_l_c/" + a])
            } catch (h) {}
        }
    });
    $("#js-log .sina").attr("href", "/account/auth/weibo");
    $("#js-log .qzone").attr("href", "/account/auth/qq_connect");
    $("#js-log .qq").attr("href", "");
    $("#js-log .renren").attr("href", "/account/auth/renren");
    $("#js-log .taobao").attr("href", "");
    $("#js-log .douban").attr("href", "/account/auth/douban");
    $("#js-log .google").attr("href", "/account/auth/google_oauth2");
    $("#js-log .github").attr("href", "/account/auth/github");
    $("#register").attr("href", "/register");

    function b() {
      return true;//todo:captcha
        var h = new Date();
        im("#verifyImg").attr("src", "/captcha/image.html?t=" + h.getTime());
        $("#kapchaTr").show();
        $("#zmjsDiaLeft").css({
            height: "424px"
        });
        $("#zmjsDiaRight").css({
            height: "364px"
        })
    }function d() {
        $("#kapchaTr").hide();
        $("#zmjsDiaLeft").css({
            height: "380px"
        });
        $("#zmjsDiaRight").css({
            height: "320px"
        })
    }
    $("#hasZM").off().on("click", function () {
        var m, p, n, k, h, o;
        m = $("#js-log .sina").attr("href");
        p = $("#js-log .qq").attr("href");
        n = $("#js-log .qzone").attr("href");
        k = $("#js-log .renren").attr("href");
        h = $("#js-log .taobao").attr("href");
        o = $("#js-log .douban").attr("href");
        $("#loginLayout").definedDialog("close");
        $("#loginLayout").definedDialog({
            title: "",
            width: 430,
            height: 0,
            showClose: !0,
            open: !0,
            modal: !0,
            show: "normal",
            buttons: null,
            html: f,
            dialogClass: "dialog3",
            closeCallBack: function () {
                try {
                    _gaq.push(["_trackPageview", "/c_l_c/" + a])
                } catch (q) {}
            }
        });
        $("#js-log2 .sina").parent().attr("href", m);
        $("#js-log2 .qzone").parent().attr("href", p);
        $("#js-log2 .qq").parent().attr("href", n);
        $("#js-log2 .renren").parent().attr("href", k);
        $("#js-log2 .taobao").parent().attr("href", h);
        $("#js-log2 .douban").parent().attr("href", o);
        $("#hasMZ").off().on("click", function () {
          $('#loginLayout').find(".js-close").trigger("click");
          im.zm.login();
          $("#loginLayout").definedDialog("open");
        });
        var l = !1;
        $("#changePic").click(function () {
            b()
        });
        var email_check_psvr = function () {
            var q = im.user.validate.checkEmail(this, false);
            if (q) {
                $.ajax({
                    type: "post",
                    url: "/ajax/logincheck",
                    data: {
                        userEmail: $("#userEmail").val()
                    },
                    success: function (r) {
                        r == 1 ? l = !0 : l = !1;
                        if (r == '0') {
                          im.user.validate.thisObjTrue('#userEmail');
                          d();
                        } else {
                          im.user.validate.thisObjError('#userEmail',r);
                          b();
                        }
                    }
                })
            }
        }
        $("#userEmail").on("blur", email_check_psvr);
        $('#userEmail').bind("input.autocomplete", email_check_psvr);
        $('#userPassword').keydown(function (q) {
            if (q.which == 13) {
                $("#js-login").click()
            }
        });
        $("#js-login").off().on("click", function () {
          console.log('js-login clicked');
          $(this).parents('form')[0].submit();
          return false;//todo captcha
            if (!(im.user.validate.checkEmail(im("#userEmail")) && im.user.validate.checkPassword(im("#userPassword")))) {
                return
            }
            var q = "",
                r = !1;
            if (l) {
                r = !0;
                q = $("#captcha").val()
            } else {
                q = ""
            }
            $.ajax({
                type: "post",
                url: "/ajaxlogin",
                data: {
                    userEmail: $("#userEmail").val(),
                    userPassword: $("#userPassword").val(),
                    userKeepLogin: $("#userKeepLogin").val(),
                    pageNeedCaptcha: r,
                    captcha: q
                },
                success: function (s) {
                    switch (s.status) {
                    case 1:
                        if (arguments.length > 0) {
                            document.location.href = a
                        } else {
                            document.location.reload()
                        }
                        break;
                    case 2:
                        $("#errortips1").text("邮箱或者密码错误").attr("class", "errortips").show();
                        break;
                    case 3:
                        $("#errortips1").text("验证码错误").attr("class", "errortips").show();
                        break;
                    case 4:
                        $("#errortips1").text("账号或密码错误，请重试").attr("class", "errortips").show();
                        break;
                    case 5:
                        $("#errortips1").text("该账号已被冻结").attr("class", "errortips").show();
                        break;
                    case 6:
                        l = !0;
                        $("#errortips1").text(s.desc).attr("class", "errortips").show();
                        b();
                        break;
                    default:
                        return false
                    }
                }
            })
        })
    })

};
im.zm.autoImg = {
    timer: null,
    scroll: !1,
    width: 500,
    index: 0,
    ele: null,
    objNum: null,
    curClass: "curImg",
    init: function (b) {
        this.scrollimg(b);
        var a = this;
        this.objNum.each(function (c) {
            $(this).hover(function () {
                a.scroll = !0;
                clearTimeout(a.timer);
                a.scrollimg({
                    index: c
                })
            }, function () {
                a.scroll = !1;
                a.scrollimg({
                    index: c
                })
            })
        })
    },
    scrollimg: function (d) {
        jQuery.extend(this, d);
        var b = this;
        var a = b.index;
        var c = -b.width * a;
        var e = b.objNum.size();
        if (a > e - 1) {
            c = 0;
            a = 0
        }
        b.ele.stop(true, true).animate({
            marginLeft: c
        }, 300);
        b.objNum.removeClass();
        b.objNum.eq(a).addClass(b.curClass);
        if (a < e) {
            a++
        }
        if (!b.scroll) {
            b.timer = setTimeout(function () {
                b.scrollimg({
                    index: a
                })
            }, 3000)
        }
    }
};
im.zm.getAutoUser = function (e) {
    var h = [];
    var f = {
        boxID: "autoTalkBox",
        valuepWrap: "autoTalkText",
        wrap: "recipientsTips",
        listWrap: "autoTipsUserList",
        position: "autoUserTipsPosition",
        positionHTML: '<span id="autoUserTipsPosition">&nbsp;123</span>',
        className: "autoSelected"
    };
    var g = '';
    var d = '<li><a title="$ACCOUNT$" rel="$ID$" >$SACCOUNT$</a></li>';
    var b = {
        $: function (n) {
            return document.getElementById(n)
        },
        DC: function (n) {
            return document.createElement(n)
        },
        EA: function (o, n, q, p) {
            if (o.addEventListener) {
                if (n == "mousewheel") {
                    n = "DOMMouseScroll"
                }
                o.addEventListener(n, q, p);
                return true
            } else {
                return o.attachEvent ? o.attachEvent("on" + n, q) : false
            }
        },
        ER: function (o, n, p) {
            if (o.removeEventListener) {
                o.removeEventListener(n, p, false);
                return true
            } else {
                return o.detachEvent ? o.detachEvent("on" + n, p) : false
            }
        },
        BS: function () {
            var o = document.body,
                n = document.documentElement,
                q = o.scrollTop + n.scrollTop,
                p = o.scrollLeft + n.scrollLeft;
            return {
                top: q,
                left: p
            }
        },
        FF: (function () {
            var n = navigator.userAgent.toLowerCase();
            return /firefox\/([\d\.]+)/.test(n)
        })()
    };
    var c = {
        info: function (p) {
            var r = p.getBoundingClientRect();
            var n = p.offsetWidth;
            var q = p.offsetHeight;
            return {
                top: r.top,
                left: r.left,
                width: n,
                height: q
            }
        },
        getCursorPosition: function (p) {
            if (document.selection) {
                p.focus();
                var q = document.selection;
                var n = null;
                n = q.createRange();
                var o = n.duplicate();
                o.moveToElementText(p);
                o.setEndPoint("EndToEnd", n);
                p.selectionStart = o.text.length - n.text.length;
                p.selectionEnd = p.selectionStart + n.text.length;
                return p.selectionStart
            } else {
                return p.selectionStart
            }
        },
        setCursorPosition: function (q, r) {
            var s = r == "end" ? q.value.length : r;
            if (document.selection) {
                var o = q.createTextRange();
                o.moveEnd("character", - q.value.length);
                o.moveEnd("character", s);
                o.moveStart("character", s);
                o.select()
            } else {
                q.setSelectionRange(s, s);
                q.focus()
            }
        },
        add: function (o, n) {
            var r = o.value;
            var p = p || "";
            if (document.selection) {
                document.selection.createRange().text = n
            } else {
                var q = o.selectionStart;
                var s = o.value.length;
                o.value = o.value.slice(0, o.selectionStart) + n + o.value.slice(o.selectionStart, s);
                this.setCursorPosition(o, q + n.length)
            }
        },
        del: function (o, u) {
            var r = this.getCursorPosition(o);
            var q = o.scrollTop;
            o.value = o.value.slice(0, r - u) + o.value.slice(r);
            this.setCursorPosition(o, r - u);
            b.FF && setTimeout(function () {
                o.scrollTop = q
            }, 10)
        }
    };
    var m = {
        inquiry: function (q, s, n) {
            var r = [];
            var o = 0;
            if (s == "") {
                while (r.length < n && o < q.length) {
                    r.push(q[o]);
                    o++
                }
            } else {
                var p = new RegExp(s, "i");
                while (r.length < n && o < q.length) {
                    r.push(q[o]);
                    o++
                }
            }
            return r
        }
    };
    var l = {
        _this: null,
        index: -1,
        list: null,
        selectIndex: function (o) {
            if (b.$(f.wrap).style.display == "none") {
                return true
            }
            var n = l.index;
            switch (o) {
            case 40:
                n = n + 1;
                break;
            case 38:
                n = n - 1;
                break;
            case 13:
                return l._this.enter();
                break
            }
            n = n >= l.list.length ? 0 : n < 0 ? l.list.length - 1 : n;
            return l.setSelected(n)
        },
        setSelected: function (n) {
            if (l.index >= 0) {
                l.list[l.index].className = ""
            }
            try {
                l.list[n].className = f.className
            } catch (o) {}
            l.index = n;
            return false
        }
    };
    var k = function (n) {
            var p = n.id ? b.$(n.id) : n.elem;
            var r = 5;
            var q = {};
            var o = "";
            q.start = function () {
                if (!b.$(f.boxID)) {
                    var t = g.slice();
                    var u = c.info(p);
                    var v = b.DC("DIV");
                    var s = b.BS();
                    t = t.replace("$top$", (u.top + s.top)).replace("$left$", (u.left + s.left)).replace("$width$", u.width).replace("$height$", u.height).replace("$SCTOP$", "0");
                    v.innerHTML = t;
                    document.body.appendChild(v)
                } else {
                    q.updatePosstion()
                }
            };
            q.keyupFn = function (x) {
                var x = x || window.event;
                if (x.type == "keyup") {
                    if (!x.keyCode) {
                        return
                    }
                }
                var v = x.keyCode;
                if (v == 38 || v == 40 || v == 13) {
                    if (v == 13 && b.$(f.wrap).style.display != "none") {
                        q.enter()
                    }
                    return false
                }
                var w = c.getCursorPosition(p);
                if (!w) {
                    return q.hide()
                }
                var t = p.value.slice(0, w);
                var y = t.slice(-r);
                var u = y.match(/(\w+)?@(\w|[\u4E00-\u9FA5\uF900-\uFA2D]+)$|@$/);
                if (u == null) {
                    return q.hide()
                }
                var s = u[2] ? u[2] : "";
                b.$(f.valuepWrap).innerHTML = t.slice(0, t.length - s.length).replace(/\n/g, "<br/>").replace(/\s/g, "&nbsp;") + f.positionHTML;
                q.showList(s)
            };
            q.showList = function (s) {
                o = s;
                $.ajax({
                    type: "get",
                    url: uri("URI_FANS_FRIENDS_NICKNAME", 10007),
                    data: {
                        chars: o
                    },
                    dataType: "json",
                    success: function (B) {
                        var C = [];
                        for (var y = 0, D = B.length; y < D; y++) {
                            C[y] = {};
                            C[y].user = B[y];
                            C[y].name = B[y]
                        }
                        var x = m.inquiry(C, s, 8);
                        var A = d.slice();
                        var z = "";
                        var D = x.length;
                        if (D == 0) {
                            q.hide();
                            return
                        }
                        var w = new RegExp(s);
                        var v = "<em>" + s + "</em>";
                        for (var y = 0; y < D; y++) {
                            var t = x[y]["user"].replace(w, v);
                            z += A.replace(/\$ACCOUNT\$|\$NAME\$/g, x[y]["name"]).replace("$SACCOUNT$", t).replace("$ID$", x[y]["user"])
                        }
                        q.updatePosstion();
                        var u = b.$(f.position).getBoundingClientRect();
                        var F = b.BS();
                        var E = b.$(f.wrap).style;
                        E.top = u.top + 20 + F.top + "px";
                        E.left = u.left - 5 + "px";
                        b.$(f.listWrap).innerHTML = z;
                        q.show()
                    }
                })
            };
            q.KeyDown = function (t) {
                var t = t || window.event;
                var s = t.keyCode;
                if (s == 38 || s == 40 || s == 13) {
                    return l.selectIndex(s)
                }
                return true
            };
            q.updatePosstion = function () {
                var t = c.info(p);
                var s = b.BS();
                var u = b.$(f.boxID).style;
                u.top = t.top + s.top + "px";
                u.left = t.left + s.left + "px";
                u.width = t.width + "px";
                u.height = t.height + "px";
                b.$(f.boxID).scrollTop = p.scrollTop
            };
            q.show = function () {
                l.list = b.$(f.listWrap).getElementsByTagName("li");
                l.index = -1;
                l._this = q;
                q.cursorSelect(l.list);
                p.onkeydown = q.KeyDown;
                b.$(f.wrap).style.display = "block";
                $("#autoTipsUserList li").off().on("click", function () {
                    c.del(p, o.length, o);
                    c.add(p, $(this).find("a").attr("title") + " ");
                    setTimeout(q.hide, 100)
                })
            };
            q.cursorSelect = function (t) {
                for (var s = 0; s < t.length; s++) {
                    t[s].onmouseover = (function (u) {
                        return function () {
                            l.setSelected(u)
                        }
                    })(s)
                }
            };
            q.hide = function () {
                l.list = null;
                l.index = -1;
                l._this = null;
                b.ER(p, "keydown", q.KeyDown);
                b.$(f.wrap).style.display = "none"
            };
            q.bind = function () {
                p.onkeyup = q.keyupFn;
                p.onclick = q.keyupFn;
                p.onblur = function () {
                    setTimeout(q.hide, 100)
                }
            };
            q.enter = function () {
                c.del(p, o.length, o);
                c.add(p, l.list[l.index].getElementsByTagName("A")[0].rel + " ");
                q.hide();
                return false
            };
            return q
        };
    var a = function (o) {
            var n = k(o);
            n.start();
            n.bind()
        };
    a(e)
};
window.autoLayout = {
    columnCount: 4,
    divWidth: 222,
    marginTop: 14,
    marginLeft: 14,
    colArray: [],
    freeLeft: 0,
    rightLoad: true,
    defaults: {
        contentID: "",
        rightLoad: true,
        leftID: null,
        rightID: null,
        linkUrl: "",
        noText: "",
        loadingID: "",
        dataContent: "",
        callBack: null,
        isPosition: true,
        cols: null,
        colName: null,
        isFixed: false
    },
    numbers: 0,
    isHasNextPage: true,
    pageAuto: false,
    searchPage: false,
    loading: true,
    isFirst: false,
    divId: 0,
    isIE: jQuery.browser.msie,
    opacityVal: 1,
    pageNums: 0,
    init: function (options, sta, dataObj) {
        var _jsonUrl, freeLeft, columns, w, opts;
        if (typeof options == "object") {
            $("#footer").hide();
            if (document.getElementById("firstload")) {
                $("#imloading").css({
                    visibility: "hidden"
                });
                document.getElementById("firstload").style.display = "block";
                $('#firstload').css('top',$('#firstload').data('top_gonna_be'));
            }
            $.extend(autoLayout.defaults, options);
            opts = autoLayout.defaults;
            _jsonUrl = opts.linkUrl;
            dataContent = opts.dataContent;
            if (opts.isPosition) {
                if (!opts.rightLoad) {
                    autoLayout.rightLoad = false
                }
                w = document.documentElement.clientWidth - 17;
                var h = document.documentElement.clientHeight;
                var objDiv;
                var heightArray = [];
                var columns;
                if (autoLayout.defaults.isFixed) {
                    columns = 4
                } else {
                    columns = Math.floor((w + autoLayout.marginLeft) / (autoLayout.divWidth + autoLayout.marginLeft))
                }
                freeLeft = 0;
                columns = Math.max(columns, 4);
                var contentWidth = columns * 236 - 14 + "px";
                document.getElementById(opts.contentID).style.width = contentWidth;
                $(".filterbar").css({
                    width: columns * 236 - 14 - 16 + "px"
                }).show();
                if (autoLayout.pageAuto) {
                    var _widthPage = autoLayout.divWidth * (columns - 1) + autoLayout.marginLeft * (columns - 1) - 17 + "px";
                    if (!autoLayout.searchPage) {
                        $(".sheet").css({
                            marginLeft: freeLeft + "px",
                            width: _widthPage
                        })
                    }
                    document.getElementById("content").style.width = contentWidth
                }
                for (var i = 0; i < columns; i++) {
                    heightArray[i] = 0
                }
                if (document.getElementById(opts.leftID)) {
                    $("#" + opts.leftID).css({
                        display: "block",
                        left: freeLeft + "px",
                        top: heightArray[0] + "px"
                    });
                    heightArray[0] = ($("#" + opts.leftID).height() + autoLayout.marginTop)
                }function _getHeight(url) {
                    var item, size;
                    item = url.split("/");
                    size = item[item.length - 1].split(".");
                    return size[size.length - 2]
                }
                if (opts.rightID) {
                    for (var le = 0, rightLen = opts.rightID.length; le < rightLen; le++) {
                        var rightBoard = document.getElementById(opts.rightID[le]),
                            h1;
                        if (rightBoard) {
                            if (_getHeight(rightBoard.getElementsByTagName("img")[0].src) == "head_190") {
                                h1 = 190
                            } else {
                                h1 = _getHeight(rightBoard.getElementsByTagName("img")[0].src)
                            }
                            rightBoard.getElementsByTagName("img")[0].setAttribute("height", h1);
                            if (/js-ad-show/g.test(rightBoard.id)) {
                                rightBoard.style.height = _getHeight(rightBoard.getElementsByTagName("img")[0].src) + "px"
                            }
                            $("#" + opts.rightID[le]).css({
                                position: "absolute",
                                display: "block",
                                left: freeLeft + autoLayout.divWidth * (columns - 1) + autoLayout.marginLeft * (columns - 1) + "px",
                                top: heightArray[columns - 1] + "px"
                            });
                            var marginTop;
                            rightBoard.style.marginTop ? marginTop = parseInt(rightBoard.style.marginTop) : marginTop = 0;
                            heightArray[columns - 1] += (rightBoard.offsetHeight + autoLayout.marginTop + marginTop)
                        }
                    }
                }
                if (!autoLayout.rightLoad) {
                    heightArray.splice(heightArray.length - 1, 1)
                }
                document.getElementById(autoLayout.defaults.contentID).style.height = Math.max.apply(Math, heightArray) + "px"
            }
        } else {
            _jsonUrl = options;
            $("#imloading").css({
                visibility: ""
            });
            if (this.defaults.isPosition) {
                var w = document.documentElement.clientWidth;
                var columns;
                if (autoLayout.defaults.isFixed) {
                    columns = 4
                } else {
                    columns = Math.floor((w + autoLayout.marginLeft) / (autoLayout.divWidth + autoLayout.marginLeft))
                }
                freeLeft = 0;
                var columns = Math.max(columns, 4);
                var contentWidth = columns * 236 - 14 + "px";
                document.getElementById(autoLayout.defaults.contentID).style.width = contentWidth;
                var heightArray = autoLayout.colArray;
                autoLayout.isIE ? autoLayout.opacityVal = 1 : autoLayout.opacityVal = 0.2
            }
        }
        autoLayout.loading = false;
        if (!sta) {
            $.ajax({
                type: "GET",
                url: encodeURI(_jsonUrl),
                dataType: "json",
                data: dataContent,
                async: true,
                success: function (json) {
                    $("#imloading").css({
                        visibility: ""
                    });
                    initContent(json);
                    _gaq.push(["_trackPageview", "/ajax/" + encodeURI(_jsonUrl)])
                }
            })
        } else {
            initContent(dataObj)
        }function initContent(json) {
            $("#" + autoLayout.defaults.contentID).children().css({
                visibility: "visible"
            });
            var _jsonMain = eval(json);
            var picBoard = _jsonMain.result;
            if (!picBoard || (picBoard.length == 0 && !autoLayout.isFirst)) {
                $("#imloading").css({
                    visibility: "hidden"
                });
                if (autoLayout.defaults.callBack) {
                    autoLayout.defaults.callBack()
                }
                $("#footer").remove("fixedfooter").show();
                autoLayout.isHasNextPage = false;
                $("#loadMore").hide();
                $("#firstload").hide();
                                console.log(5032);
                return
            }
            if (autoLayout.pageNums > 1 && !loginUser.id) {
                im.zm.login();
                $("#loginLayout").definedDialog("open");
                try {
                    _gaq.push(["_trackPageview", "/c_l_c/" + document.location.href.replace(new RegExp("http://" + document.location.host), "")])
                } catch (e) {}
            }
            for (var j = 0, len = picBoard.length; j < len; j++) {
                var picWidth = _getWidth(picBoard[j].mediumZoom);
                var picHeight = _getHeight(picBoard[j].mediumZoom);
                var bestContent = "";
                var comentContent = "";
                var shareContent = "";
                var priceCon, surpriseClass;
                if (picBoard[j].isSurprise) {
                    surpriseClass = "price-label small-label-gift"
                } else {
                    surpriseClass = "price-label small-label"
                }
                priceCon = '<div class="' + surpriseClass + '"><span class="leftfold png"></span><span class="rightfold png"><a href="/courses/'+picBoard[j].boardId+'"'+(window.psvr_is_ie ? ' style="color:white"' : '')+'>' + picBoard[j].price + "</a></span></div>"
                // if (parseInt(picBoard[j].price)) {
                //     priceCon = '<div class="' + surpriseClass + '"><span class="leftfold png"></span><span class="rightfold png">¥' + Math.floor(picBoard[j].price) / 100 + "</span></div>"
                // } else {
                //     priceCon = ""
                // }
                if (picBoard[j].isSurprise) {
                    priceCon = '<div class="' + surpriseClass + '"><span class="leftfold png"></span><span class="rightfold png">免费中</span></div>'
                }
                var likeDefaultContent;
                if (picBoard[j].comments.length > 0) {
                    comentContent = _getComment(picBoard[j].comments, picBoard[j].avatars)
                }
                var cel = "";
                if (picBoard[j].certifyType == 1) {
                    cel = '<span class="ctf-icon small-ctf-g" title="Kejian.TV认证专家"></span>'
                } else {
                    if (picBoard[j].certifyType == 2) {
                        cel = '<span class="ctf-icon small-ctf-star-g" title="Kejian.TV认证达人"></span>'
                    }
                }
                var _reshare, _comment, _commentStyle;
                parseInt(picBoard[j].reshareCount) == 0 ? _reshare = "" : _reshare = '<em class="favourite-ico"></em><em>' + picBoard[j].reshareCount + "</em>";
                if (!parseInt(picBoard[j].commentCount)) {
                    _comment = '<span style="display:none;"><span class="pointsNum">·</span><span>评论</span><span class="commentNum">0</span></span>';
                    _commentStyle = 'style="display:none;"'
                } else {
                    _comment = '<span style="display:inline-block;"><span class="pointsNum">·</span><span>评论</span><span class="commentNum">' + picBoard[j].commentCount + "</span></span>";
                    if (parseInt(picBoard[j].commentCount) - 2 > 0) {
                        _commentStyle = 'style="display:block;"'
                    } else {
                        _commentStyle = 'style="display:none;"'
                    }
                }
                var rows, cols, _le, _to, tPos;
                if (autoLayout.defaults.isPosition) {
                    rows = Math.min.apply(Math, heightArray);
                    cols = $.inArray(rows, heightArray);
                    _le = freeLeft + autoLayout.divWidth * cols + autoLayout.marginLeft * (cols) + "px";
                    _to = rows + "px";
                    tPos = "absolute"
                } else {
                    var colHeight = [];
                    for (var i = 0; i < autoLayout.defaults.cols.length; i++) {
                        colHeight.push(autoLayout.defaults.cols[i].height())
                    }
                    rows = Math.min.apply(Math, colHeight);
                    cols = $.inArray(rows, colHeight);
                    _le = 0;
                    _to = 0;
                    tPos = ""
                }
                var nTitle = picBoard[j].shareTitle;
                var mm = unique(nTitle.match(/(?:#[A-Za-z0-9\u4E00-\u9FA5]+#)/gi));
                var o = nTitle;
                if (mm) {
                    for (var i = 0; i < mm.length; i++) {
                        o = nTitle.replace(new RegExp(mm[i], "gm"), '<a href="/tag?tag=' + mm[i].substring(1, mm[i].length - 1) + '" class="themTitle">' + mm[i] + "</a>");
                        nTitle = o
                    }
                }
                var isO = "",
                    isOrigin = 1;
                if (!picBoard[j].isOriginal) {
                    isO = picBoard[j].title;
                    isOrigin = 0
                }
                if (picBoard[j].boardName == "我的收集") {
                    shareContent = ['<li class="share-owner cf"><a href="/users/' + picBoard[j].userId + '" class="avatar"><img width="30" height="30" src="' + picBoard[j].avatarTiny + '" /></a>', '<div class="cmt-content"><p class="userinfo"><a havecard="1" href="/users/' + picBoard[j].userId + '" usercard="' + picBoard[j].userId + '" class="username changecolor">' + picBoard[j].nickName + "</a> " + cel + "收集</p><p>" + isO + "</p></div></li>"].join("")
                } else {
                    shareContent = [
                    '<li class="share-owner cf"><a href="/users/' + picBoard[j].userId + '" class="avatar"><img width="30" height="30" src="' + picBoard[j].avatarTiny + '" /></a>',
                    '<div class="cmt-content"><p class="userinfo"><a havecard="1" href="/users/' + picBoard[j].userId + '" class="username changecolor" usercard="' + picBoard[j].userId + '">' + picBoard[j].nickName + "</a> " + cel + picBoard[j].timeAgo+'上传了此课件到课程 <a href="/courses/' + picBoard[j].boardId + '" class="boardname changecolor">' + picBoard[j].boardName + "</a>.</p><p>" + isO + "</p></div></li>"
                    ].join("")
                }
                var _action;
                if (picBoard[j].userId == loginUser.id) {
                    _action = '<div class="sharebutton" style="display:none;"><a class="btn-editshare png" isOrigin = "' + isOrigin + '" href="javascript:void(0);" to="' + picBoard[j].id + '"></a></div>'
                } else {
                    var _boards = "";
                    if (_jsonMain.boards.length) {
                        for (var p = 0, plen = _jsonMain.boards.length; p < plen; p++) {
                            var _className = "";
                            if (haveBoardId(_jsonMain.boards[p].id, picBoard[j].selectedBoardIds)) {
                                _className = "select-ico"
                            } else {
                                _className = "blank-ico"
                            }
                            _boards += '<a boardId = "' + _jsonMain.boards[p].id + '" title="' + _jsonMain.boards[p].boardName + '"><span class="' + _className + '"></span>' + $.fn.fixStr(_jsonMain.boards[p].boardName, 14, "...") + "</a>"
                        }
                    }
                    _action = ['<div class="sharebutton" style="display:none;"><a class="btn-collect png" href="###"></a><a class="btn-select png" href="###"></a></div>', '<div class="boardlist" style="display:none;">', "<h3>上传了此课件到课程</h3> " + _boards, "</div>"].join("")
                }
                var surpriseArea, mess;
                if (picBoard[j].isSurprise) {
                    surpriseArea = '<div class="getsur"><a href="' + uri("URI_BOARD_PIC", picBoard[j].id) + '" target="_blank" class="greenbtn btn-xxlargegreen yahe">立即免费领取</a></div>';
                    mess = ""
                } else {
                    var loginUserImg = (loginUser.avatarTiny ? 'src="' + loginUser.avatarTiny + '"' : "");
                    surpriseArea = ['<ul class="comment">' + shareContent + comentContent + "</ul>", '<div class="add-comment" style="display:none;">', '<h3 class="cf"><a class="commentClose">close</a>添加评论</h3>', '<div class="commentbody cf">', '<a class="avatar"><img  ' + loginUserImg + " /></a>", '<div class="comment-form">', '<span class="input-border">', '<textarea class="comment-textarea"></textarea>', "</span>", '<div class="cmt-submit cf">', '<span class="floatright count"><em class="lightblue">0</em>/140</span>', '<a href="javascript:void(0);" class="unpincomment">提交</a>', "</div>", "</div>", "</div>", "</div>", '<div class="morecomment" ' + _commentStyle + '><a href="' + uri("URI_BOARD_PIC", picBoard[j].id) + '" class="changecolor" target="_blank">还有<em>' + (parseInt(picBoard[j].commentCount) - 2) + "</em>条评论&gt;&gt;</a></div>"].join("");
                    mess = '<a class="lk-comment" style="display:none;"></a>' //todo:评论
                }
                var inserDiv = ['<div class="share-mod" id="' + autoLayout.divId + '" userId = "' + picBoard[j].userId + '" sharePicId = "' + picBoard[j].sharePicId + '" dataId="' + picBoard[j].id + '" columns="' + cols + '" style="position:' + tPos + ";opacity:" + autoLayout.opacityVal + ";left:" + _le + ";top:" + _to + ';">', '<div class="actions">' + _action + "</div>", '<div class="sharecontainer">', '<div class="share-img" style="height:' + picHeight + 'px;">' + priceCon, '<a href="' + picBoard[j].path + '"><img class="picUrl" width="' + picWidth + '" height="' + picHeight + '" src="/zm_dian.gif" data-delay="' + picBoard[j].mediumZoom + '" alt="' + picBoard[j].shareTitle + '" title="' + picBoard[j].shareTitle + '" /></a>', "</div>", '<div class="shareprofile">', '<p class="contentsms" isorigin="' + isOrigin + '">' + o + "</p>", '<p class="quantity">' + mess + '<span class="favourite-num">' + _reshare + "</span></p>", "</div>", "</div>", '<div class="commentcontainer">' + surpriseArea, "</div>", "</div>"].join("");
                if (autoLayout.defaults.isPosition) {
                    $(document.getElementById(autoLayout.defaults.contentID)).append(inserDiv);
                    autoLayout.numbers++;
                    heightArray[cols] += (parseInt(document.getElementById(autoLayout.divId).offsetHeight) + autoLayout.marginTop)
                } else {
                    if (autoLayout.defaults.colName) {
                        $(autoLayout.defaults.colName + cols).append(inserDiv)
                    } else {
                        $("#col_" + cols).append(inserDiv)
                    }
                    autoLayout.numbers++
                }
                var _thisBoard = $(document.getElementById(autoLayout.divId));
                if (!autoLayout.isIE) {
                    _thisBoard.stop(true, true).animate({
                        opacity: 1
                    }, 800)
                }
                autoLayout.divId++
            }
            im.zm.delayImg.init(document);
            autoLayout.pageNums++;
            autoLayout.isFirst = true;
            $("#imloading").css({
                visibility: "hidden"
            });
            var spetial_situation = (autoLayout.pageNums===3 &&''==loginUser)
            if (!_jsonMain.hasNextPage || spetial_situation) {
                $("#imloading").css({
                    visibility: "hidden"
                });
                $("#gradientLayerDiv").hide();
                $("#loadMore").hide();
                autoLayout.isHasNextPage = false;
                $("#imloading").css({
                    visibility: ""
                }).find("div").removeClass("loading").addClass("notmore").text((spetial_situation) ? "登录后可以加载更多内容哦：）" : "没有更多内容了")
            } else {
                $("#loadMore").show()
            }
            autoLayout.colArray = heightArray;
            if (autoLayout.defaults.isPosition) {
                document.getElementById(autoLayout.defaults.contentID).style.height = Math.max.apply(Math, heightArray) + "px"
            }
            $(".maskDiv").css({
                height: parseInt($("body").height()) + parseInt($("body").css("paddingTop"))
            });
            $("textarea").each(function () {
                im.zm.getAutoUser({
                    elem: this
                })
            });
            $("#footer").removeClass("fixedfooter").show();
            if (document.getElementById("firstload")) {
                document.getElementById("firstload").style.display = "none"
                $("abbr.timeago").timeago()
            }
            autoLayout.loading = true;

            function unique(data) {
                data = data || [];
                var a = {};
                for (var i = 0; i < data.length; i++) {
                    var v = data[i];
                    if (typeof (a[v]) == "undefined") {
                        a[v] = 1
                    }
                }
                data.length = 0;
                for (var i in a) {
                    data[data.length] = i
                }
                return data
            }function haveBoardId(id, arr) {
                var sta = false;
                for (var i = 0, len = arr.length; i < len; i++) {
                    if (id == arr[i]) {
                        sta = true;
                        break
                    }
                }
                return sta
            }function filter(str) {
                str = str.replace(/</g, "&lt;");
                str = str.replace(/>/g, "&gt;");
                str = str.replace(/"/g, "&quot;");
                return str
            }function _getWidth(url) {
                var item, size;
                item = url.split("/");
                size = item[item.length - 1].split(".");
                return size[size.length - 3]
            }function _getHeight(url) {
                var item, size;
                item = url.split("/");
                size = item[item.length - 1].split(".");
                return size[size.length - 2]
            }function _getComment(json, picUrls) {
                var commentHtml = [];
                for (var m = 0; m < json.length; m++) {
                    var ask = "",
                        _picUrl, cels = "",
                        comStr;
                    if (loginUser.id != json[m].userId) {
                        ask = '<a class="gray changecolor">回复</a>'
                    }
                    if (typeof picUrls[json[m].userId] == "string") {
                        _picUrl = picUrls[json[m].userId]
                    }
                    cels=''
                    if (json[m].certifyType == 1) {
                        cels = '<span class="ctf-icon small-ctf-g" title="Kejian.TV认证专家"></span>'
                    } else {
                        if (json[m].certifyType == 2) {
                            cels = '<span class="ctf-icon small-ctf-star-g" title="Kejian.TV认证达人"></span>'
                        }
                    }
                    comStr = json[m].comment;
                    xHtml = ['<li class="cf"><a href="/users/' + json[m].userId + '" class="avatar"><img havecard="1" src="' + _picUrl + '" usercard="' + json[m].userId + '"/></a>', '<div class="cmt-content"><p class="userinfo"><a href="/users/' + json[m].userId + '" class="username changecolor" havecard="1" usercard="' + json[m].userId + '">' + json[m].userName + "</a>" + cels + "</p>", '<p commentId="' + json[m].id + '">' + comStr + "&nbsp;" + ask + "</p></div></li>"].join("");
                    commentHtml[m] = xHtml
                }
                return commentHtml.join("")
            }
        }
    },
    updateDiv: function () {
        var k = autoLayout.defaults;
        if (k.contentID == "" || !k.isPosition) {
            return
        }
        var q;
        var f = [];
        var g = document.documentElement.clientWidth;
        var u = document.documentElement.clientHeight;
        var a = Math.max(Math.floor((g + autoLayout.marginLeft) / (autoLayout.divWidth + autoLayout.marginLeft)), 4);
        var o = 0;
        var l = a * 236 - 14 + "px";
        if (document.getElementById(autoLayout.defaults.contentID)) {
            document.getElementById(autoLayout.defaults.contentID).style.width = l
        }
        var v = a * 236 - 14 - 16 + "px";
        $(".filterbar").css({
            width: v
        }).show();
        if (document.getElementById("unloginBannersInner")) {
            document.getElementById("unloginBannersInner").style.width = l
        }
        if (autoLayout.columnCount > a) {
            a = autoLayout.columnCount
        }
        for (var s = 0; s < a; s++) {
            f[s] = 0
        }
        if (document.getElementById(k.leftID)) {
            var n = document.getElementById(k.leftID);
            n.style.left = "0px";
            n.style.top = f[0] + "px";
            f[0] = (n.offsetHeight + autoLayout.marginTop)
        }
        if (k.rightID) {
            for (var m = 0, d = k.rightID.length; m < d; m++) {
                if (document.getElementById(k.rightID[m])) {
                    var p = document.getElementById(k.rightID[m]);
                    p.style.left = o + autoLayout.divWidth * (a - 1) + autoLayout.marginLeft * (a - 1) + "px";
                    p.style.top = f[a - 1] + "px";
                    var b;
                    if (p.style.marginTop) {
                        b = parseInt(p.style.marginTop)
                    } else {
                        b = 0
                    }
                    f[a - 1] += (p.offsetHeight + autoLayout.marginTop + b)
                }
            }
        }
        if (!autoLayout.rightLoad) {
            f.splice(f.length - 1, 1)
        }
        q = autoLayout.getElements(k.contentID);
        for (var r = 0, t = q.length; r < t; r++) {
            if (q[r] == document.getElementById("leftLabel") || q[r] == document.getElementById(k.rightID[0]) || q[r] == document.getElementById(k.rightID[1]) || q[r] == document.getElementById(k.rightID[2])) {
                continue
            } else {
                var e = Math.min.apply(Math, f);
                var c = $.inArray(e, f);
                q[r].setAttribute("columns", c);
                q[r].style.left = o + autoLayout.divWidth * c + autoLayout.marginLeft * c + "px";
                q[r].style.top = e + "px";
                f[c] += (parseInt(q[r].offsetHeight) + autoLayout.marginTop)
            }
        }
        if (autoLayout.pageAuto) {
            a = Math.max(a, 4);
            var x = autoLayout.divWidth * (a - 1) + autoLayout.marginLeft * (a - 1) - 17 + "px";
            if (!autoLayout.searchPage) {
                $(".sheet").css({
                    marginLeft: o + "px",
                    width: x
                })
            }
            document.getElementById("content").style.width = l;
            if (document.getElementById("unloginBannersInner")) {
                document.getElementById("unloginBannersInner").style.width = l
            }
        }
        autoLayout.colArray = f;
        document.getElementById(k.contentID).style.height = Math.max.apply(Math, f) + "px"
    },
    debounceFunc: function (d, a, b) {
        var e;
        return function c() {
            var h = this,
                g = arguments;

            function f() {
                if (!b) {
                    d.apply(h, g)
                }
                e = null
            }
            if (e) {
                clearTimeout(e)
            } else {
                if (b) {
                    d.apply(h, g)
                }
            }
            e = setTimeout(f, a || 30)
        }
    },
    reshareCountIncr: function (a) {
        var h = $("div[dataid|=" + a + "]").parent().attr("id");
        var f = autoLayout.getElements(h);
        for (var d = 0, e = f.length; d < e; d++) {
            if ($(f[d]).attr("dataid") == a) {
                $(f[d]).find(".reshareNum").html(parseInt($(f[d]).find(".reshareNum").text()) + 1);
                if ($(f[d]).find(".reshareNum").parent().css("display") == "none") {
                    $(f[d]).find(".reshareNum").parent().show();
                    if ($(f[d]).find(".reshareNum").parent().next().css("display") == "none" && $(f[d]).find(".reshareNum").parent().next().next().css("display") == "none") {
                        $(f[d]).find(".reshareNum").parent().parent().show();
                        var b = 20;
                        var g = $(f[d]).attr("columns");
                        var k = parseInt($(f[d]).css("top"));
                        if (autoLayout.defaults.isPosition) {
                            c(autoLayout.defaults.contentID, g, b, k)
                        }
                    }
                    if ($(f[d]).find(".reshareNum").parent().next().find(".commentNum").html() > 0) {
                        $(f[d]).find(".reshareNum").parent().next().find(".pointsNum").show()
                    }
                    if ($(f[d]).find(".reshareNum").parent().next().next().find(".likeNum").html() > 0) {
                        $(f[d]).find(".reshareNum").parent().next().next().find(".pointsNum").show()
                    }
                    $(f[d]).find(".reshareNum").parent().show()
                }
            }
        }function c(s, o, q, r) {
            var n, m, l;
            n = autoLayout.getElements(s);
            for (var p = n.length; p--;) {
                m = $(n[p]).attr("columns");
                l = parseInt($(n[p]).css("top"));
                if (m == o && l > r) {
                    $(n[p]).css({
                        top: l + q
                    })
                }
            }
            autoLayout.colArray[o] += q;
            document.getElementById(autoLayout.defaults.contentID).style.height = Math.max.apply(Math, autoLayout.colArray) + "px"
        }
    },
    getElements: function (f) {
        var b;
        var a = document.getElementById(f).children;
        var d = [];
        for (var e = 0, c = a.length; e < c; e++) {
            if (a[e] != document.getElementById("leftLabel") && a[e] != document.getElementById("rightLabel1") && a[e] != document.getElementById("rightLabel2") && a[e] != document.getElementById("rightLabel3") && a[e] != document.getElementById("rightLabel4")) {
                d.push(a[e])
            }
        }
        b = d;
        return b
    },
    updateHeight: function (h, d, f, g) {
        var c = autoLayout.getElements(h);
        for (var e = c.length; e--;) {
            var b = $(c[e]).attr("columns");
            var a = parseInt($(c[e]).css("top"));
            if (b == d && a > g) {
                $(c[e]).css({
                    top: a + f
                })
            }
        }
        autoLayout.colArray[d] += f;
        document.getElementById(autoLayout.defaults.contentID).style.height = Math.max.apply(Math, autoLayout.colArray) + "px"
    },
    eachAction: function (g) {
        var d = $("#" + autoLayout.defaults.contentID + " .share-mod");
        var c = null,
            b = null;
        d.on("mouseenter", function () {
          //todo
            var l = $(this);
            clearTimeout(c);
            c = setTimeout(function () {
                l.addClass("onshare-mod").find(".sharebutton").hide()//.show();
                l.find(".lk-comment").show()
            }, 50)
        }).on("mouseleave", function () {
          //todo
            var l = $(this);
            clearTimeout(c);
            l.removeClass("onshare-mod").find(".sharebutton").hide();
            l.find("div.boardlist").hide();
            l.find(".btn-select").removeClass("btn-selecting");
            l.find(".lk-comment").hide()
        }).find(".btn-select").off().on("click", function () {
            if (typeof loginUser.id == "undefined" || loginUser.id == "") {
                im.zm.login($(this).parent().parent().next(".sharecontainer").find(".share-img>a").eq(0).attr("href"));
                $("#loginLayout").definedDialog("open");
                try {
                    _gaq.push(["_trackPageview", "/c_l_c/" + document.location.href.replace(new RegExp("http://" + document.location.host), "")])
                } catch (m) {}
                return
            }
            var l = $(this);
            if (jQuery.browser.msie) {
                if (l.parent().next().find("a").size() > 7) {
                    l.parent().next().css({
                        height: "180px",
                        overflow: "auto"
                    })
                }
            }
            l.addClass("btn-selecting").parent().next().slideDown(200);
            l.parent().next().css({
                overflow: "auto",
                "overflow-x": "hidden"
            })
        });
        d.find(".btn-selecting").off().on("click", function () {
            var l = $(this);
            l.removeClass("btn-selecting").parent().next().slideUp(100)
        });
        d.find(".boardlist a").off().on("click", function () {
            var l = $(this).parent().parent().offsetParent(),
                m = $(this);
            l.find(".btn-selecting").removeClass().addClass("btn-select png");
            h(uri("URI_BOARD_PIC_RESHARE", l.attr("dataid")), {
                boardPicUserId: l.attr("userid"),
                toBoardId: m.attr("boardid"),
                sharePicId: l.attr("sharePicId"),
                boardPicId: l.attr("dataid")
            }, l, m)
        });
        d.find(".btn-collect").off().on("click", function () {
            if (typeof loginUser.id == "undefined" || loginUser.id == "") {
                im.zm.login($(this).parent().parent().next(".sharecontainer").find(".share-img>a").eq(0).attr("href"));
                $("#loginLayout").definedDialog("open");
                try {
                    _gaq.push(["_trackPageview", "/c_l_c/" + document.location.href.replace(new RegExp("http://" + document.location.host), "")])
                } catch (n) {}
                return
            }
            var m = $(this),
                l = m.parent().parent().offsetParent();
            h(uri("URI_BOARD_PIC_RESHARE", l.attr("dataid")), {
                boardPicUserId: l.attr("userid"),
                toBoardId: 0,
                sharePicId: l.attr("sharePicId"),
                boardPicId: l.attr("dataid")
            }, l, m)
        });

        function h(l, m, o, n) {
            $.ajax({
                type: "post",
                url: l,
                data: m,
                success: function (r) {
                    var p = r.result;
                    if (p.errors) {
                        $('<div id="errorTip" style="left:' + (o.offset().left + 112) + "px;top:" + (o.offset().top - 20) + 'px;"><span class="smstips smstrue"><em class="smstips">已收集</em></span></div>').appendTo($("body"));
                        setTimeout(function () {
                            $("#errorTip").remove()
                        }, 1000);
                        n.parent().slideUp(100)
                    } else {
                        var q = o.find(".favourite-num em");
                        if (q.length == 0) {
                            o.find(".favourite-num").html('<em class="favourite-ico"></em><em>1</em>')
                        } else {
                            o.find(".favourite-num em:last-child").text(parseInt(o.find(".favourite-num em:last-child").text()) + 1)
                        }
                        n.find("span").removeClass().addClass("select-ico");
                        o.find(".boardlist a[boardid|=" + p.value.boardId + "] span").removeClass().addClass("select-ico");
                        n.parent().slideUp(100);
                        im.window.dialogTips(o.find("img.picUrl"), p.value, r.notificationId)
                    }
                }
            })
        }
        d.find("a.forward-btn").off().on("click", function () {
            if (typeof loginUser.id == "undefined" || loginUser.id == "") {
                var o = window.location.pathname;
                window.location.href = "/login?flag=4&p=" + o;
                return
            }
            var n = $(this).attr("to");
            var p = $(this).attr("userId");
            var m = $(this).parent().parent().parent().find(".contentsms").text();
            var l = $(this).parent().parent().parent().find(".picUrl").attr("src");
            reshare({
                id: n,
                userId: p,
                title: m,
                mediumZoom: l
            })
        });
        d.find(".btn-editshare").off().on("click", function () {
            editShare.edit($(this).attr("to"), $(this).attr("isOrigin"))
        });
        d.find(".lk-comment").off().on("click", function () {
            a($(this), 0)
        });
        d.find(".cmt-content .gray").off().on("click", function () {
            a($(this).parent().parent().parent(), $(this).parent().attr("commentid"), $(this).parent().prev().find("a").text())
        });
        d.find(".commentSubmit").off().on("click", function () {
            f($(this))
        });
        d.find(".commentClose").off().on("click", function () {
            k($(this))
        });
        window.App.pin_resize_psvr_handler = function () {
            console.log('resized!');
            if(!window.loginUser){
              jQuery('.psvr_login_required').attr('onclick','').unbind('click').die('click').on('click',function(){
                return KTV.login();
              });
            }
            if (!autoLayout.defaults.isFixed) {
                autoLayout.debounceFunc(autoLayout.updateDiv(), 30, true)
            }
        };
        $(window).resize(App.pin_resize_psvr_handler);
        $(window).scroll(function () {
            if (autoLayout.loading && typeof g == "string" && autoLayout.isHasNextPage) {
                autoLayout.scrollEvent(g)
            }
        });

        function a(m, q, t) {
            var n = m.offsetParent();
            if (typeof loginUser.id == "undefined" || loginUser.id == "") {
                im.zm.login(n.find(".sharecontainer .share-img>a").eq(0).attr("href"));
                $("#loginLayout").definedDialog("open");
                try {
                    _gaq.push(["_trackPageview", "/c_l_c/" + document.location.href.replace(new RegExp("http://" + document.location.host), "")])
                } catch (o) {}
                return
            }
            var v = n.find(".comment-textarea").eq(0);
            var r = true;
            if (n.find(".add-comment").css("display") == "block") {
                r = false
            }
            v.keyup(function () {
                var x = $(this).val();
                if (x.indexOf("回复 " + $(this).attr("toName") + ":") == -1) {
                    $(this).attr("cid", 0)
                }
            });
            n.find(".add-comment").show();
            var p = n.find(".add-comment");
            if (q) {
                v.attr("cid", q);
                v.attr("toName", t);
                v.focus().val("回复 " + t + ":")
            } else {
                v.attr("cid", 0);
                v.focus()
            }
            n.find(".lightblue").text(v.val().length);
            if (v.val().length > 0) {
                n.find(".unpincomment").removeClass().addClass("commentSubmit pincomment")
            }
            var l = p.height() + 20;
            var s = p.offsetParent().attr("columns");
            var w = parseInt(p.offsetParent().css("top"));
            if (r && autoLayout.defaults.isPosition) {
                e(autoLayout.defaults.contentID, s, l, w)
            }
            var u = n;
            $.fn.countNumber(u.find(".comment-textarea"), {
                scroll: true,
                textareaid: u.find(".lightblue"),
                numberid: 140,
                rowsize: 24,
                rowheight: 2,
                deflultheight: 28,
                buttonClass: "commentSubmit pincomment",
                buttonOff: "unpincomment",
                callback: function (y) {
                    var z, x;
                    if (autoLayout.defaults.isPosition) {
                        z = u.attr("columns");
                        x = parseInt(u.css("top"));
                        e(autoLayout.defaults.contentID, z, y, x)
                    }
                }
            })
        }function f(q) {
            var t = q,
                r;
            var u = t.offsetParent().find(".comment-textarea");
            if ($(q).hasClass("unpincomment")) {
                return
            }
            if ($.fn.getbytelength($.trim(u.val())) > 140) {
                u.addClass("bgcolor").animate({
                    opacity: "0.25"
                }, 50).animate({
                    opacity: "1"
                }, 50).animate({
                    opacity: "0.25"
                }, 50).animate({
                    opacity: "1"
                }, 50);
                setTimeout(function () {
                    u.removeClass("bgcolor")
                }, 200);
                return
            }
            $(q).removeClass().addClass("unpincomment").text("发送中");
            var p = loginUser;
            r = t.parent().parent().find(".comment-textarea").val();
            var n = 0;
            if ($.trim(r).length == 0) {
                im.window.alert("请输入评论内容！", "error");
                return
            }
            var o = t.offsetParent();
            var x = o.find(".comment");
            var s = o.find(".comment-textarea").attr("cid");
            var v = o.attr("dataid");
            var w = 0;

            function m(y) {
                y = y.replace(/&/g, "&amp;");
                y = y.replace(/</g, "&lt;");
                y = y.replace(/>/g, "&gt;");
                y = y.replace(/'/g, "&acute;");
                y = y.replace(/"/g, "&quot;");
                y = y.replace(/\|/g, "&brvbar;");
                return y
            }
            var l = "/comment/" + v;
            $.post(l, {
                comment: r,
                replyCommentId: s,
                score: 0
            }, function (C) {
                if (C == "") {
                    return
                }
                var z = ['<li class="cf">', '<a class="avatar"><img src="' + loginUser.avatarTiny + '" havecard="1" usercard="' + loginUser.id + '"/></a>', '<div class="cmt-content">', '<p class="userinfo"><a href="javascript:void(0);" class="sername changecolor" havecard="1" usercard="' + loginUser.id + '">' + loginUser.nickname + "</a></p>", "<p>" + m(r) + "</p>", "</div>", "</li>"].join("");
                x.append(z);
                o.find(".comment-textarea").val("");
                o.find(".lightblue").text(0);
                $(q).removeClass().addClass("unpincomment").text("提交");
                var E = x.find("li:last-child").height() + 16;
                var D = o.attr("columns");
                var G = parseInt(o.css("top"));
                var F = E - w + 1;
                if (autoLayout.defaults.isPosition) {
                    e(autoLayout.defaults.contentID, D, F, G)
                }
                if (o.find(".comment-textarea").height() > 28) {
                    var y = o.find(".comment-textarea");
                    var B = y.height();
                    y.css({
                        height: "28px"
                    });
                    var A = 28 - B;
                    var D = o.attr("columns");
                    var G = parseInt(o.css("top"));
                    if (autoLayout.defaults.isPosition) {
                        e(autoLayout.defaults.contentID, D, A, G)
                    }
                }
            }, "json")
        }function k(p) {
            var n = p.parent().parent(),
                m, o, l;
            if (autoLayout.defaults.isPosition) {
                m = -parseInt(n.height() + 19);
                o = n.offsetParent().attr("columns");
                l = parseInt(n.offsetParent().css("top"));
                e(autoLayout.defaults.contentID, o, m, l)
            }
            n.hide()
        }function e(s, o, q, r) {
            var n = autoLayout.getElements(s);
            for (var p = n.length; p--;) {
                var m = $(n[p]).attr("columns");
                var l = parseInt($(n[p]).css("top"));
                if (m == o && l > r) {
                    $(n[p]).css({
                        top: l + q
                    })
                }
            }
            autoLayout.colArray[o] += q;
            document.getElementById(autoLayout.defaults.contentID).style.height = Math.max.apply(Math, autoLayout.colArray) + "px"
        }
    },
    pageNum: 2,
    pageNum2: 2,
    scrollEvent: function (b) {
        var a, c;
        a = parseInt($(document).scrollTop() + document.documentElement.clientHeight);
        c = parseInt(Math.min.apply(Math, autoLayout.colArray) + $("#" + autoLayout.defaults.contentID).offset().top);
        if (a > c) {
            $("#imloading").css({
                visibility: ""
            });
            autoLayout.init(b + autoLayout.pageNum);
            autoLayout.pageNum++
        }
    }
};

var boardLoad = {
    order: [],
    init: function (id, jsonUrl, sta, dataObj) {
        if (!sta) {
            $.ajax({
                type: "GET",
                url: jsonUrl,
                dataType: "json",
                success: function (data) {
                    initContent(data)
                }
            })
        } else {
            initContent(dataObj)
        }function initContent(data) {
            var content = eval(data);
            if (content.length == 0) {
                $(".sheetbt").hide()
            }
            for (var j = 0; j < content.length; j++) {
                var con = content[j];
                var imgHtml = "";
                var desc = "";
                var moreManagerLogo = "";
                if (loginUser.id > 0) {
                    if (eval(con.moreManager) == true) {
                        moreManagerLogo = '<em class="teamMag"></em>'
                    }
                    if (eval(con.isMe) == true) {
                        desc = '<div class="follow"><a href="javascript:void(0);" id="' + con.id + '" category="' + con.boardCategoryId + '" boardName="' + con.boardName + '" editStatus="true" class="longbutton concern">编辑</a></div>'
                    } else {
                        if (eval(con.isManager) == true) {
                            desc = '<div class="follow"><a href="javascript:void(0);" id="' + con.id + '" boardUserId="' + con.boardUserId + '" isFans="' + con.isFans + '" status="manage" class="longbutton concern">退出管理</a></div>'
                        } else {
                            if (eval(con.isFollow) == false) {
                                desc = '<div class="follow"><a href="javascript:void(0);" id="' + con.id + '" status="follow" class="longbutton concern jquery-option">关注</a></div>'
                            } else {
                                desc = '<div class="follow"><a href="javascript:void(0);" id="' + con.id + '" status="unfollow" class="longbutton unconcern jquery-option">已关注</a></div>'
                            }
                        }
                    }
                    var imgHtml = '<a href="' + con.boardUri + '"><img src="' + con.boardThumb + '"  /></a>';
                    var _html = ['<div class="mbox" board-id="' + con.id + '">', '<div class="followlist">', '<h3 class="mboxTitle"><span class="number floatright">共' + con.shareCount + '张</span><span class="t">' + moreManagerLogo + "" + $.fn.filterStr($.fn.fixStr(con.boardName, 14)) + "</span></h3>", '<div class="list">', imgHtml, "</div>", desc, "</div>", "</div>"].join("");
                    $("#" + id).append(_html)
                } else {
                    var imgHtml = '<a href="' + con.boardUri + '"><img src="' + con.boardThumb + '"  /></a>';
                    var _html = ['<div class="mbox unloadtoger" board-id="' + con.id + '" >', '<div class="followlist" >', '<h3 class="mboxTitle"><span class="number floatright">共' + con.shareCount + '张</span><span class="t">' + $.fn.filterStr($.fn.fixStr(con.boardName, 14)) + "</span></h3>", '<div class="list">', imgHtml, "</div>", "</div>", "</div>"].join("");
                    $("#" + id).append(_html)
                }
            }
            $(".mbox").hover(function () {
                $(this).addClass("hover")
            }, function () {
                $(this).removeClass("hover")
            });
            $("#footer").removeClass("fixedfooter").show()
        }
    },
    autoBoardStatus: false,
    autoBoard: function (b, a) {
        var b = ".mbox";
        $(b).each(function (c) {
            $(this).bind("dblclick", function () {
                return
            });
            $(c.target).bind("click", function () {
                return true
            });
            $(this).css({
                cursor: "move"
            });
            $(this).find("a").css({
                cursor: "move"
            });
            this.onDrag = function () {
                return
            };
            $(this).bind("mousedown", function (d) {
                var n = d || window.event;
                n.isPropagationStopped();
                n.target = this;
                if (n.target.nodeName != "DIV") {
                    return
                }
                if (!boardLoad.autoBoardStatus) {
                    return
                }
                if (parseInt(d.detail) > 1) {
                    return
                }
                var h = true;
                var m = this;
                var q = $(m);
                var p = {
                    x: parseInt(d.pageX),
                    y: parseInt(d.pageY)
                };
                var o = parseInt(q.offset().left);
                var k = parseInt(q.offset().top);
                if ($(".dashBoard").length == 0) {
                    $("<div class='dashBoard'></div>").insertBefore(q)
                } else {
                    return
                }
                q.css({
                    position: "absolute",
                    zIndex: "2"
                });
                var r, r;
                r = $(".dashBoard").offset().left;
                _deTop = $(".dashBoard").offset().top;
                var l = {
                    x: parseInt(d.pageX),
                    y: parseInt(d.pageY)
                };
                var g = o + l.x - p.x;
                var f = k + l.y - p.y;
                q.css({
                    left: g + "px",
                    top: f + "px"
                });
                $(document).bind("mousemove", function (u) {
                    var w = u || window.event;
                    if (!h) {
                        return false
                    }
                    $(m).find("img").on("click", function () {
                        return
                    });
                    if (w.target.nodeName == "IMG") {
                        w.target = m
                    }
                    var v = {
                        x: parseInt(w.pageX),
                        y: parseInt(w.pageY)
                    };
                    var t = o + v.x - p.x;
                    var s = k + v.y - p.y;
                    q.css({
                        left: parseInt(t) + "px",
                        top: parseInt(s) + "px"
                    });
                    $(a).each(function (A) {
                        var x = this;
                        var e = $(x).width();
                        var B = $(x).height();
                        var z = parseInt($(x).offset().left + e / 4);
                        var y = parseInt($(x).offset().top);
                        var D = parseInt($(x).offset().left + e);
                        var C = parseInt($(x).offset().left + e / 2);
                        if (t >= z && t <= D && s >= y) {
                            $(".dashBoard").insertAfter($(x));
                            r = $(".dashBoard").offset().left;
                            _deTop = $(".dashBoard").offset().top
                        }
                        if (A == 0) {
                            if (t >= z && t <= C && s >= y) {
                                $(".dashBoard").insertBefore($(x));
                                r = $(".dashBoard").offset().left;
                                _deTop = $(".dashBoard").offset().top
                            }
                        }
                    })
                });
                $(m).bind("mouseup", function (e) {
                    $(e.target).bind("click", function () {
                        return false
                    });
                    $(m).find("a").bind("click", function () {
                        return false
                    });
                    q.insertAfter($(".dashBoard"));
                    q.animate({
                        left: r + "px",
                        top: _deTop + "px"
                    }, 200, function () {
                        q.css({
                            position: "",
                            left: "0",
                            top: "0"
                        });
                        $(".dashBoard").remove();
                        $(e.target).unbind("click");
                        $(m).find("a").unbind("click")
                    });
                    q.queue(function () {
                        q.dequeue()
                    });
                    $(m).unbind("mouseup");
                    h = false
                })
            })
        })
    },
    debounceFunc: function (d, a, b) {
        var e;
        return function c() {
            var h = this,
                g = arguments;

            function f() {
                if (!b) {
                    d.apply(h, g)
                }
                e = null
            }
            if (e) {
                clearTimeout(e)
            } else {
                if (b) {
                    d.apply(h, g)
                }
            }
            e = setTimeout(f, a || 30)
        }
    },
    serachPage: false,
    serachBoards: false,
    defaultPage: function (d) {
        var b = document.documentElement.clientWidth,
            c, a;
        if (boardLoad.serachPage) {
            c = Math.max(parseInt((b + 14) / 236), 4);
            a = c * 236 - 14
        } else {
            c = Math.max(parseInt((b + 16) / 238), 4);
            a = c * 236 - 12
        }
        if (boardLoad.serachBoards) {
            c = Math.max(parseInt((b + 14) / 236), 4);
            a = c * 236
        }
        $(document.getElementById(d)).css({
            width: a,
            margin: "0 auto"
        });
        if (document.getElementById("autoBoardBar")) {
            $(document.getElementById("autoBoardBar")).css({
                width: a - 254
            })
        }
    },
    updatePage: function () {
        var d = "content",
            c, a, b = document.documentElement.clientWidth;
        if (boardLoad.serachPage) {
            c = Math.max(parseInt((b + 14) / 236), 4);
            a = c * 236
        } else {
            c = Math.max(parseInt((b + 16) / 238), 4);
            a = c * 236 - 12
        }
        if (boardLoad.serachBoards) {
            c = Math.max(parseInt((b + 14) / 236), 4);
            a = c * 236
        }
        $(document.getElementById(d)).css({
            width: a,
            margin: "0 auto"
        });
        if (document.getElementById("autoBoardBar")) {
            $(document.getElementById("autoBoardBar")).css({
                width: a - 254
            })
        }
    },
    getBoard: function (b, e) {
        var d = [];
        var f = $("#" + b).find(e);
        for (var c = 0; c < f.length; c++) {
            var a = $(f[c]).attr("board-id");
            d.push(a)
        }
        return d
    },
    privateLetter: function (id, jsonUrl, func) {
        $.ajax({
            type: "GET",
            url: jsonUrl,
            dataType: "json",
            async: false,
            success: function (data) {
                var jsonContent = eval(data).values;
                for (var i = 0; i < jsonContent.length; i++) {
                    var con = jsonContent[i];
                    var backAsk = "";
                    var sendTo = " 发送给";
                    var newIcon = "";
                    if (con.unreadCount > 0) {
                        newIcon = '<span class="smsnew"></span>'
                    }
                    if (!con.isMe) {
                        backAsk = ' | <a href="' + con.replayUrl + '" class="blue">回复</a> ';
                        sendTo = ""
                    }
                    var userImg = "";
                    if (con.certifyType == 1) {
                        userImg = ':<span class="ctf-icon small-ctf-w" title="Kejian.TV认证专家"></span>'
                    } else {
                        if (con.certifyType == 2) {
                            userImg = ':<span class="ctf-icon small-ctf-star-w" title="Kejian.TV认证达人"></span>'
                        }
                    }
                    var _html = ['<li class="cf" id=' + con.id + ">", '<div class="uhead"><a href="' + con.toUserUrl + '"><img src="' + con.toAvatarMedium + '"  /></a></div>', '<div class="usay">', '<p class="f14">' + sendTo + ' <a href="' + con.toUserUrl + '" >' + con.toUserName + "</a>" + userImg + '：<a href="' + con.replayUrl + '" class="blue">' + con.content + "" + newIcon + "</a></p>", '<p class="gray datatime"><span class="floatright"><a href="' + con.replayUrl + '" class="blue"><em class="blue">共' + con.sessionCount + "次对话</em></a> " + backAsk + "</span>" + con.snsDate + "</p>", "</div>", "</li>"].join("");
                    $("#" + id).append(_html)
                }
                func()
            }
        })
    },
    personPageNext: true,
    personLetter: function (id, jsonUrl, fuc) {
        var dataLength = 0;
        $.ajax({
            type: "GET",
            url: jsonUrl,
            async: false,
            dataType: "json",
            success: function (data) {
                if (!eval(data).isHasNextPage) {
                    boardLoad.personPageNext = false
                } else {
                    boardLoad.personPageNext = true
                }
                var jsonContent = eval(data).value;
                dataLength = data.length;
                var _html = "";
                var _li = "";
                var _lastLi = "";
                $("#" + id).append(_li);
                for (var i = 0; i < jsonContent.length; i++) {
                    var con = jsonContent[i];
                    var backAsk = "";
                    var _endLi = "";
                    if (con.isMe) {
                        _html = ['<div class="cf aitem" id=' + con.id + ">", '<div class="yhead"><a href="' + con.fromUserUrl + '"><img src="' + con.avatarMedium + '" /></a></div>', '<div class="conversations ta">', '<div class="top"></div><div class="client"><span class="pointer"></span><a href="javascript:void(0)" class="blue">' + con.fromUserName + "</a>：" + con.content + '<p class="del-letter"><a href="javascript:void(0)" messageSessionId="' + con.messageSessionId + '" messageDetailId="' + con.id + '" class="blue floatright delete_message">删除</a><span class="gray">' + con.snsDate + "</span></p></div>", '<div class="bottom"></div>', "</div>", "</div>"].join("")
                    } else {
                        _html = ['<div class="cf aitem" id=' + con.id + ">", '<div class="uhead"><a href="' + con.fromUserUrl + '"><img src="' + con.avatarMedium + '"  usercard="' + con.toUserId + '" havecard="1"/></a></div>', '<div class="conversations my">', '<div class="top"></div>', '<div class="client"><span class="pointer"></span><a href="javascript:void(0)" class="blue" usercard="' + con.toUserId + '" havecard="1">' + con.fromUserName + "</a>：" + con.content + ' <p class="del-letter"><span class="floatright"><a href="javascript:void(0)" id="replay_message" userId="' + con.fromUserId + '" name="' + con.fromUserName + '" class="blue">回复</a> | <a href="javascript:void(0)" class="delete_message" messageSessionId="' + con.messageSessionId + '" messageDetailId="' + con.id + '" class="blue floatright delete_message">删除</a></span><span class="gray">' + con.snsDate + "</span></p></div>", '<div class="bottom"></div>', "</div>", "</div>"].join("")
                    }
                    $("#" + id).append(_html)
                }
                $("#" + id).append(_lastLi);
                fuc()
            }
        });
        return dataLength
    },
    boardUserPage: true,
    addBoardUser: function (id, json, jsonUrl, sta) {
        if (sta) {
            $.ajax({
                type: "GET",
                url: jsonUrl,
                dataType: "json",
                success: function (data) {
                    addInformation(data)
                }
            })
        } else {
            addInformation(json)
        }function addInformation(dataJson) {
            var jsonObj;
            if (isString(dataJson)) {
                jsonObj = eval(dataJson)
            } else {
                jsonObj = dataJson
            }
            var con = jsonObj.result;
            if (!jsonObj.hasNextPage) {
                boardLoad.boardUserPage = false
            }
            for (var i = 0, len = con.length; i < len; i++) {
                var obj = con[i];
                var gender;
                var img = "";
                switch (obj.gender) {
                case 1:
                    gender = "男";
                    break;
                case 2:
                    gender = "女";
                    break;
                default:
                    gender = "男";
                    break
                }
                if (loginUser.id > 0) {
                    if (obj.isMe) {
                        img = '<a editstatus="true" boardName="' + obj.nickName + '" class="longbutton concern jquery-option">编辑</a>'
                    } else {
                        if (obj.isFollowing) {
                            img = '<a href="javascript:void(0)" class="longbutton unconcern jquery-option">已关注</a>'
                        } else {
                            img = '<a href="javascript:void(0)" class="longbutton concern jquery-option">关注</a>'
                        }
                    }
                    var _nName = $.fn.fixStr(obj.nickName, 18, "...");
                    var _html = ['<div boardId="' + obj.id + '" class="mbox searchbox">', '<div class="followlist">', '<div class="userhead"><a href="' + uri("URI_USER", obj.id) + '"><img src="' + obj.avatarLargeCut + '" /></a></div>', '<div class="usershare">', '<a href="' + uri("URI_USER", obj.id) + '" class="f14 blue">' + _nName + '</a> <span class="gray">' + gender + "</span><br />", '<span class="gray">关注' + obj.followCount + " · 粉丝<em>" + obj.fansCount + "</em> · 图格" + obj.boardCount + "</span>", "</div>", '<div class="follow">' + img + "</div>", "</div>", "</div>"].join("");
                    $("#" + id).append(_html)
                } else {
                    var _nName = $.fn.fixStr(obj.nickName, 18, "...");
                    var _html = ['<div boardId="' + obj.id + '" class="mbox searchbox" style="height:264px">', '<div class="followlist">', '<div class="userhead"><a href="' + uri("URI_USER", obj.id) + '"><img src="' + obj.avatarLargeCut + '" /></a></div>', '<div class="usershare">', '<a href="' + uri("URI_USER", obj.id) + '" class="f14 blue">' + _nName + '</a> <span class="gray">' + gender + "</span><br />", '<span class="gray">关注' + obj.followCount + " · 粉丝<em>" + obj.fansCount + "</em> · 图格" + obj.boardCount + "</span>", "</div>", '<div class="follow">' + img + "</div>", "</div>", "</div>"].join("");
                    $("#" + id).append(_html)
                }
            }
            $("#footer").show();
            $(".mbox").hover(function () {
                $(this).addClass("hover")
            }, function () {
                $(this).removeClass("hover")
            })
        }
    },
    addBoardRecommendUser: function (id, json, jsonUrl, sta) {
        if (sta) {
            $.ajax({
                type: "GET",
                url: jsonUrl,
                dataType: "json",
                success: function (data) {
                    addInformation(data)
                }
            })
        } else {
            addInformation(json)
        }function filter(str) {
            str = str.replace(/</g, "&lt;");
            str = str.replace(/>/g, "&gt;");
            str = str.replace(/"/g, "&quot;");
            return str
        }function addInformation(dataJson) {
            var con = eval(dataJson).result;
            if (!eval(dataJson).hasNextPage) {
                boardLoad.boardUserPage = false
            }
            for (var i = 0, len = con.length; i < len; i++) {
                var obj = con[i];
                var gender;
                var btn = "";
                switch (obj.gender) {
                case 0:
                case 1:
                    gender = "男";
                    break;
                case 2:
                    gender = "女";
                    break;
                default:
                    gender = "男";
                    return
                }
                if (obj.isMe) {
                    btn = '<a href="javascript:void(0)" editstatus="true" userid="' + obj.id + '" class="psvr_login_required buttonfollow  friend-follow jquery-option">编辑</a>'
                } else {
                    if (loginUser.id > 0) {
                        if (!obj.isFollowing) {
                            btn = '<a href="javascript:void(0)" rel="1" class="psvr_login_required buttonfollow friend-follow jquery-option" userid="' + obj.id + '">关注</a>'
                        } else {
                            btn = '<a href="javascript:void(0)" rel="2"  class="psvr_login_required buttonfollow unfriend-follow jquery-option" userid="' + obj.id + '">已关注</a>'
                        }
                    }
                }
                var _bName = $.fn.fixStr(filter(obj.nickName), 18, "...");
                var cer = "";
                if (obj.certifyType == 1) {
                    cer = '<span class="ctf-icon small-ctf-w"></span>'
                } else {
                    if (obj.certifyType == 2) {
                        cer = '<span class="ctf-icon small-ctf-star-w"></span>'
                    }
                }
                var _html = ['<li><div class="uhead">', '<a href="' + uri("URI_USER", obj.id) + '" havecard="1" usercard="' + obj.id + '">', '<img src="' + obj.avatarMedium + '"/>', '</a></div><div class="uinfo">', '<a href="' + uri("URI_USER", obj.id) + '" havecard="1" usercard="' + obj.id + '" class="f14 blue">', _bName + "</a>" + cer + "<br />", '<span class="gray">' + gender + "</span><p>", btn + "</p></div></li>"].join("");
                $("#" + id).append(_html)
            }
        }
    },
    boardPage: true,
    boardPageNo: 0,
    boardList: function (id, jsonUrl, sta, dataObj) {
        if (!sta) {
            $.ajax({
                type: "GET",
                url: jsonUrl,
                dataType: "json",
                success: function (data) {
                    initContent(data)
                }
            })
        } else {
            initContent(dataObj)
        }function initContent(data) {
            var jsonObj;
            if (isString(data)) {
                jsonObj = eval(data)
            } else {
                jsonObj = data
            }
            var key = $(".sheet").find("span").eq(1).find("a").text();
            if (data == "({})") {
                var _htmlcontent = ['<div class="nosearchresult"><p>抱歉没有找到', '“<span class="blue">' + key + "</span>”相关的图格<br /></p>", '<span class="gray">建议： <br />', "请尽量输入常用词 <br />", "请尽量使用简洁的关键词</span></div>"].join("");
                $("#content .sharelist").append(_htmlcontent);
                return
            }
            var content = jsonObj.result;
            boardLoad.boardPageNo = jsonObj.pageNo;
            if (!eval(data).hasNextPage) {
                boardLoad.boardPage = false
            }
            for (var j = 0; j < content.length; j++) {
                var con = content[j];
                var imgHtml = "";
                var desc = "";
                if (loginUser.id > 0) {
                    if (eval(con.isMe) == true) {
                        desc = '<div class="follow"><a href="javascript:void(0);" id="' + con.id + '" category="' + con.boardCategoryId + '" boardName="' + con.boardName + '" editStatus="true" class="longbutton concern jquery-option">编辑</a></div>'
                    } else {
                        if (eval(con.isManager) == true) {
                            desc = '<div class="follow"><a href="javascript:void(0);" id="' + con.id + '" boardUserId="' + con.boardUserId + '" status="manage" class="longbutton concern jquery-option">退出管理</a></div>'
                        } else {
                            if (eval(con.isFollow) == false) {
                                desc = '<div class="follow"><a href="javascript:void(0);" id="' + con.id + '" status="follow" class="longbutton concern jquery-option">关注</a></div>'
                            } else {
                                desc = '<div class="follow"><a href="javascript:void(0);" id="' + con.id + '" status="unfollow" class="longbutton unconcern jquery-option">已关注</a></div>'
                            }
                        }
                    }
                    var imgHtml = '<a href="' + con.boardUri + '"><img src="' + con.boardThumb + '"  /></a>';
                    var _bName = $.fn.fixStr(con.boardName, 18, "...");
                    var _html = ['<div class="mbox" board-id="' + con.id + '">', '<div class="followlist">', '<h3 class="mboxTitle"><span class="number floatright">共' + con.shareCount + '张</span><span class="t" title="' + con.boardName + '">' + _bName + "</span></h3>", '<div class="list">', imgHtml, "</div>", desc, "</div>", "</div>"].join("");
                    $("#" + id).append(_html)
                } else {
                    var imgHtml = '<a href="' + con.boardUri + '"><img src="' + con.boardThumb + '"  /></a>';
                    var _bName = $.fn.fixStr(con.boardName, 18, "...");
                    var _html = ['<div class="mbox unloadtoger" board-id="' + con.id + '">', '<div class="followlist">', '<h3 class="mboxTitle"><span class="number floatright">共' + con.shareCount + '张</span><span class="t" title="' + con.boardName + '">' + _bName + "</span></h3>", '<div class="list">', imgHtml, "</div>", desc, "</div>", "</div>"].join("");
                    $("#" + id).append(_html)
                }
            }
            $(".mbox").hover(function () {
                $(this).addClass("hover")
            }, function () {
                $(this).removeClass("hover")
            });
            $("#footer").show()
        }
    }
};
var SWFUpload;
var swfobject;
if (SWFUpload == undefined) {
    SWFUpload = function (b) {
        this.initSWFUpload(b)
    }
}
SWFUpload.prototype.initSWFUpload = function (c) {
    try {
        this.customSettings = {};
        this.settings = {};
        this.eventQueue = [];
        this.movieName = "SWFUpload_" + SWFUpload.movieCount++;
        this.movieElement = null;
        SWFUpload.instances[this.movieName] = this;
        this.initSettings(c);
        this.loadSupport();
        if (this.swfuploadPreload()) {
            this.loadFlash()
        }
        this.displayDebugInfo()
    } catch (d) {
        delete SWFUpload.instances[this.movieName];
        throw d
    }
};
SWFUpload.instances = {};
SWFUpload.movieCount = 0;
SWFUpload.version = "2.5.0 2010-01-15 Beta 2";
SWFUpload.QUEUE_ERROR = {
    QUEUE_LIMIT_EXCEEDED: -100,
    FILE_EXCEEDS_SIZE_LIMIT: -110,
    ZERO_BYTE_FILE: -120,
    INVALID_FILETYPE: -130
};
SWFUpload.UPLOAD_ERROR = {
    HTTP_ERROR: -200,
    MISSING_UPLOAD_URL: -210,
    IO_ERROR: -220,
    SECURITY_ERROR: -230,
    UPLOAD_LIMIT_EXCEEDED: -240,
    UPLOAD_FAILED: -250,
    SPECIFIED_FILE_ID_NOT_FOUND: -260,
    FILE_VALIDATION_FAILED: -270,
    FILE_CANCELLED: -280,
    UPLOAD_STOPPED: -290,
    RESIZE: -300
};
SWFUpload.FILE_STATUS = {
    QUEUED: -1,
    IN_PROGRESS: -2,
    ERROR: -3,
    COMPLETE: -4,
    CANCELLED: -5
};
SWFUpload.UPLOAD_TYPE = {
    NORMAL: -1,
    RESIZED: -2
};
SWFUpload.BUTTON_ACTION = {
    SELECT_FILE: -100,
    SELECT_FILES: -110,
    START_UPLOAD: -120,
    JAVASCRIPT: -130,
    NONE: -130
};
SWFUpload.CURSOR = {
    ARROW: -1,
    HAND: -2
};
SWFUpload.WINDOW_MODE = {
    WINDOW: "window",
    TRANSPARENT: "transparent",
    OPAQUE: "opaque"
};
SWFUpload.RESIZE_ENCODING = {
    JPEG: -1,
    PNG: -2
};
SWFUpload.completeURL = function (f) {
    try {
        var g = "",
            h = -1;
        if (typeof (f) !== "string" || f.match(/^https?:\/\//i) || f.match(/^\//) || f === "") {
            return f
        }
        h = window.location.pathname.lastIndexOf("/");
        if (h <= 0) {
            g = "/"
        } else {
            g = window.location.pathname.substr(0, h) + "/"
        }
        return g + f
    } catch (e) {
        return f
    }
};
SWFUpload.onload = function () {};
SWFUpload.prototype.initSettings = function (b) {
    this.ensureDefault = function (f, a) {
        var e = b[f];
        if (e != undefined) {
            this.settings[f] = e
        } else {
            this.settings[f] = a
        }
    };
    this.ensureDefault("upload_url", "");
    this.ensureDefault("preserve_relative_urls", false);
    this.ensureDefault("file_post_name", "Filedata");
    this.ensureDefault("post_params", {});
    this.ensureDefault("use_query_string", false);
    this.ensureDefault("requeue_on_error", false);
    this.ensureDefault("http_success", []);
    this.ensureDefault("assume_success_timeout", 0);
    this.ensureDefault("file_types", "*.*");
    this.ensureDefault("file_types_description", "All Files");
    this.ensureDefault("file_size_limit", 0);
    this.ensureDefault("file_upload_limit", 0);
    this.ensureDefault("file_queue_limit", 0);
    this.ensureDefault("flash_url", "swfupload.swf");
    this.ensureDefault("flash9_url", "swfupload_fp9.swf");
    this.ensureDefault("prevent_swf_caching", true);
    this.ensureDefault("button_image_url", "");
    this.ensureDefault("button_width", 1);
    this.ensureDefault("button_height", 1);
    this.ensureDefault("button_text", "");
    this.ensureDefault("button_text_style", "color: #000000; font-size: 16pt;");
    this.ensureDefault("button_text_top_padding", 0);
    this.ensureDefault("button_text_left_padding", 0);
    this.ensureDefault("button_action", SWFUpload.BUTTON_ACTION.SELECT_FILES);
    this.ensureDefault("button_disabled", false);
    this.ensureDefault("button_placeholder_id", "");
    this.ensureDefault("button_placeholder", null);
    this.ensureDefault("button_cursor", SWFUpload.CURSOR.ARROW);
    this.ensureDefault("button_window_mode", SWFUpload.WINDOW_MODE.WINDOW);
    this.ensureDefault("debug", false);
    this.settings.debug_enabled = this.settings.debug;
    this.settings.return_upload_start_handler = this.returnUploadStart;
    this.ensureDefault("swfupload_preload_handler", null);
    this.ensureDefault("swfupload_load_failed_handler", null);
    this.ensureDefault("swfupload_loaded_handler", null);
    this.ensureDefault("file_dialog_start_handler", null);
    this.ensureDefault("file_queued_handler", null);
    this.ensureDefault("file_queue_error_handler", null);
    this.ensureDefault("file_dialog_complete_handler", null);
    this.ensureDefault("upload_resize_start_handler", null);
    this.ensureDefault("upload_start_handler", null);
    this.ensureDefault("upload_progress_handler", null);
    this.ensureDefault("upload_error_handler", null);
    this.ensureDefault("upload_success_handler", null);
    this.ensureDefault("upload_complete_handler", null);
    this.ensureDefault("mouse_click_handler", null);
    this.ensureDefault("mouse_out_handler", null);
    this.ensureDefault("mouse_over_handler", null);
    this.ensureDefault("debug_handler", this.debugMessage);
    this.ensureDefault("custom_settings", {});
    this.customSettings = this.settings.custom_settings;
    if ( !! this.settings.prevent_swf_caching) {
        this.settings.flash_url = this.settings.flash_url + (this.settings.flash_url.indexOf("?") < 0 ? "?" : "&") + "preventswfcaching=" + new Date().getTime();
        this.settings.flash9_url = this.settings.flash9_url + (this.settings.flash9_url.indexOf("?") < 0 ? "?" : "&") + "preventswfcaching=" + new Date().getTime()
    }
    if (!this.settings.preserve_relative_urls) {
        this.settings.upload_url = SWFUpload.completeURL(this.settings.upload_url);
        this.settings.button_image_url = SWFUpload.completeURL(this.settings.button_image_url)
    }
    delete this.ensureDefault
};
SWFUpload.prototype.loadSupport = function () {
    this.support = {
        loading: swfobject.hasFlashPlayerVersion("9.0.28"),
        imageResize: swfobject.hasFlashPlayerVersion("10.0.0")
    }
};
SWFUpload.prototype.loadFlash = function () {
    var g, k, l, h, m;
    if (!this.support.loading) {
        this.queueEvent("swfupload_load_failed_handler", ["Flash Player doesn't support SWFUpload"]);
        return
    }
    if (document.getElementById(this.movieName) !== null) {
        this.support.loading = false;
        this.queueEvent("swfupload_load_failed_handler", ["Element ID already in use"]);
        return
    }
    g = document.getElementById(this.settings.button_placeholder_id) || this.settings.button_placeholder;
    if (g == undefined) {
        this.support.loading = false;
        this.queueEvent("swfupload_load_failed_handler", ["button place holder not found"]);
        return
    }
    l = (g.currentStyle && g.currentStyle.display || window.getComputedStyle && document.defaultView.getComputedStyle(g, null).getPropertyValue("display")) !== "block" ? "span" : "div";
    k = document.createElement(l);
    h = this.getFlashHTML();
    try {
        k.innerHTML = h
    } catch (n) {
        this.support.loading = false;
        this.queueEvent("swfupload_load_failed_handler", ["Exception loading Flash HTML into placeholder"]);
        return
    }
    m = k.getElementsByTagName("object");
    if (!m || m.length > 1 || m.length === 0) {
        this.support.loading = false;
        this.queueEvent("swfupload_load_failed_handler", ["Unable to find movie after adding to DOM"]);
        return
    } else {
        if (m.length === 1) {
            this.movieElement = m[0]
        }
    }
    g.parentNode.replaceChild(k.firstChild, g);
    if (window[this.movieName] == undefined) {
        window[this.movieName] = this.getMovieElement()
    }
};
SWFUpload.prototype.getFlashHTML = function (b) {
    return ['<object id="', this.movieName, '" type="application/x-shockwave-flash" data="', (this.support.imageResize ? this.settings.flash_url : this.settings.flash9_url), '" width="', this.settings.button_width, '" height="', this.settings.button_height, '" class="swfupload">', '<param name="wmode" value="', this.settings.button_window_mode, '" />', '<param name="movie" value="', (this.support.imageResize ? this.settings.flash_url : this.settings.flash9_url), '" />', '<param name="quality" value="high" />', '<param name="allowScriptAccess" value="always" />', '<param name="flashvars" value="' + this.getFlashVars() + '" />', "</object>"].join("")
};
SWFUpload.prototype.getFlashVars = function () {
    var d, c;
    c = this.buildParamString();
    d = this.settings.http_success.join(",");
    return ["movieName=", encodeURIComponent(this.movieName), "&amp;uploadURL=", encodeURIComponent(this.settings.upload_url), "&amp;useQueryString=", encodeURIComponent(this.settings.use_query_string), "&amp;requeueOnError=", encodeURIComponent(this.settings.requeue_on_error), "&amp;httpSuccess=", encodeURIComponent(d), "&amp;assumeSuccessTimeout=", encodeURIComponent(this.settings.assume_success_timeout), "&amp;params=", encodeURIComponent(c), "&amp;filePostName=", encodeURIComponent(this.settings.file_post_name), "&amp;fileTypes=", encodeURIComponent(this.settings.file_types), "&amp;fileTypesDescription=", encodeURIComponent(this.settings.file_types_description), "&amp;fileSizeLimit=", encodeURIComponent(this.settings.file_size_limit), "&amp;fileUploadLimit=", encodeURIComponent(this.settings.file_upload_limit), "&amp;fileQueueLimit=", encodeURIComponent(this.settings.file_queue_limit), "&amp;debugEnabled=", encodeURIComponent(this.settings.debug_enabled), "&amp;buttonImageURL=", encodeURIComponent(this.settings.button_image_url), "&amp;buttonWidth=", encodeURIComponent(this.settings.button_width), "&amp;buttonHeight=", encodeURIComponent(this.settings.button_height), "&amp;buttonText=", encodeURIComponent(this.settings.button_text), "&amp;buttonTextTopPadding=", encodeURIComponent(this.settings.button_text_top_padding), "&amp;buttonTextLeftPadding=", encodeURIComponent(this.settings.button_text_left_padding), "&amp;buttonTextStyle=", encodeURIComponent(this.settings.button_text_style), "&amp;buttonAction=", encodeURIComponent(this.settings.button_action), "&amp;buttonDisabled=", encodeURIComponent(this.settings.button_disabled), "&amp;buttonCursor=", encodeURIComponent(this.settings.button_cursor)].join("")
};
SWFUpload.prototype.getMovieElement = function () {
    if (this.movieElement == undefined) {
        this.movieElement = document.getElementById(this.movieName)
    }
    if (this.movieElement === null) {
        throw "Could not find Flash element"
    }
    return this.movieElement
};
SWFUpload.prototype.buildParamString = function () {
    var e, f, d = [];
    f = this.settings.post_params;
    if (typeof (f) === "object") {
        for (e in f) {
            if (f.hasOwnProperty(e)) {
                d.push(encodeURIComponent(e.toString()) + "=" + encodeURIComponent(f[e].toString()))
            }
        }
    }
    return d.join("&amp;")
};
SWFUpload.prototype.destroy = function () {
    var e;
    try {
        this.cancelUpload(null, false);
        e = this.cleanUp();
        if (e) {
            try {
                e.parentNode.removeChild(e)
            } catch (d) {}
        }
        window[this.movieName] = null;
        SWFUpload.instances[this.movieName] = null;
        delete SWFUpload.instances[this.movieName];
        this.movieElement = null;
        this.settings = null;
        this.customSettings = null;
        this.eventQueue = null;
        this.movieName = null;
        return true
    } catch (f) {
        return false
    }
};
SWFUpload.prototype.displayDebugInfo = function () {
    this.debug(["---SWFUpload Instance Info---\n", "Version: ", SWFUpload.version, "\n", "Movie Name: ", this.movieName, "\n", "Settings:\n", "\t", "upload_url:               ", this.settings.upload_url, "\n", "\t", "flash_url:                ", this.settings.flash_url, "\n", "\t", "flash9_url:                ", this.settings.flash9_url, "\n", "\t", "use_query_string:         ", this.settings.use_query_string.toString(), "\n", "\t", "requeue_on_error:         ", this.settings.requeue_on_error.toString(), "\n", "\t", "http_success:             ", this.settings.http_success.join(", "), "\n", "\t", "assume_success_timeout:   ", this.settings.assume_success_timeout, "\n", "\t", "file_post_name:           ", this.settings.file_post_name, "\n", "\t", "post_params:              ", this.settings.post_params.toString(), "\n", "\t", "file_types:               ", this.settings.file_types, "\n", "\t", "file_types_description:   ", this.settings.file_types_description, "\n", "\t", "file_size_limit:          ", this.settings.file_size_limit, "\n", "\t", "file_upload_limit:        ", this.settings.file_upload_limit, "\n", "\t", "file_queue_limit:         ", this.settings.file_queue_limit, "\n", "\t", "debug:                    ", this.settings.debug.toString(), "\n", "\t", "prevent_swf_caching:      ", this.settings.prevent_swf_caching.toString(), "\n", "\t", "button_placeholder_id:    ", this.settings.button_placeholder_id.toString(), "\n", "\t", "button_placeholder:       ", (this.settings.button_placeholder ? "Set" : "Not Set"), "\n", "\t", "button_image_url:         ", this.settings.button_image_url.toString(), "\n", "\t", "button_width:             ", this.settings.button_width.toString(), "\n", "\t", "button_height:            ", this.settings.button_height.toString(), "\n", "\t", "button_text:              ", this.settings.button_text.toString(), "\n", "\t", "button_text_style:        ", this.settings.button_text_style.toString(), "\n", "\t", "button_text_top_padding:  ", this.settings.button_text_top_padding.toString(), "\n", "\t", "button_text_left_padding: ", this.settings.button_text_left_padding.toString(), "\n", "\t", "button_action:            ", this.settings.button_action.toString(), "\n", "\t", "button_cursor:            ", this.settings.button_cursor.toString(), "\n", "\t", "button_disabled:          ", this.settings.button_disabled.toString(), "\n", "\t", "custom_settings:          ", this.settings.custom_settings.toString(), "\n", "Event Handlers:\n", "\t", "swfupload_preload_handler assigned:  ", (typeof this.settings.swfupload_preload_handler === "function").toString(), "\n", "\t", "swfupload_load_failed_handler assigned:  ", (typeof this.settings.swfupload_load_failed_handler === "function").toString(), "\n", "\t", "swfupload_loaded_handler assigned:  ", (typeof this.settings.swfupload_loaded_handler === "function").toString(), "\n", "\t", "mouse_click_handler assigned:       ", (typeof this.settings.mouse_click_handler === "function").toString(), "\n", "\t", "mouse_over_handler assigned:        ", (typeof this.settings.mouse_over_handler === "function").toString(), "\n", "\t", "mouse_out_handler assigned:         ", (typeof this.settings.mouse_out_handler === "function").toString(), "\n", "\t", "file_dialog_start_handler assigned: ", (typeof this.settings.file_dialog_start_handler === "function").toString(), "\n", "\t", "file_queued_handler assigned:       ", (typeof this.settings.file_queued_handler === "function").toString(), "\n", "\t", "file_queue_error_handler assigned:  ", (typeof this.settings.file_queue_error_handler === "function").toString(), "\n", "\t", "upload_resize_start_handler assigned:      ", (typeof this.settings.upload_resize_start_handler === "function").toString(), "\n", "\t", "upload_start_handler assigned:      ", (typeof this.settings.upload_start_handler === "function").toString(), "\n", "\t", "upload_progress_handler assigned:   ", (typeof this.settings.upload_progress_handler === "function").toString(), "\n", "\t", "upload_error_handler assigned:      ", (typeof this.settings.upload_error_handler === "function").toString(), "\n", "\t", "upload_success_handler assigned:    ", (typeof this.settings.upload_success_handler === "function").toString(), "\n", "\t", "upload_complete_handler assigned:   ", (typeof this.settings.upload_complete_handler === "function").toString(), "\n", "\t", "debug_handler assigned:             ", (typeof this.settings.debug_handler === "function").toString(), "\n", "Support:\n", "\t", "Load:                     ", (this.support.loading ? "Yes" : "No"), "\n", "\t", "Image Resize:             ", (this.support.imageResize ? "Yes" : "No"), "\n"].join(""))
};
SWFUpload.prototype.addSetting = function (d, f, e) {
    if (f == undefined) {
        return (this.settings[d] = e)
    } else {
        return (this.settings[d] = f)
    }
};
SWFUpload.prototype.getSetting = function (b) {
    if (this.settings[b] != undefined) {
        return this.settings[b]
    }
    return ""
};
SWFUpload.prototype.callFlash = function (functionName, argumentArray) {
    var movieElement, returnValue, returnString;
    argumentArray = argumentArray || [];
    movieElement = this.getMovieElement();
    try {
        if (movieElement != undefined) {
            returnString = movieElement.CallFunction('<invoke name="' + functionName + '" returntype="javascript">' + __flash__argumentsToXML(argumentArray, 0) + "</invoke>");
            returnValue = eval(returnString)
        } else {
            this.debug("Can't call flash because the movie wasn't found.")
        }
    } catch (ex) {
        this.debug("Exception calling flash function '" + functionName + "': " + ex.message)
    }
    if (returnValue != undefined && typeof returnValue.post === "object") {
        returnValue = this.unescapeFilePostParams(returnValue)
    }
    return returnValue
};
SWFUpload.prototype.selectFile = function () {
    this.callFlash("SelectFile")
};
SWFUpload.prototype.selectFiles = function () {
    this.callFlash("SelectFiles")
};
SWFUpload.prototype.startUpload = function (b) {
    this.callFlash("StartUpload", [b])
};
SWFUpload.prototype.startResizedUpload = function (g, m, h, l, k, n) {
    this.callFlash("StartUpload", [g, {
        width: m,
        height: h,
        encoding: l,
        quality: k,
        allowEnlarging: n
    }])
};
SWFUpload.prototype.cancelUpload = function (d, c) {
    if (c !== false) {
        c = true
    }
    this.callFlash("CancelUpload", [d, c])
};
SWFUpload.prototype.stopUpload = function () {
    this.callFlash("StopUpload")
};
SWFUpload.prototype.requeueUpload = function (b) {
    return this.callFlash("RequeueUpload", [b])
};
SWFUpload.prototype.getStats = function () {
    return this.callFlash("GetStats")
};
SWFUpload.prototype.setStats = function (b) {
    this.callFlash("SetStats", [b])
};
SWFUpload.prototype.getFile = function (b) {
    if (typeof (b) === "number") {
        return this.callFlash("GetFileByIndex", [b])
    } else {
        return this.callFlash("GetFile", [b])
    }
};
SWFUpload.prototype.getQueueFile = function (b) {
    if (typeof (b) === "number") {
        return this.callFlash("GetFileByQueueIndex", [b])
    } else {
        return this.callFlash("GetFile", [b])
    }
};
SWFUpload.prototype.addFileParam = function (e, d, f) {
    return this.callFlash("AddFileParam", [e, d, f])
};
SWFUpload.prototype.removeFileParam = function (d, c) {
    this.callFlash("RemoveFileParam", [d, c])
};
SWFUpload.prototype.setUploadURL = function (b) {
    this.settings.upload_url = b.toString();
    this.callFlash("SetUploadURL", [b])
};
SWFUpload.prototype.setPostParams = function (b) {
    this.settings.post_params = b;
    this.callFlash("SetPostParams", [b])
};
SWFUpload.prototype.addPostParam = function (d, c) {
    this.settings.post_params[d] = c;
    this.callFlash("SetPostParams", [this.settings.post_params])
};
SWFUpload.prototype.removePostParam = function (b) {
    delete this.settings.post_params[b];
    this.callFlash("SetPostParams", [this.settings.post_params])
};
SWFUpload.prototype.setFileTypes = function (d, c) {
    this.settings.file_types = d;
    this.settings.file_types_description = c;
    this.callFlash("SetFileTypes", [d, c])
};
SWFUpload.prototype.setFileSizeLimit = function (b) {
    this.settings.file_size_limit = b;
    this.callFlash("SetFileSizeLimit", [b])
};
SWFUpload.prototype.setFileUploadLimit = function (b) {
    this.settings.file_upload_limit = b;
    this.callFlash("SetFileUploadLimit", [b])
};
SWFUpload.prototype.setFileQueueLimit = function (b) {
    this.settings.file_queue_limit = b;
    this.callFlash("SetFileQueueLimit", [b])
};
SWFUpload.prototype.setFilePostName = function (b) {
    this.settings.file_post_name = b;
    this.callFlash("SetFilePostName", [b])
};
SWFUpload.prototype.setUseQueryString = function (b) {
    this.settings.use_query_string = b;
    this.callFlash("SetUseQueryString", [b])
};
SWFUpload.prototype.setRequeueOnError = function (b) {
    this.settings.requeue_on_error = b;
    this.callFlash("SetRequeueOnError", [b])
};
SWFUpload.prototype.setHTTPSuccess = function (b) {
    if (typeof b === "string") {
        b = b.replace(" ", "").split(",")
    }
    this.settings.http_success = b;
    this.callFlash("SetHTTPSuccess", [b])
};
SWFUpload.prototype.setAssumeSuccessTimeout = function (b) {
    this.settings.assume_success_timeout = b;
    this.callFlash("SetAssumeSuccessTimeout", [b])
};
SWFUpload.prototype.setDebugEnabled = function (b) {
    this.settings.debug_enabled = b;
    this.callFlash("SetDebugEnabled", [b])
};
SWFUpload.prototype.setButtonImageURL = function (b) {
    if (b == undefined) {
        b = ""
    }
    this.settings.button_image_url = b;
    this.callFlash("SetButtonImageURL", [b])
};
SWFUpload.prototype.setButtonDimensions = function (f, e) {
    this.settings.button_width = f;
    this.settings.button_height = e;
    var d = this.getMovieElement();
    if (d != undefined) {
        d.style.width = f + "px";
        d.style.height = e + "px"
    }
    this.callFlash("SetButtonDimensions", [f, e])
};
SWFUpload.prototype.setButtonText = function (b) {
    this.settings.button_text = b;
    this.callFlash("SetButtonText", [b])
};
SWFUpload.prototype.setButtonTextPadding = function (c, d) {
    this.settings.button_text_top_padding = d;
    this.settings.button_text_left_padding = c;
    this.callFlash("SetButtonTextPadding", [c, d])
};
SWFUpload.prototype.setButtonTextStyle = function (b) {
    this.settings.button_text_style = b;
    this.callFlash("SetButtonTextStyle", [b])
};
SWFUpload.prototype.setButtonDisabled = function (b) {
    this.settings.button_disabled = b;
    this.callFlash("SetButtonDisabled", [b])
};
SWFUpload.prototype.setButtonAction = function (b) {
    this.settings.button_action = b;
    this.callFlash("SetButtonAction", [b])
};
SWFUpload.prototype.setButtonCursor = function (b) {
    this.settings.button_cursor = b;
    this.callFlash("SetButtonCursor", [b])
};
SWFUpload.prototype.queueEvent = function (d, f) {
    var e = this;
    if (f == undefined) {
        f = []
    } else {
        if (!(f instanceof Array)) {
            f = [f]
        }
    }
    if (typeof this.settings[d] === "function") {
        this.eventQueue.push(function () {
            this.settings[d].apply(this, f)
        });
        setTimeout(function () {
            e.executeNextEvent()
        }, 0)
    } else {
        if (this.settings[d] !== null) {
            throw "Event handler " + d + " is unknown or is not a function"
        }
    }
};
SWFUpload.prototype.executeNextEvent = function () {
    var b = this.eventQueue ? this.eventQueue.shift() : null;
    if (typeof (b) === "function") {
        b.apply(this)
    }
};
SWFUpload.prototype.unescapeFilePostParams = function (n) {
    var l = /[$]([0-9a-f]{4})/i,
        k = {},
        m, h, g;
    if (n != undefined) {
        for (h in n.post) {
            if (n.post.hasOwnProperty(h)) {
                m = h;
                while ((g = l.exec(m)) !== null) {
                    m = m.replace(g[0], String.fromCharCode(parseInt("0x" + g[1], 16)))
                }
                k[m] = n.post[h]
            }
        }
        n.post = k
    }
    return n
};
SWFUpload.prototype.swfuploadPreload = function () {
    var b;
    if (typeof this.settings.swfupload_preload_handler === "function") {
        b = this.settings.swfupload_preload_handler.call(this)
    } else {
        if (this.settings.swfupload_preload_handler != undefined) {
            throw "upload_start_handler must be a function"
        }
    }
    if (b === undefined) {
        b = true
    }
    return !!b
};
SWFUpload.prototype.flashReady = function () {
    var b = this.cleanUp();
    if (!b) {
        this.debug("Flash called back ready but the flash movie can't be found.");
        return
    }
    this.queueEvent("swfupload_loaded_handler")
};
SWFUpload.prototype.cleanUp = function () {
    var h, f = this.getMovieElement();
    try {
        if (f && typeof (f.CallFunction) === "unknown") {
            this.debug("Removing Flash functions hooks (this should only run in IE and should prevent memory leaks)");
            for (h in f) {
                try {
                    if (typeof (f[h]) === "function") {
                        f[h] = null
                    }
                } catch (e) {}
            }
        }
    } catch (g) {}
    window.__flash__removeCallback = function (c, b) {
        try {
            if (c) {
                c[b] = null
            }
        } catch (a) {}
    };
    return f
};
SWFUpload.prototype.mouseClick = function () {
    this.queueEvent("mouse_click_handler")
};
SWFUpload.prototype.mouseOver = function () {
    this.queueEvent("mouse_over_handler")
};
SWFUpload.prototype.mouseOut = function () {
    this.queueEvent("mouse_out_handler")
};
SWFUpload.prototype.fileDialogStart = function () {
    this.queueEvent("file_dialog_start_handler")
};
SWFUpload.prototype.fileQueued = function (b) {
    b = this.unescapeFilePostParams(b);
    this.queueEvent("file_queued_handler", b)
};
SWFUpload.prototype.fileQueueError = function (e, f, d) {
    e = this.unescapeFilePostParams(e);
    this.queueEvent("file_queue_error_handler", [e, f, d])
};
SWFUpload.prototype.fileDialogComplete = function (d, f, e) {
    this.queueEvent("file_dialog_complete_handler", [d, f, e])
};
SWFUpload.prototype.uploadResizeStart = function (c, d) {
    c = this.unescapeFilePostParams(c);
    this.queueEvent("upload_resize_start_handler", [c, d.width, d.height, d.encoding, d.quality])
};
SWFUpload.prototype.uploadStart = function (b) {
    b = this.unescapeFilePostParams(b);
    this.queueEvent("return_upload_start_handler", b)
};
SWFUpload.prototype.returnUploadStart = function (d) {
    var c;
    if (typeof this.settings.upload_start_handler === "function") {
        d = this.unescapeFilePostParams(d);
        c = this.settings.upload_start_handler.call(this, d)
    } else {
        if (this.settings.upload_start_handler != undefined) {
            throw "upload_start_handler must be a function"
        }
    }
    if (c === undefined) {
        c = true
    }
    c = !! c;
    this.callFlash("ReturnUploadStart", [c])
};
SWFUpload.prototype.uploadProgress = function (e, f, d) {
    e = this.unescapeFilePostParams(e);
    this.queueEvent("upload_progress_handler", [e, f, d])
};
SWFUpload.prototype.uploadError = function (e, f, d) {
    e = this.unescapeFilePostParams(e);
    this.queueEvent("upload_error_handler", [e, f, d])
};
SWFUpload.prototype.uploadSuccess = function (d, e, f) {
    d = this.unescapeFilePostParams(d);
    this.queueEvent("upload_success_handler", [d, e, f])
};
SWFUpload.prototype.uploadComplete = function (b) {
    b = this.unescapeFilePostParams(b);
    this.queueEvent("upload_complete_handler", b)
};
SWFUpload.prototype.debug = function (b) {
    this.queueEvent("debug_handler", b)
};
SWFUpload.prototype.debugMessage = function (h) {
    var f, g, e;
    if (this.settings.debug) {
        g = [];
        if (typeof h === "object" && typeof h.name === "string" && typeof h.message === "string") {
            for (e in h) {
                if (h.hasOwnProperty(e)) {
                    g.push(e + ": " + h[e])
                }
            }
            f = g.join("\n") || "";
            g = f.split("\n");
            f = "EXCEPTION: " + g.join("\nEXCEPTION: ");
            SWFUpload.Console.writeLine(f)
        } else {
            SWFUpload.Console.writeLine(h)
        }
    }
};
SWFUpload.Console = {};
SWFUpload.Console.writeLine = function (g) {
    var e, f;
    try {
        e = document.getElementById("SWFUpload_Console");
        if (!e) {
            f = document.createElement("form");
            document.getElementsByTagName("body")[0].appendChild(f);
            e = document.createElement("textarea");
            e.id = "SWFUpload_Console";
            e.style.fontFamily = "monospace";
            e.setAttribute("wrap", "off");
            e.wrap = "off";
            e.style.overflow = "auto";
            e.style.width = "700px";
            e.style.height = "350px";
            e.style.margin = "5px";
            f.appendChild(e)
        }
        e.value += g + "\n";
        e.scrollTop = e.scrollHeight - e.clientHeight
    } catch (h) {
        alert("Exception: " + h.name + " Message: " + h.message)
    }
};
swfobject = function () {
    var n = "undefined",
        V = "object",
        C = "Shockwave Flash",
        e = "ShockwaveFlash.ShockwaveFlash",
        U = "application/x-shockwave-flash",
        B = "SWFObjectExprInst",
        f = "onreadystatechange",
        y = window,
        N = document,
        aa = navigator,
        D = false,
        a = [L],
        S = [],
        x = [],
        s = [],
        P, A, o, l, t = false,
        E = false,
        R, q, Q = true,
        w = function () {
            var aj = typeof N.getElementById != n && typeof N.getElementsByTagName != n && typeof N.createElement != n,
                af = aa.userAgent.toLowerCase(),
                ah = aa.platform.toLowerCase(),
                ac = ah ? /win/.test(ah) : /win/.test(af),
                Y = ah ? /mac/.test(ah) : /mac/.test(af),
                ad = /webkit/.test(af) ? parseFloat(af.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false,
                ag = !+"\v1",
                ae = [0, 0, 0],
                X = null;
            if (typeof aa.plugins != n && typeof aa.plugins[C] == V) {
                X = aa.plugins[C].description;
                if (X && !(typeof aa.mimeTypes != n && aa.mimeTypes[U] && !aa.mimeTypes[U].enabledPlugin)) {
                    D = true;
                    ag = false;
                    X = X.replace(/^.*\s+(\S+\s+\S+$)/, "$1");
                    ae[0] = parseInt(X.replace(/^(.*)\..*$/, "$1"), 10);
                    ae[1] = parseInt(X.replace(/^.*\.(.*)\s.*$/, "$1"), 10);
                    ae[2] = /[a-zA-Z]/.test(X) ? parseInt(X.replace(/^.*[a-zA-Z]+(.*)$/, "$1"), 10) : 0
                }
            } else {
                if (typeof y.ActiveXObject != n) {
                    try {
                        var Z = new ActiveXObject(e);
                        if (Z) {
                            X = Z.GetVariable("$version");
                            if (X) {
                                ag = true;
                                X = X.split(" ")[1].split(",");
                                ae = [parseInt(X[0], 10), parseInt(X[1], 10), parseInt(X[2], 10)]
                            }
                        }
                    } catch (ai) {}
                }
            }
            return {
                w3: aj,
                pv: ae,
                wk: ad,
                ie: ag,
                win: ac,
                mac: Y
            }
        }(),
        O = function () {
            if (!w.w3) {
                return
            }
            if ((typeof N.readyState != n && N.readyState == "complete") || (typeof N.readyState == n && (N.getElementsByTagName("body")[0] || N.body))) {
                J()
            }
            if (!t) {
                if (typeof N.addEventListener != n) {
                    N.addEventListener("DOMContentLoaded", J, false)
                }
                if (w.ie && w.win) {
                    N.attachEvent(f, function () {
                        if (N.readyState == "complete") {
                            N.detachEvent(f, arguments.callee);
                            J()
                        }
                    });
                    if (y == top) {
                        (function () {
                            if (t) {
                                return
                            }
                            try {
                                N.documentElement.doScroll("left")
                            } catch (X) {
                                setTimeout(arguments.callee, 0);
                                return
                            }
                            J()
                        })()
                    }
                }
                if (w.wk) {
                    (function () {
                        if (t) {
                            return
                        }
                        if (!/loaded|complete/.test(N.readyState)) {
                            setTimeout(arguments.callee, 0);
                            return
                        }
                        J()
                    })()
                }
                W(J)
            }
        }();

    function J() {
        if (t) {
            return
        }
        try {
            var X = N.getElementsByTagName("body")[0].appendChild(m("span"));
            X.parentNode.removeChild(X)
        } catch (Y) {
            return
        }
        t = true;
        var Z = a.length;
        for (var ac = 0; ac < Z; ac++) {
            a[ac]()
        }
    }function u(X) {
        if (t) {
            X()
        } else {
            a[a.length] = X
        }
    }function W(Y) {
        if (typeof y.addEventListener != n) {
            y.addEventListener("load", Y, false)
        } else {
            if (typeof N.addEventListener != n) {
                N.addEventListener("load", Y, false)
            } else {
                if (typeof y.attachEvent != n) {
                    M(y, "onload", Y)
                } else {
                    if (typeof y.onload == "function") {
                        var X = y.onload;
                        y.onload = function () {
                            X();
                            Y()
                        }
                    } else {
                        y.onload = Y
                    }
                }
            }
        }
    }function L() {
        if (D) {
            c()
        } else {
            r()
        }
    }function c() {
        var Z = N.getElementsByTagName("body")[0];
        var X = m(V);
        X.setAttribute("type", U);
        var Y = Z.appendChild(X);
        if (Y) {
            var ac = 0;
            (function () {
                if (typeof Y.GetVariable != n) {
                    var ad = Y.GetVariable("$version");
                    if (ad) {
                        ad = ad.split(" ")[1].split(",");
                        w.pv = [parseInt(ad[0], 10), parseInt(ad[1], 10), parseInt(ad[2], 10)]
                    }
                } else {
                    if (ac < 10) {
                        ac++;
                        setTimeout(arguments.callee, 10);
                        return
                    }
                }
                Z.removeChild(X);
                Y = null;
                r()
            })()
        } else {
            r()
        }
    }function r() {
        var ae = S.length;
        if (ae > 0) {
            for (var ad = 0; ad < ae; ad++) {
                var ai = S[ad].id;
                var X = S[ad].callbackFn;
                var ak = {
                    success: false,
                    id: ai
                };
                if (w.pv[0] > 0) {
                    var ac = G(ai);
                    if (ac) {
                        if (p(S[ad].swfVersion) && !(w.wk && w.wk < 312)) {
                            d(ai, true);
                            if (X) {
                                ak.success = true;
                                ak.ref = h(ai);
                                X(ak)
                            }
                        } else {
                            if (S[ad].expressInstall && k()) {
                                var ag = {};
                                ag.data = S[ad].expressInstall;
                                ag.width = ac.getAttribute("width") || "0";
                                ag.height = ac.getAttribute("height") || "0";
                                if (ac.getAttribute("class")) {
                                    ag.styleclass = ac.getAttribute("class")
                                }
                                if (ac.getAttribute("align")) {
                                    ag.align = ac.getAttribute("align")
                                }
                                var af = {};
                                var ah = ac.getElementsByTagName("param");
                                var Y = ah.length;
                                for (var Z = 0; Z < Y; Z++) {
                                    if (ah[Z].getAttribute("name").toLowerCase() != "movie") {
                                        af[ah[Z].getAttribute("name")] = ah[Z].getAttribute("value")
                                    }
                                }
                                z(ag, af, ai, X)
                            } else {
                                T(ac);
                                if (X) {
                                    X(ak)
                                }
                            }
                        }
                    }
                } else {
                    d(ai, true);
                    if (X) {
                        var aj = h(ai);
                        if (aj && typeof aj.SetVariable != n) {
                            ak.success = true;
                            ak.ref = aj
                        }
                        X(ak)
                    }
                }
            }
        }
    }function h(X) {
        var Z = null;
        var ac = G(X);
        if (ac && ac.nodeName == "OBJECT") {
            if (typeof ac.SetVariable != n) {
                Z = ac
            } else {
                var Y = ac.getElementsByTagName(V)[0];
                if (Y) {
                    Z = Y
                }
            }
        }
        return Z
    }function k() {
        return !E && p("6.0.65") && (w.win || w.mac) && !(w.wk && w.wk < 312)
    }function z(ad, af, Z, ae) {
        E = true;
        o = ae || null;
        l = {
            success: false,
            id: Z
        };
        var Y = G(Z);
        if (Y) {
            if (Y.nodeName == "OBJECT") {
                P = K(Y);
                A = null
            } else {
                P = Y;
                A = Z
            }
            ad.id = B;
            if (typeof ad.width == n || (!/%$/.test(ad.width) && parseInt(ad.width, 10) < 310)) {
                ad.width = "310"
            }
            if (typeof ad.height == n || (!/%$/.test(ad.height) && parseInt(ad.height, 10) < 137)) {
                ad.height = "137"
            }
            N.title = N.title.slice(0, 47) + " - Flash Player Installation";
            var X = w.ie && w.win ? "ActiveX" : "PlugIn",
                ag = "MMredirectURL=" + y.location.toString().replace(/&/g, "%26") + "&MMplayerType=" + X + "&MMdoctitle=" + N.title;
            if (typeof af.flashvars != n) {
                af.flashvars += "&" + ag
            } else {
                af.flashvars = ag
            }
            if (w.ie && w.win && Y.readyState != 4) {
                var ac = m("div");
                Z += "SWFObjectNew";
                ac.setAttribute("id", Z);
                Y.parentNode.insertBefore(ac, Y);
                Y.style.display = "none";
                (function () {
                    if (Y.readyState == 4) {
                        Y.parentNode.removeChild(Y)
                    } else {
                        setTimeout(arguments.callee, 10)
                    }
                })()
            }
            ab(ad, af, Z)
        }
    }function T(Y) {
        if (w.ie && w.win && Y.readyState != 4) {
            var X = m("div");
            Y.parentNode.insertBefore(X, Y);
            X.parentNode.replaceChild(K(Y), X);
            Y.style.display = "none";
            (function () {
                if (Y.readyState == 4) {
                    Y.parentNode.removeChild(Y)
                } else {
                    setTimeout(arguments.callee, 10)
                }
            })()
        } else {
            Y.parentNode.replaceChild(K(Y), Y)
        }
    }function K(X) {
        var ad = m("div");
        if (w.win && w.ie) {
            ad.innerHTML = X.innerHTML
        } else {
            var ac = X.getElementsByTagName(V)[0];
            if (ac) {
                var Y = ac.childNodes;
                if (Y) {
                    var Z = Y.length;
                    for (var ae = 0; ae < Z; ae++) {
                        if (!(Y[ae].nodeType == 1 && Y[ae].nodeName == "PARAM") && !(Y[ae].nodeType == 8)) {
                            ad.appendChild(Y[ae].cloneNode(true))
                        }
                    }
                }
            }
        }
        return ad
    }function ab(ag, ae, ai) {
        var ah, ak = G(ai);
        if (w.wk && w.wk < 312) {
            return ah
        }
        if (ak) {
            if (typeof ag.id == n) {
                ag.id = ai
            }
            if (w.ie && w.win) {
                var af = "";
                for (var ac in ag) {
                    if (ag[ac] != Object.prototype[ac]) {
                        if (ac.toLowerCase() == "data") {
                            ae.movie = ag[ac]
                        } else {
                            if (ac.toLowerCase() == "styleclass") {
                                af += ' class="' + ag[ac] + '"'
                            } else {
                                if (ac.toLowerCase() != "classid") {
                                    af += " " + ac + '="' + ag[ac] + '"'
                                }
                            }
                        }
                    }
                }
                var ad = "";
                for (var Z in ae) {
                    if (ae[Z] != Object.prototype[Z]) {
                        ad += '<param name="' + Z + '" value="' + ae[Z] + '" />'
                    }
                }
                ak.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + af + ">" + ad + "</object>";
                x[x.length] = ag.id;
                ah = G(ag.id)
            } else {
                var aj = m(V);
                aj.setAttribute("type", U);
                for (var Y in ag) {
                    if (ag[Y] != Object.prototype[Y]) {
                        if (Y.toLowerCase() == "styleclass") {
                            aj.setAttribute("class", ag[Y])
                        } else {
                            if (Y.toLowerCase() != "classid") {
                                aj.setAttribute(Y, ag[Y])
                            }
                        }
                    }
                }
                for (var X in ae) {
                    if (ae[X] != Object.prototype[X] && X.toLowerCase() != "movie") {
                        I(aj, X, ae[X])
                    }
                }
                ak.parentNode.replaceChild(aj, ak);
                ah = aj
            }
        }
        return ah
    }function I(X, Z, ac) {
        var Y = m("param");
        Y.setAttribute("name", Z);
        Y.setAttribute("value", ac);
        X.appendChild(Y)
    }function g(Y) {
        var X = G(Y);
        if (X && X.nodeName == "OBJECT") {
            if (w.ie && w.win) {
                X.style.display = "none";
                (function () {
                    if (X.readyState == 4) {
                        F(Y)
                    } else {
                        setTimeout(arguments.callee, 10)
                    }
                })()
            } else {
                X.parentNode.removeChild(X)
            }
        }
    }function F(Y) {
        var X = G(Y);
        if (X) {
            for (var Z in X) {
                if (typeof X[Z] == "function") {
                    X[Z] = null
                }
            }
            X.parentNode.removeChild(X)
        }
    }function G(Y) {
        var Z = null;
        try {
            Z = N.getElementById(Y)
        } catch (X) {}
        return Z
    }function m(X) {
        return N.createElement(X)
    }function M(Y, Z, X) {
        Y.attachEvent(Z, X);
        s[s.length] = [Y, Z, X]
    }function p(Y) {
        var X = w.pv,
            Z = Y.split(".");
        Z[0] = parseInt(Z[0], 10);
        Z[1] = parseInt(Z[1], 10) || 0;
        Z[2] = parseInt(Z[2], 10) || 0;
        return (X[0] > Z[0] || (X[0] == Z[0] && X[1] > Z[1]) || (X[0] == Z[0] && X[1] == Z[1] && X[2] >= Z[2])) ? true : false
    }function b(X, ac, Y, af) {
        if (w.ie && w.mac) {
            return
        }
        var ad = N.getElementsByTagName("head")[0];
        if (!ad) {
            return
        }
        var Z = (Y && typeof Y == "string") ? Y : "screen";
        if (af) {
            R = null;
            q = null
        }
        if (!R || q != Z) {
            var ae = m("style");
            ae.setAttribute("type", "text/css");
            ae.setAttribute("media", Z);
            R = ad.appendChild(ae);
            if (w.ie && w.win && typeof N.styleSheets != n && N.styleSheets.length > 0) {
                R = N.styleSheets[N.styleSheets.length - 1]
            }
            q = Z
        }
        if (w.ie && w.win) {
            if (R && typeof R.addRule == V) {
                R.addRule(X, ac)
            }
        } else {
            if (R && typeof N.createTextNode != n) {
                R.appendChild(N.createTextNode(X + " {" + ac + "}"))
            }
        }
    }function d(Y, Z) {
        if (!Q) {
            return
        }
        var X = Z ? "visible" : "hidden";
        if (t && G(Y)) {
            G(Y).style.visibility = X
        } else {
            b("#" + Y, "visibility:" + X)
        }
    }function v(X) {
        var Y = /[\\\"<>\.;]/;
        var Z = Y.exec(X) != null;
        return Z && typeof encodeURIComponent != n ? encodeURIComponent(X) : X
    }
    var H = function () {
            if (w.ie && w.win) {
                window.attachEvent("onunload", function () {
                    var Y = s.length;
                    for (var X = 0; X < Y; X++) {
                        s[X][0].detachEvent(s[X][1], s[X][2])
                    }
                    var ad = x.length;
                    for (var ae = 0; ae < ad; ae++) {
                        g(x[ae])
                    }
                    for (var ac in w) {
                        w[ac] = null
                    }
                    w = null;
                    for (var Z in swfobject) {
                        swfobject[Z] = null
                    }
                    swfobject = null
                })
            }
        }();
    return {
        registerObject: function (Y, Z, ad, X) {
            if (w.w3 && Y && Z) {
                var ac = {};
                ac.id = Y;
                ac.swfVersion = Z;
                ac.expressInstall = ad;
                ac.callbackFn = X;
                S[S.length] = ac;
                d(Y, false)
            } else {
                if (X) {
                    X({
                        success: false,
                        id: Y
                    })
                }
            }
        },
        getObjectById: function (X) {
            if (w.w3) {
                return h(X)
            }
        },
        embedSWF: function (X, af, ac, ae, ah, aj, ai, Z, ad, Y) {
            var ag = {
                success: false,
                id: af
            };
            if (w.w3 && !(w.wk && w.wk < 312) && X && af && ac && ae && ah) {
                d(af, false);
                u(function () {
                    ac += "";
                    ae += "";
                    var am = {};
                    if (ad && typeof ad === V) {
                        for (var ao in ad) {
                            am[ao] = ad[ao]
                        }
                    }
                    am.data = X;
                    am.width = ac;
                    am.height = ae;
                    var ap = {};
                    if (Z && typeof Z === V) {
                        for (var an in Z) {
                            ap[an] = Z[an]
                        }
                    }
                    if (ai && typeof ai === V) {
                        for (var al in ai) {
                            if (typeof ap.flashvars != n) {
                                ap.flashvars += "&" + al + "=" + ai[al]
                            } else {
                                ap.flashvars = al + "=" + ai[al]
                            }
                        }
                    }
                    if (p(ah)) {
                        var ak = ab(am, ap, af);
                        if (am.id == af) {
                            d(af, true)
                        }
                        ag.success = true;
                        ag.ref = ak
                    } else {
                        if (aj && k()) {
                            am.data = aj;
                            z(am, ap, af, Y);
                            return
                        } else {
                            d(af, true)
                        }
                    }
                    if (Y) {
                        Y(ag)
                    }
                })
            } else {
                if (Y) {
                    Y(ag)
                }
            }
        },
        switchOffAutoHideShow: function () {
            Q = false
        },
        ua: w,
        getFlashPlayerVersion: function () {
            return {
                major: w.pv[0],
                minor: w.pv[1],
                release: w.pv[2]
            }
        },
        hasFlashPlayerVersion: p,
        createSWF: function (Y, X, Z) {
            if (w.w3) {
                return ab(Y, X, Z)
            } else {
                return undefined
            }
        },
        showExpressInstall: function (X, Y, Z, ac) {
            if (w.w3 && k()) {
                z(X, Y, Z, ac)
            }
        },
        removeSWF: function (X) {
            if (w.w3) {
                g(X)
            }
        },
        createCSS: function (X, Y, ac, Z) {
            if (w.w3) {
                b(X, Y, ac, Z)
            }
        },
        addDomLoadEvent: u,
        addLoadEvent: W,
        getQueryParamValue: function (X) {
            var Y = N.location.search || N.location.hash;
            if (Y) {
                if (/\?/.test(Y)) {
                    Y = Y.split("?")[1]
                }
                if (X == null) {
                    return v(Y)
                }
                var ac = Y.split("&");
                for (var Z = 0; Z < ac.length; Z++) {
                    if (ac[Z].substring(0, ac[Z].indexOf("=")) == X) {
                        return v(ac[Z].substring((ac[Z].indexOf("=") + 1)))
                    }
                }
            }
            return ""
        },
        expressInstallCallback: function () {
            if (E) {
                var X = G(B);
                if (X && P) {
                    X.parentNode.replaceChild(P, X);
                    if (A) {
                        d(A, true);
                        if (w.ie && w.win) {
                            P.style.display = "block"
                        }
                    }
                    if (o) {
                        o(l)
                    }
                }
                E = false
            }
        }
    }
}();
swfobject.addDomLoadEvent(function () {
    if (typeof (SWFUpload.onload) === "function") {
        SWFUpload.onload.call(window)
    }
});

function fileQueued(c) {
    try {
        jQuery("#" + this.customSettings.progressTarget).html("正在等待...")
    } catch (d) {
        this.debug(d)
    }
}function fileQueueError(e, g, h) {
    try {
        if (g === SWFUpload.QUEUE_ERROR.QUEUE_LIMIT_EXCEEDED) {
            alert("您正在上传的文件队列过多.\n" + (h === 0 ? "您已达到上传限制" : "您最多能选择 " + (h > 1 ? "上传 " + h + " 文件." : "一个文件.")));
            return
        }
        if (g === SWFUpload.QUEUE_ERROR.FILE_EXCEEDS_SIZE_LIMIT) {
            alert("您正在上传的文件太大.\n请重新选择。\n\n（TODO 修改此提示样式及文案！）");
            return
        }
    } catch (f) {
        this.debug(f)
    }
}function fileDialogComplete(e, f) {
    try {
        this.startUpload()
    } catch (d) {
        this.debug(d)
    }
}function uploadStart(c) {
    try {
        jQuery("#" + this.customSettings.progressTarget).html("正在上传...")
    } catch (d) {
        this.debug(d)
    }
    return true
}function uploadProgress(f, h, k) {
    try {
        var l = Math.ceil((h / k) * 100);
        jQuery("#" + this.customSettings.progressTarget).html("正在上传: " + l + "%")
    } catch (g) {
        this.debug(g)
    }
}function uploadSuccess(f, e) {
    try {
        this.debug(jQuery.parseJSON(e));
        uploadBack(jQuery.parseJSON(e))
    } catch (d) {
        this.debug(d)
    }
}function uploadError(e, g, h) {
    try {
        switch (g) {
        case SWFUpload.UPLOAD_ERROR.HTTP_ERROR:
            this.debug("错误代码: HTTP错误, 文件名: " + e.name + ", 信息: " + h);
            break;
        case SWFUpload.UPLOAD_ERROR.UPLOAD_FAILED:
            this.debug("错误代码: 上传失败, 文件名: " + e.name + ", 文件尺寸: " + e.size + ", 信息: " + h);
            break;
        case SWFUpload.UPLOAD_ERROR.IO_ERROR:
            this.debug("错误代码: IO 错误, 文件名: " + e.name + ", 信息: " + h);
            break;
        case SWFUpload.UPLOAD_ERROR.SECURITY_ERROR:
            this.debug("错误代码: 安全错误, 文件名: " + e.name + ", 信息: " + h);
            break;
        case SWFUpload.UPLOAD_ERROR.UPLOAD_LIMIT_EXCEEDED:
            this.debug("错误代码: 超出上传限制, 文件名: " + e.name + ", 文件尺寸: " + e.size + ", 信息: " + h);
            break;
        case SWFUpload.UPLOAD_ERROR.FILE_VALIDATION_FAILED:
            this.debug("错误代码: 文件验证失败, 文件名: " + e.name + ", 文件尺寸: " + e.size + ", 信息: " + h);
            break;
        case SWFUpload.UPLOAD_ERROR.FILE_CANCELLED:
            break;
        case SWFUpload.UPLOAD_ERROR.UPLOAD_STOPPED:
            break;
        default:
            this.debug("错误代码: " + g + ", 文件名: " + e.name + ", 文件尺寸: " + e.size + ", 信息: " + h);
            break
        }
    } catch (f) {
        this.debug(f)
    }
}function uploadComplete(c) {
    try {
        jQuery("#" + this.customSettings.progressTarget).html("上传成功！ ")
    } catch (d) {
        this.debug(d)
    }
}function queueComplete(b) {}(function (b) {
    var a = ["swfupload_preload_handler", "swfupload_load_failed_handler", "swfupload_loaded_handler", "file_dialog_start_handler", "file_queued_handler", "file_queue_error_handler", "file_dialog_complete_handler", "upload_resize_start_handler", "upload_start_handler", "upload_progress_handler", "upload_error_handler", "upload_success_handler", "upload_complete_handler", "mouse_click_handler", "mouse_out_handler", "mouse_over_handler", "queue_complete_handler"];
    var c = [];
    b.fn.swfupload = function () {
        var d = b.makeArray(arguments);
        return this.each(function () {
            var g;
            if (d.length == 1 && typeof (d[0]) == "object") {
                g = b(this).data("__swfu");
                if (!g) {
                    var k = d[0];
                    var h = b(this);
                    var f = [];
                    b.merge(f, a);
                    b.merge(f, c);
                    b.each(f, function (n, m) {
                        var l = m.replace(/_handler$/, "").replace(/_([a-z])/g, function () {
                            return arguments[1].toUpperCase()
                        });
                        k[m] = function () {
                            var o = b.Event(l);
                            h.trigger(o, b.makeArray(arguments));
                            return !o.isDefaultPrevented()
                        }
                    });
                    b(this).data("__swfu", new SWFUpload(k))
                }
            } else {
                if (d.length > 0 && typeof (d[0]) == "string") {
                    var e = d.shift();
                    g = b(this).data("__swfu");
                    if (g && g[e]) {
                        g[e].apply(g, d)
                    }
                }
            }
        })
    };
    b.swfupload = {
        additionalHandlers: function () {
            if (arguments.length === 0) {
                return c.slice()
            } else {
                b(arguments).each(function (e, d) {
                    b.merge(c, b.makeArray(d))
                })
            }
        },
        defaultHandlers: function () {
            return a.slice()
        },
        getInstance: function (d) {
            return b(d).data("__swfu")
        }
    }
})(jQuery);
var IM20 = window.IM20 || {};
IM20.namespace = function (c) {
    if (!c || !c.length) {
        return null
    }
    var d = c.split(".");
    var b = IM20;
    for (var a = (d[0] == "IM20") ? 1 : 0; a < d.length; ++a) {
        b[d[a]] = b[d[a]] || {};
        b = b[d[a]]
    }
    return b
};
var addBoardDialog = IM20.namespace("com.im20.sc.board");
var editBoardDialog = IM20.namespace("com.im20.sc.editBoard");
editBoardDialog.boardId = 0;
editBoardDialog.managers = "";
editBoardDialog._userId = [];
editBoardDialog._newUserId = [];
addBoardDialog.liregex = /\<li[\s\S]*/gi;
editBoardDialog.verNmae = /^([a-zA-Z0-9\-_\u4e00-\u9fa5]){1,20}/;
addBoardDialog.makeCategoryLi = function (b, a) {
    return ['<li><input tabindex="2" type="radio" id="radio-' + a + '" name="newBoardCategoryId" value="' + b.id + '"/>', '<label class="radio f14" for="radio-' + a + '">' + b.categoryName + "</label></li>"].join("")
};
editBoardDialog.makeCategoryLi = function (b, a, c) {
    if (c == true) {
        return ['<li><input tabindex="2" type="radio" id="radio-' + a + '" name="editBoardCategoryId" checked="true" value="' + b.id + '"/>', '<label class="radio f14" for="radio-' + a + '">' + b.categoryName + "</label></li>"].join("")
    } else {
        return ['<li><input tabindex="2" type="radio" id="radio-' + a + '" name="editBoardCategoryId" value="' + b.id + '"/>', '<label class="radio f14" for="radio-' + a + '">' + b.categoryName + "</label></li>"].join("")
    }
};
addBoardDialog.makeFollowedLi = function (b, a) {
    return ['<li userId="' + b.id + '"><span></span>', '<div class="uhead"><a href="javascript:void(0)"><img src="' + b.avatarTiny + '"/></a></div>', '<div class="uinfo">', '<p class="name"><a href="javascript:void(0)" class="blue">' + b.nickname + "</a></p>", "<p></p></div></li>"].join("")
};
editBoardDialog.makeFollowedLi = function (item, index, status) {
    if (false == eval(status)) {
        return ['<li userId="' + item.id + '"><span></span>', '<div class="uhead"><a href="javascript:void(0)"><img src="' + item.avatarTiny + '"/></a></div>', '<div class="uinfo">', '<p class="name"><a href="javascript:void(0)" class="blue">' + item.nickname + "</a></p>", "<p></p></div></li>"].join("")
    } else {
        return ['<li class="current" userId="' + item.id + '"><span class="true"></span>', '<div class="uhead"><a href="javascript:void(0)"><img src="' + item.avatarTiny + '"/></a></div>', '<div class="uinfo">', '<p class="name"><a href="javascript:void(0)" class="blue">' + item.nickname + "</a></p>", "<p></p></div></li>"].join("")
    }
};
addBoardDialog.loadBoardCategoryList = function (a) {
    if (!addBoardDialog.liregex.test($("#boardcategories").html())) {
        $.get(a, function (f) {
            var d = [];
            for (var c = 0; c < f.length; c++) {
                var e = f[c];
                d[c] = addBoardDialog.makeCategoryLi(e, c)
            }
            $("#boardcategories").html(d.join(""));

            function b(h) {
                if (h.val() > 0) {
                    return true
                } else {
                    return false
                }
            }function g(k, h) {
                if (k.val().length > 0 && k.val().length <= 20) {
                    return true
                } else {
                    if (h) {
                        $.fn.tipsMsm(false, "addBoard-tips", "图格名称长度应为1-20个字！")
                    }
                    return false
                }
            }
            setTimeout(function () {
                im.user.validate.checkForm({
                    objValue: [{
                        ele: $("input:radio[name=newBoardCategoryId]"),
                        type: "radio",
                        func: b
                    }, {
                        ele: $("#newBoardName"),
                        type: "text",
                        func: g,
                        defaultSta: false
                    }],
                    element: $("#createBoardBtn"),
                    openClass: "big-btn",
                    closeClass: "calloff"
                })
            }, 500)
        })
    }
};
editBoardDialog.loadBoard = function (g, d, f) {function c(h) {
        h = h.replace(/&lt;/g, "<");
        h = h.replace(/&gt;/g, ">");
        return h
    }
    if (!addBoardDialog.liregex.test($("#editBoardName").html())) {
        $("#editBoardName").val(c(d));
        var e = f;
        var a = true;
        for (var b = 0; b < e.length; b++) {
            a = false
        }
        if (a) {
            $("input[name=editBoardManageType][value=1]").attr("checked", true);
            $("#editSelectedUser").hide()
        } else {
            $("input[name=editBoardManageType][value=2]").attr("checked", true);
            $("#editSelectedUser").show().find("em").text(e.length)
        }
    }
};
editBoardDialog.loadBoardCategoryList = function (b, c, a) {
    if (!addBoardDialog.liregex.test($("#editBoardcategories").html())) {
        editBoardDialog.getEditBoardcategories(b, a)
    } else {
        $("#editBoardcategories").html("");
        editBoardDialog.getEditBoardcategories(b, a)
    }
};
editBoardDialog.getEditBoardcategories = function (b, a) {
    $.get(b, function (h) {
        var f = [];
        for (var e = 0; e < h.length; e++) {
            var g = h[e];
            var d;
            if (g.id == a) {
                d = editBoardDialog.makeCategoryLi(g, e, true)
            } else {
                d = editBoardDialog.makeCategoryLi(g, e, false)
            }
            f[e] = d
        }
        $("#editBoardcategories").html(f.join(""));
        setTimeout(function () {
            im.user.validate.checkForm({
                objValue: [{
                    ele: $("input:radio[name=editBoardCategoryId]"),
                    type: "radio",
                    func: c
                }, {
                    ele: $("#editBoardName"),
                    type: "text",
                    func: k,
                    defaultSta: true
                }],
                element: $("#saveBoardBtn .bigbutton"),
                openClass: "big-btn",
                closeClass: "calloff"
            })
        }, 300);
        im("#editBoard").dialog("open");

        function k(l) {
            if (l.val().Trim().length > 0 && l.val().length <= 20) {
                return true
            } else {
                return false
            }
        }function c(l) {
            if (l.val() > 0) {
                return true
            } else {
                return false
            }
        }
    })
};
addBoardDialog.loadFollowedList = function (b, a) {
    if (!addBoardDialog.liregex.test($("#friendList").html()) && a > 0) {
        $.get(b, function (h) {
            var f = [];
            for (var e = 0; e < h.length; e++) {
                var g = h[e];
                var c = addBoardDialog.makeFollowedLi(g, e);
                f[e] = c
            }
            $("#friendList").html(f.join(""));
            $("#friendListSize").html("(" + h.length + ")");
            if (h.length == 0) {
                $("#add_friend_lists").hide();
                $("#add_board_nocontent").show()
            } else {
                $("#add_friend_lists").show();
                $("#add_board_nocontent").hide()
            }
            var d = editBoardDialog._newUserId;
            im("#friendList>li").each(function (k) {
                $(this).bind("click", function () {
                    if ($(this).attr("class").indexOf("current") > -1) {
                        $(this).removeClass("current");
                        $(this).find("span:nth-child(1)").removeClass("true");
                        for (var l = 0; l < d.length; l++) {
                            if (d[l] == $(this).attr("userId")) {
                                if (l == 0) {
                                    d.shift()
                                } else {
                                    d.splice(l, 1)
                                }
                            }
                        }
                    } else {
                        $(this).addClass("current");
                        $(this).find("span:nth-child(1)").addClass("true");
                        d.push($(this).attr("userId"))
                    }
                });
                $(this).bind("mouseover", function () {
                    $(this).addClass("hover")
                });
                $(this).bind("mouseout", function () {
                    $(this).removeClass("hover")
                })
            })
        })
    }
};
editBoardDialog.getManagers = function (c, b, a) {
    $.ajax({
        type: "GET",
        url: c,
        async: false,
        success: function (h) {
            var f = [];
            for (var e = 0, d = h.length; e < d; e++) {
                var g = h[e];
                if (b != g.userId) {
                    f.push(g.userId)
                }
            }
            a(f)
        }
    })
};
editBoardDialog.loadFollowedList = function (b, d, e, a) {
    $("#editFriendList").html("");
    if (!addBoardDialog.liregex.test($("#editFriendList").html()) && a > 0) {
        var c = d;
        $.get(b, function (o) {
            var m = [];
            for (var l = 0; l < o.length; l++) {
                var n = o[l];
                var g = false;
                for (var h = 0; h < c.length; h++) {
                    if (n.id == c[h]) {
                        g = true
                    }
                }
                var f = editBoardDialog.makeFollowedLi(n, l, g);
                m[l] = f
            }
            $("#editFriendList").html(m.join(""));
            $("#editFriendListSize").html("(" + o.length + ")");
            editBoardDialog._userId = editBoardDialog.managers.slice(0);
            var k = editBoardDialog._userId;
            $("#editFriendList>li").off().on("click", function () {
                if ($(this).attr("class").indexOf("current") > -1) {
                    $(this).removeClass("current").find("span:nth-child(1)").removeClass("true");
                    for (var p = 0; p < k.length; p++) {
                        if (k[p] == $(this).attr("userId")) {
                            if (p == 0) {
                                k.shift()
                            } else {
                                k.splice(p, 1)
                            }
                        }
                    }
                } else {
                    $(this).addClass("current").find("span:nth-child(1)").addClass("true");
                    k.push($(this).attr("userId"))
                }
            }).hover(function () {
                $(this).addClass("hover")
            }, function () {
                $(this).removeClass("hover")
            })
        })
    }
};
addBoardDialog.formRead = function (b) {
    var c = {};
    c.boardUserId = b;
    c.boardName = $("#newBoardName").val();
    c.boardCategoryId = $("input[name='newBoardCategoryId']:checked").val();
    c.manageType = $("input[name='newBoardManageType']:checked").val();
    c.managerIds = "";
    var a = [];
    $("#friendList").children("li.current").each(function () {
        a.push($(this).attr("userId"))
    });
    c.managerIds = a.join(",");
    return c
};
editBoardDialog.formRead = function (loginUserId) {
    var form = {};
    form.boardUserId = loginUserId;
    form.boardName = $("#editBoardName").val();
    form.boardCategoryId = $("input[name='editBoardCategoryId']:checked").val();
    form.manageType = $("input[name='editBoardManageType']:checked").val();
    if (editBoardDialog.managers.length > 0) {
        form.oldManagerIds = editBoardDialog.managers.join(",")
    } else {
        form.oldManagerIds = ""
    }
    form.managerIds = "";
    var managerIds = [];
    var isReSelect = false;
    $("#editFriendList").children("li.current").each(function () {
        isReSelect = true;
        managerIds.push($(this).attr("userId"))
    });
    if (eval(isReSelect) == false) {
        if (editBoardDialog.managers.length > 0) {
            form.managerIds = editBoardDialog.managers.join(",")
        }
    } else {
        if (managerIds.length > 0) {
            form.managerIds = managerIds.join(",")
        }
    }
    return form
};
addBoardDialog.formValidate = function (b) {
    var a = false;
    if (b.boardName && b.boardName.Trim() != "" && b.boardCategoryId > 0) {
        if (b.manageType == 1 || (b.manageType == 2 && b.managerIds.length > 0)) {
            a = true
        }
    }
    return a
};
editBoardDialog.formValidate = function (b) {
    var a = false;
    if (b.boardName && b.boardName.Trim() != "" && b.boardCategoryId > 0) {
        if (b.manageType == 1 || b.manageType == 2) {
            a = true
        }
    }
    return a
};
addBoardDialog.formPost = function (a, b) {
    if (editBoardDialog.verNmae.test($("#newBoardName").val())) {
        $.post(a, b, function (c) {
            if (c && c.board) {
                $("#newBoardName").val("");
                $("input[name='newBoardCategoryId']:checked").each(function () {
                    $(this).attr("checked", false)
                });
                $("input[name='newBoardManageType']:checked").each(function () {
                    $(this).attr("checked", false)
                });
                $("#friendList").children("li.current").each(function () {});
                im.window.alert("新建图格成功.", "ok");
                window.setTimeout(function () {
                    window.location = uri("URI_BOARD", b.boardUserId, c.board.id)
                }, 1000);
                im("#addBoard").dialog("close")
            } else {
                var d = c.msg ? c.msg : "";
                $.fn.tipsMsm(false, "addBoard-tips", "新建图格失败" + d);
                $("#createBoardBtn").removeClass("calloff").addClass("big-btn")
            }
        }, "json").error(function () {
            $.fn.tipsMsm(false, "addBoard-tips", "数据发送失败, 请检查网络连接");
            $("#createBoardBtn").removeClass("calloff").addClass("big-btn")
        })
    } else {
        $.fn.tipsMsm(false, "addBoard-tips", "请使用汉字或字母来命名")
    }
};
editBoardDialog.formPost = function (b, a) {
    if (editBoardDialog.verNmae.test($("#editBoardName").val())) {
        $.post(b, a, function (d) {
            if (d) {
                var e = d.msg ? d.msg : "";
                var c = d.result ? d.result : "";
                if (c == "success") {
                    $("#editBoardName").val("");
                    $("input[name='editBoardCategoryId']:checked").each(function () {
                        $(this).attr("checked", false)
                    });
                    $("input[name='editBoardManageType']:checked").each(function () {
                        $(this).attr("checked", false)
                    });
                    im.window.alert("保存成功!", "ok");
                    im("#editBoard").dialog("close");
                    setTimeout("parent.location.reload()", 3000)
                } else {
                    $.fn.tipsMsm(false, "editBoard-tips", e);
                    $("#saveBoardBtn a.bigbutton").removeClass("big-btn")
                }
                $("#saveBoardBtn a.bigbutton").removeClass("big-btn")
            } else {
                $.fn.tipsMsm(false, "editBoard-tips", "编辑图格失败");
                $("#saveBoardBtn a.bigbutton").removeClass("big-btn")
            }
        }, "json").error(function () {
            $.fn.tipsMsm(false, "editBoard-tips", "数据发送失败, 请检查网络连接");
            $("#saveBoardBtn a.bigbutton").removeClass("big-btn")
        })
    } else {
        $.fn.tipsMsm(false, "editBoard-tips", "请使用汉字或字母来命名")
    }
};
editBoardDialog.deleteFormPost = function (a, b) {
    $.post(a, b, function (c) {
        if (c > 0) {
            $("#editBoardName").val("");
            $("input[name='editBoardCategoryId']:checked").each(function () {
                $(this).attr("checked", false)
            });
            $("input[name='editBoardManageType']:checked").each(function () {
                $(this).attr("checked", false)
            });
            im.window.alert("删除成功!", "ok");
            im("#editBoard").dialog("close");
            setTimeout(function () {
                window.location.href = uri("URI_USER", b.boardUserId)
            }, 3000)
        } else {
            $.fn.tipsMsm(false, "editBoard-tips", "删除图格失败")
        }
    }, "json").error(function () {
        $.fn.tipsMsm(false, "editBoard-tips", "数据发送失败, 请检查网络连接")
    })
};
editBoardDialog.init = function () {
    var b = "#editBoard";
    var c = loginUser.id;
    var a = new im(b).dialog({
        title: "编辑图格",
        width: 520,
        height: 530,
        open: false,
        modal: true,
        closeCallBack: function () {
            if (parseInt($("#editpocket").css("marginTop")) < 0) {
                $("#editpocket").css({
                    marginTop: 0
                })
            }
            editBoardDialog._userId.length = 0;
            im("#editBoard-tips").hide();
            $("#saveBoardBtn a").eq(1).hide().prev().show()
        }
    });
    im("#editOtherPerson,#editReSelect").click(function () {
        if (editBoardDialog._userId.length < 1) {
            editBoardDialog.loadFollowedList(uri("URI_FANS_FOLLOWEDS_AJAX", c), editBoardDialog.managers, editBoardDialog.boardId, c)
        }
        im.fn.userOperation.select("editpocket", "-400px");
        $("#saveBoardBtn a").eq(0).hide().next().show()
    });
    im("#jqruey-goback-1").click(function () {
        $("#editBackPerson").click()
    });
    im("#jquery-option > span").eq(0).click(function () {
        $(this).hide().parent().find("span").eq(1).show()
    });
    im("#jquery-option > span").eq(1).click(function () {
        $(this).hide().parent().find("span").eq(0).show()
    });
    im("#delete").click(function () {
        var e = editBoardDialog.formRead(c, "delete");
        var d = uri("URI_DELETE_BOARD_AJAX", editBoardDialog.boardId);
        editBoardDialog.deleteFormPost(d, e);
        im("#editBoard").dialog("close")
    });
    im("#saveBoardBtn .big-btn").off().on("click", function () {
        if ($(this).hasClass("calloff")) {
            return false
        }
        $(this).remove("big-btn").addClass("calloff");
        var e = editBoardDialog.formRead(c, "save");
        if (editBoardDialog.formValidate(e)) {
            var d = uri("URI_SAVE_BOARD_AJAX", editBoardDialog.boardId);
            editBoardDialog.formPost(d, e)
        } else {
            im.window.alert("请填写完整!", "error")
        }
    });
    im("#editBackPerson").off().on("click", function () {
        im.fn.userOperation.back("editpocket");
        $("#saveBoardBtn a").eq(1).hide().prev().show();
        if (editBoardDialog._userId.length > 0) {
            im("#editSelectedUser").show().find("em").text(editBoardDialog._userId.length)
        } else {
            im("#editSelectedUser").hide();
            im("#editMePerson").attr("checked", "true")
        }
    })
};
editBoardDialog.openEdit = function (g, e, f, c) {
    $("#jquery-option > span").eq(1).hide().parent().find("span").eq(0).show();
    var b = "#editBoard";
    editBoardDialog.boardId = g;
    var a = uri("URI_BOARD_CATEGORY_LIST");
    editBoardDialog.loadBoardCategoryList(a, g, f);
    editBoardDialog.getManagers(uri("URI_BOARD_MANAGER_AJAX", g), c, d);

    function d(h) {
        editBoardDialog.managers = h;
        var k = editBoardDialog.managers;
        editBoardDialog.loadBoard(g, e, k)
    }
};
addBoardDialog.init = function (d, b) {
    var a = "#addBoard";
    var c;
    if (!ShareDialog.hasBoard) {
        c = new im(a).dialog({
            title: "新建图格",
            width: 520,
            height: 530,
            open: false,
            modal: true,
            closeCallBack: function () {
                if (parseInt($("#newpocket").css("marginTop")) < 0) {
                    $("#newpocket").css({
                        marginTop: 0
                    })
                }
                $("#newBoardName").val("");
                editBoardDialog._newUserId.length = 0;
                im("#otherPerson").siblings(".reSelect").hide();
                im("#mePerson").attr("checked", "true");
                im("#boardcategories > li").removeClass("radio f14");
                im("#friendList > li").removeClass("current");
                im("#createBoardBtn").removeClass("big-btn").addClass("calloff");
                im("#createBoardBtn").show();
                im("#jqruey-goback").hide();
                im("#boardcategories li input:radio").attr("checked", false)
            }
        });
        ShareDialog.hasBoard = !0
    }
    im(d).off().on("click", function () {
        $("#addBoard-tips").stop(true, true).hide();
        $("#createBoardBtn").removeClass("bigbutton big-btn").addClass("bigbutton calloff");
        var e = uri("URI_BOARD_CATEGORY_LIST");
        addBoardDialog.loadBoardCategoryList(e);
        im("#addBoard").dialog("open");
        if ($("#newBoardName").val() == "") {
            $("#newBoardName").val("请输入图格名称，在20个汉字之内");
            $("#newBoardName").addClass("gray")
        }
        $("#newBoardName").focus(function () {
            var f = $(this).val();
            if (f.indexOf("请输入图格名称") > -1) {
                $(this).val("");
                $(this).removeClass("gray")
            }
        })
    });
    im("#otherPerson").click(function () {
        var e = uri("URI_FANS_FOLLOWEDS_AJAX", b);
        if (!editBoardDialog._newUserId.length > 0) {
            addBoardDialog.loadFollowedList(e, b)
        }
        $("#createBoardBtnDiv a").eq(0).hide().next().show();
        im.fn.userOperation.select("newpocket", "-419px")
    });
    im("#backPerson").click(function () {
        im.fn.userOperation.back("newpocket");
        $("#createBoardBtnDiv a").eq(1).hide().prev().show();
        if (editBoardDialog._newUserId.length > 0) {
            im(".reSelect").find("em").text(editBoardDialog._newUserId.length);
            im("#otherPerson").siblings(".reSelect").show()
        } else {
            im("#otherPerson").siblings(".reSelect").hide();
            im("#mePerson").attr("checked", "true")
        }
    });
    im("#jqruey-goback").click(function () {
        im("#backPerson").click()
    });
    im("#editBackPerson").off().on("click", function () {
        im.fn.userOperation.back("editpocket");
        $("#saveBoardBtn a").eq(1).hide().prev().show();
        if (editBoardDialog._userId.length > 0) {
            im("#editSelectedUser").show().find("em").text(editBoardDialog._userId.length)
        } else {
            im("#editSelectedUser").hide();
            im("#editMePerson").attr("checked", "true")
        }
    });
    im(".reSelect").click(function () {
        onclick = im.fn.userOperation.select("newpocket", "-419px");
        $("#otherPerson").click()
    });
    im("#mePerson").click(function () {
        im(".reSelect").hide();
        editBoardDialog._newUserId.length = 0;
        $("#friendList>li").removeClass("current")
    });
    im("#editMePerson").click(function () {
        im("#editSelectedUser").hide();
        editBoardDialog._userId.length = 0
    });
    im("#meePerson").click(function () {
        $("#selectedUser").hide();
        editBoardDialog._userId.length = 0
    });
    im("#createBoardBtnDiv .big-btn").off().on("click", function () {
        if ($("#createBoardBtn").hasClass("colloff")) {
            return
        }
        $("#createBoardBtn").removeClass("big-btn").addClass("calloff");
        var f = addBoardDialog.formRead(b);
        var e = uri("URI_ADD_BOARD", b);
        addBoardDialog.formPost(e, f)
    });
    im("#editBoardBtn").click(function () {
        var e = editBoardDialog.formRead(b)
    })
};

function initAddDialog() {
    var a = new Array('<div  id="newContentDialog" style="display: none;">', '	<div class="dia-addall">', '		<div class="dia-desc">添加<a href="' + uri("URI_HELP_PIN") + '">“Kejian.TV收集工具”</a>，随时将网页中的图片和链接收集到Kejian.TV。<a href="' + uri("URI_HELP_PIN") + '">马上添加&gt;&gt;</a></div>', '		<div class="addcontainer cf">', '			<a href="###" onclick="closeAddDialog();ShareDialog.add.open();" class="linkshare yahei"><span class="largenet-ico"></span><br>链接分享</a>', '			<a href="###" onclick="closeAddDialog();ShareDialog.add.open();ShareDialog.add.changTab(1);" class="uploadshare yahei"><span class="largeupload-ico"></span><br>上传分享</a>', '			<a href="###" id="addBoardButtonToolbar" onclick="closeAddDialog();" class="addboard yahei"><span class="largeboard-ico"></span><br>添加图格</a>', "		</div>", "	</div>", "</div>");
    $("body").append(a.join(""))
}function closeAddDialog() {
    $("#newContentDialog").dialog("close")
}function openAddDialog(a) {
    if (ShareDialog.clickNums > 0) {
        im("#newContentDialog").dialog("open")
    } else {
        addBoardDialog.init("#addBoardButtonToolbar", loginUser == undefined ? 0 : loginUser.id);
        addContentdialog = new im("#newContentDialog").dialog({
            title: "添加",
            width: 640,
            height: 530,
            open: true,
            modal: true,
            closeCallBack: function () {}
        });
        ShareDialog.clickNums++
    }
}
var ShareDialog = {
    clickNums: 0,
    hasBoard: false,
    title: "",
    subject: "",
    price: 0,
    imageIndex: 0,
    boardCombox: null,
    openPlatformSyncHtml: null,
    boardList: new Array(),
    imageList: new Array(),
    kindsPic: {
        original: "",
        large: "",
        mediumZoom: "",
        mediumCut: "",
        tiny: ""
    },
    isBoardsLoad: false,
    fromUrl: "",
    productName: "",
    destroy: function () {
        ShareDialog.title = "";
        ShareDialog.price = 0;
        ShareDialog.imageIndex = 0;
        ShareDialog.imageList = new Array();
        ShareDialog.kindsPic = {
            original: "",
            large: "",
            mediumZoom: "",
            mediumCut: "",
            tiny: ""
        };
        ShareDialog.fromUrl = "";
        ShareDialog.productName = ""
    },
    addBoard: function (a) {
        $.post(uri("URI_ADD_BOARD", loginUser.id), {
            boardName: a,
            boardCategoryId: 0,
            manageType: 1,
            managerIds: "",
            boardUserId: loginUser.id
        }, function (b) {
            if (b.msg != "") {
                im.window.alert(b.msg);
                return false
            }
            ShareDialog.boardCombox.addList($("#shareDialogSelectBox"), b.board.id, a);
            ShareDialog.boardList.push("<option value='" + b.board.id + "' manage='" + consts("BOARD_MANAGER_PRIVILEGE_OWNER") + "'>" + a + "</option>")
        }, "json")
    },
    initOpenPlatformSync: function () {
        if (ShareDialog.openPlatformSyncHtml == null) {
            $.get(im20uri("DOMAIN_URI") + "/users/sync", function (c) {
                var a = "";
                if (c.sys_1 != undefined || c.sys_2 != undefined || c.sys_4 != undefined || c.sys_8 != undefined) {
                    a += '<span class="size">分享到:</span>';
                    if (c.sys_2 != undefined) {
                        var b = (c.sys_2 == 1) ? ' checked="checked"' : "";
                        a += '<span id="shareOpenPlatformWeibo"> <input type="checkbox" id="shareOpenPlatformWeiboCheckbox" value="2"' + b + '> <label for="shareOpenPlatformWeibo" class="sina">新浪</label> </span>'
                    }
                    if (c.sys_4 != undefined) {
                        var b = (c.sys_4 == 1) ? ' checked="checked"' : "";
                        a += '<span id="shareOpenPlatformQQT"> <input type="checkbox" id="shareOpenPlatformQQTCheckbox" value="4"' + b + '> <label for="shareOpenPlatformQQTCheckbox" class="qq">腾讯微博</label> </span>'
                    }
                    if (c.sys_1 != undefined) {
                        var b = (c.sys_1 == 1) ? ' checked="checked"' : "";
                        a += '<span id="shareOpenPlatformRenren"> <input type="checkbox" id="shareOpenPlatformRenrenCheckbox" value="1"' + b + '> <label for="shareOpenPlatformRenrenCheckbox" class="renren">人人</label> </span>'
                    }
                    if (c.sys_8 != undefined) {
                        var b = (c.sys_8 == 1) ? ' checked="checked"' : "";
                        a += '<span id="shareOpenPlatformQQZone"> <input type="checkbox" id="shareOpenPlatformQQZoneCheckbox" value="8"' + b + '> <label for="shareOpenPlatformQQZoneCheckbox" class="qzone">QQ</label> </span>'
                    }
                }
                ShareDialog.openPlatformSyncHtml = a;
                $("#shareDialogSync").html(a)
            })
        }
    },
    loadBoards: function () {
        if (ShareDialog.isBoardsLoad) {
            return false
        }
        ShareDialog.isBoardsLoad = true;
        $.get(uri("URI_BOARD_LIST_OF_LOGINUSER"), function (b) {
            for (var a in b) {
                if (b[a] == null) {
                    continue
                }
                ShareDialog.boardList.push("<option value='" + b[a].id + "' manage='" + b[a].manageType + "'>" + b[a].unEscapeBoardName + "</option>")
            }
            ShareDialog.initCombox()
        })
    },
    initCombox: function () {
        if (!ShareDialog.isBoardsLoad) {
            ShareDialog.loadBoards();
            return false
        }
        $("#shareDialogSelectBox").html(ShareDialog.boardList.join(""));
        ShareDialog.boardCombox = new im.fn.combox($("#shareDialogSelectBox"), {
            debug: false,
            pleaseSelect: "请选择图格",
            allowAnyValue: false,
            width: 372,
            maxHeight: 165,
            addList: true,
            addListCallBack: function (b) {
                ShareDialog.addBoard(b)
            },
            selectCallBack: function () {
                ShareDialog.add.checkForm()
            }
        });
        var a = parseInt($.cookie("lastBoardId"));
        if (a > 0) {
            ShareDialog.boardCombox.setValue($("#BoardList"), a)
        }
        ShareDialog.add.checkForm()
    },
    checkCommerceUrl: function (b) {
        var a = /^(http[s]?:\/\/)?[a-zA-Z0-9][a-zA-Z0-9-]*\.[tmall|taobao|360buy]+\.[a-zA-Z]{2,6}\/.+$/i;
        return a.exec(b)
    },
    checkUrl: function (b) {
        var a = /^(http[s]?:\/\/)?([a-zA-Z0-9][a-zA-Z0-9-]*\.)*([a-zA-Z0-9][a-zA-Z0-9-]*)+\.[a-zA-Z]{2,6}\/.+$/i;
        return a.exec(b)
    },
    preLoadImage: function (d) {
        var c = new Array();
        if (Object.prototype.toString.apply(d) === "[object Array]") {
            for (var b in d) {
                c = c.concat(ShareDialog.preLoadImage(d[b]))
            }
        } else {
            var a = new Image();
            a.src = d;
            c.push(a)
        }
        return c
    },
    getPrevImageIndex: function () {
        return ShareDialog.imageIndex = ShareDialog.imageIndex < 1 ? ShareDialog.imageList.length - 1 : ShareDialog.imageIndex - 1
    },
    getNextImageIndex: function () {
        return ShareDialog.imageIndex = ShareDialog.imageIndex >= ShareDialog.imageList.length - 1 ? 0 : ShareDialog.imageIndex + 1
    },
    init: function () {},
    add: {
        tabIndex: 0,
        dialog: null,
        init: function () {
            ShareDialog.initOpenPlatformSync();
            ShareDialog.add.initDialogHtml();
            ShareDialog.add.initUrlWebUpload();
            $("#shareDialogTabs .active").on("click", function () {
                ShareDialog.destroy();
                if ($(this).hasClass("current")) {
                    return false
                }
                $(this).addClass("current").siblings().removeClass("current");
                if (ShareDialog.add.tabIndex == 1) {
                    ShareDialog.add.initUrlWebUpload();
                    $(this).siblings(".say").hide()
                } else {
                    ShareDialog.add.initLocalContent();
                    $(this).siblings(".say").show()
                }
            });
            ShareDialog.add.bindSaveButton()
        },
        open: function () {
            ShareDialog.add.init();
            ShareDialog.add.dialog = new im("#newShareDialog").dialog({
                title: "添加新收集",
                width: 640,
                height: 530,
                open: true,
                modal: true,
                closeCallBack: function () {
                    $("#newShareDialog").remove();
                    ShareDialog.destroy()
                }
            })
        },
        changTab: function (a) {
            if (a == 0) {
                $("#shareDialogTabs .net").click()
            } else {
                $("#shareDialogTabs .local").click()
            }
        },
        setSubject: function (a) {
            ShareDialog.subject = a;
            $("#shareDialogTitle").val(a)
        },
        bindSaveButton: function () {
            $("#shareDialogSaveButton").text("保存");
            $("#shareDialogSaveButton").off().on("click", function () {
                if ($(this).hasClass("calloff")) {
                    return false
                }
                ShareDialog.add.save()
            })
        },
        initUrlWebUpload: function () {
            ShareDialog.add.tabIndex = 0;
            $("#shareDialogTabContent").html(ShareDialog.add.tabContents.webUpload)
        },
        initUploadLoading: function () {
            $("#shareDialogTabContent").html(ShareDialog.add.tabContents.uploadLoading)
        },
        initWebContent: function () {
            $("#shareDialogTabContent").html(ShareDialog.add.tabContents.webContent);
            ShareDialog.initCombox();
            $("#shareDialogSync").html(ShareDialog.openPlatformSyncHtml);
            $("#shareDialogThumb").attr("src", ShareDialog.imageList[0].src);
            $("#shareDialogThumb").get(0).onload = function () {
                $("#shareDialogLoadingImg").hide();
                $("#shareDialogLoadingDiv").hide()
            };
            $("#shareDialogTitle").val(ShareDialog.subject + ShareDialog.title);
            if (ShareDialog.imageList.length > 1) {
                $("#shareDialogPrevImg").show();
                $("#shareDialogNextImg").show();
                $("#shareDialogPrevImg").off().on("click", function () {
                    $("#shareDialogLoadingImg").show();
                    $("#shareDialogLoadingDiv").show();
                    $("#shareDialogThumb").attr("src", ShareDialog.imageList[ShareDialog.getPrevImageIndex()].src)
                });
                $("#shareDialogNextImg").off().on("click", function () {
                    $("#shareDialogLoadingImg").show();
                    $("#shareDialogThumb").attr("src", ShareDialog.imageList[ShareDialog.getNextImageIndex()].src)
                })
            }
            $.fn.countNumber("#shareDialogTitle", {
                scroll: false,
                numberid: 140,
                textareaid: "#shareDialogTitleTotal",
                effactOn: false
            })
        },
        initLocalContent: function () {
            ShareDialog.add.tabIndex = 1;
            $("#shareDialogTabContent").html(ShareDialog.add.tabContents.localContent);
            $("#shareDialogShopUrl input").focus(function () {
                $(this).removeClass("gray").removeClass("error");
                if ($(this).val() == "输入购买链接(选填)") {
                    $(this).val("")
                }
            });
            $("#shareDialogShopUrl input").focusout(function () {
                $(this).addClass("gray");
                if ($(this).val().Trim() == "") {
                    $(this).val("输入购买链接(选填)")
                } else {
                    if (!ShareDialog.checkUrl($(this).val())) {
                        $(this).addClass("error");
                        $.fn.tipsMsm(false, "shareDialogTips", "购买链接格式不正确.");
                        return false
                    }
                }
            });
            im.zm.getAutoUser({
                id: "shareDialogTitle"
            });
            ShareDialog.initCombox();
            ShareDialog.add.initSwfUpload();
            $("#shareDialogSync").html(ShareDialog.openPlatformSyncHtml);
            $.fn.countNumber("#shareDialogTitle", {
                scroll: false,
                numberid: 140,
                textareaid: "#shareDialogTitleTotal",
                effactOn: false
            })
        },
        loadCommerceContent: function () {
            var a = $("#share-dialog-commerce-url").val();
            if (!ShareDialog.checkCommerceUrl(a)) {
                $.fn.tipsMsm(false, "shareDialogTips", "请正确输入URL.");
                return false
            }
            ShareDialog.add.initUploadLoading();
            $.post(uri("URI_PRODUCT_INFO_URI"), {
                uri: a
            }, function (c) {
                if (c != undefined) {
                    ShareDialog.fromUrl = a;
                    ShareDialog.productName = c.title;
                    ShareDialog.title = c.title + "￥" + c.price;
                    ShareDialog.price = c.price;
                    var d = new Array();
                    for (var b in c.proImg) {
                        d.push(c.proImg[b])
                    }
                    ShareDialog.imageList = ShareDialog.imageList.concat(ShareDialog.preLoadImage(d));
                    ShareDialog.add.initWebContent()
                } else {
                    ShareDialog.add.initUrlWebUpload();
                    $.fn.tipsMsm(false, "shareDialogTips", "请正确输入URL.");
                    return false
                }
            })
        },
        uploadShareStart: function (a) {
            if ($("#shareDialogThumb").attr("src") != "") {
                $("#shareDialogLoadingDiv").removeClass("loading").addClass("loading2")
            }
            $("#shareDialogLoadingDiv").show();
            $("#shareDialogLoadingImg").show();
            $("#shareDialogTabContent .uploadimg").css("z-index", - 1);
            return true
        },
        uploadShareSuccess: function (c) {
            var b = null;
            try {
                b = $.parseJSON(c)
            } catch (a) {}
            if (b == null) {
                $.fn.tipsMsm(false, "uploadPicTip", "图片上传失败.");
                return false
            }
            ShareDialog.kindsPic.original = b.pic1;
            ShareDialog.kindsPic.large = b.pic2;
            ShareDialog.kindsPic.mediumZoom = b.pic3;
            ShareDialog.kindsPic.mediumCut = b.pic4;
            ShareDialog.kindsPic.tiny = b.pic5;
            $("#shareDialogThumb").attr("src", b.pic0 + b.pic4).show();
            $("#shareDialogLoadingDiv").hide();
            $("#shareDialogLoadingImg").hide();
            ShareDialog.add.checkForm();
            return true
        },
        initSwfUpload: function () {
            $("#shareDialogPlaceholderDiv").swfupload({
                upload_url: uri("URI_GRAPHICS_SHARE"),
                file_size_limit: "5120",
                file_types: "*.jpg;*.jpeg;*.gif;*.png",
                file_types_description: "JPEG and PNG Images",
                file_upload_limit: "0",
                file_queue_limit: "0",
                file_post_name: "image",
                debug: false,
                button_image_url: consts("CSS_PREFIX") + "/images/button/swfupload.png",
                button_placeholder_id: "shareDialogPlaceholder",
                button_width: 104,
                button_height: 34,
                flash_url: "/swfupload.swf",
                button_window_mode: "transparent"
            });
            $("#shareDialogPlaceholderDiv").bind("fileQueued", function (b, a) {
                $(this).swfupload("startUpload")
            }).bind("uploadStart", function (a) {
                ShareDialog.add.uploadShareStart();
                $(this).swfupload("startUpload")
            }).bind("uploadSuccess", function (b, a, c) {
                ShareDialog.add.uploadShareSuccess(c);
                $(this).swfupload("startUpload")
            });
            $("#shareDialogTabContent .indeximg").hover(function () {
                if ($("#shareDialogLoadingImg").css("display") == "block") {
                    return false
                }
                $("#shareDialogTabContent .uploadimg").css("z-index", 1000)
            }, function () {
                $("#shareDialogTabContent .uploadimg").css("z-index", - 1)
            })
        },
        checkForm: function () {
            im.user.validate.checkForm({
                objValue: [{
                    ele: $("#shareDialogThumb"),
                    type: "hiddenText",
                    func: function () {
                        return $("#shareDialogThumb").attr("src") != "" || ShareDialog.kindsPic.original == ""
                    }
                }, {
                    ele: $("#shareDialogTitle"),
                    type: "textarea",
                    func: function (a) {
                        return a.val().Trim() != ""
                    },
                    defaultSta: true
                }],
                element: $("#shareDialogSaveButton"),
                openClass: "big-btn",
                closeClass: "calloff"
            })
        },
        save: function () {
            var d = $("#shareDialogTitle").val();
            var e = ShareDialog.boardCombox.getValue($("#shareDialogSelectBox"));
            var a = $("#shareDialogThumb").attr("src");
            if (a == "" && ShareDialog.kindsPic.original == "") {
                $.fn.tipsMsm(false, "shareDialogTips", "请先上传图片.");
                return false
            }
            if (e < 1) {
                e = 0
            }
            if (d.Trim() == "") {
                $.fn.tipsMsm(false, "shareDialogTips", "请输入内容.");
                return false
            }
            if ($.fn.getbytelength(d.Trim()) > 140) {
                $.fn.tipsMsm(false, "shareDialogTips", "内容最多输入140字.");
                return false
            }
            var c = "";
            if (ShareDialog.add.tabIndex == 0) {
                c = ShareDialog.fromUrl
            } else {
                var b = $("#shareDialogShopUrl input").val();
                if (ShareDialog.checkUrl(b)) {
                    c = b
                } else {
                    if (b != "输入购买链接(选填)") {
                        $("#shareDialogShopUrl input").addClass("error");
                        $.fn.tipsMsm(false, "shareDialogTips", "购买链接格式不正确.");
                        return false
                    }
                }
            }
            $("#shareDialogSaveButton").removeClass("big-btn").addClass("calloff").text("收集中...");
            $.post(uri("URI_BOARD_PIC", loginUser.id), {
                title: d,
                boardId: e,
                picOrig: ShareDialog.kindsPic.original,
                picLarge: ShareDialog.kindsPic.large,
                picMediumZoom: ShareDialog.kindsPic.mediumZoom,
                picMediumCut: ShareDialog.kindsPic.mediumCut,
                picTiny: ShareDialog.kindsPic.tiny,
                imageUrl: a,
                price: ShareDialog.price,
                fromUrl: c,
                productName: ShareDialog.productName
            }, function (g) {
                $.cookie("lastBoardId", e, {
                    expires: 2592000,
                    path: "/"
                });
                var f = new Array();
                $("#shareDialogSync>span>input:checked").each(function (h) {
                    f.push($(this).val())
                });
                if (f.length > 0) {
                    $.post("/users/share", {
                        cbpid: g.boardPicId,
                        sns_id: f.join(",")
                    }, function () {})
                }
                im("#newShareDialog").dialog("close");
                im.window.alert(g.msg);
                if (g.boardPicId != undefined) {
                    window.setTimeout(function () {
                        window.location = uri("URI_BOARD_PIC", g.boardPicId)
                    }, 1000)
                }
            }, "json")
        },
        initDialogHtml: function () {
            var a = new Array('<div id="newShareDialog" style="display: none;">', '		<div class="client cf">', '			<ul class="dialog-tag" id="shareDialogTabs">', '				<li class="active net current">商品链接</li>', '				<li class="active local">本地上传</li>', '				<li class="say" style="display:none;">仅支持JPG、GIF、PNG图片文件，且文件小于5M</li>', "			</ul>", '			<div id="shareDialogTabContent" class="tabContent cf"></div>', "		</div>", "</div>").join("");
            $("body").append(a)
        },
        tabContents: {
            webUpload: new Array('<div class="webupload">', '	<p class="dialogtips">输入或粘贴商品的网址到下面的框中即可</p>', '	<p><span class="innerborder removeabs"><input id="share-dialog-commerce-url" type="text" class="deftest" value=""></span><a class="sure" href="###" onclick="ShareDialog.add.loadCommerceContent();">确 定</a></p>', '	<span class="dis-tipscmt" style="display:block;"><div id="shareDialogTips"></div></span><p class="webtips">已支持以下网站：</p>', '	<p><span class="taobao">淘宝</span> <span class="tmall">Tmall</span> <span class="buy360" style="display:none;">京东</span></p>', "</div>").join(""),
            uploadLoading: '<div class="weblodding"><span class="loadin">正在加载，请稍候……</span></div>',
            webContent: new Array('<div class="showstatus">', '	<div class="indeximg">', '		<div id="shareDialogLoadingDiv" class="loading"></div>', '		<img id="shareDialogLoadingImg" class="loadimg" src="' + consts("CSS_PREFIX") + '/images/array/loadinggray.gif">', '		<img src="" id="shareDialogThumb" class="shareimg">', '		<div class="imgpage">', '			<a href="###" id="shareDialogPrevImg">&lt;上一张</a> <a href="###" id="shareDialogNextImg">下一张&gt;</a>', "		</div>", "	</div>", '	<div class="saybox">', '		<div class="selectbox margin">', '			<select id="shareDialogSelectBox"></select>', "		</div>", '		<div class="textareabox margin">', '			<textarea id="shareDialogTitle"></textarea>', '			<div class="saynumber">', '				<a class="insertTheme" id="insertTheme1">#插入主题#</a><a class="insertprice" id="insertprice1"><em>¥</em>插入价格</a>', '				<span class="floatright"><em id="shareDialogTitleTotal">0</em>/140</span>', "			</div>", "		</div>", '		<span class="dis-tipscmt" style="display:block;"><div id="shareDialogTips"></div></span>', '		<div class="submit" style="padding-left:0">', '			<span class="floatright share" id="shareDialogSync"></span>', '			<a id="shareDialogSaveButton" class="bigbutton calloff bigbuttongray" href="###">收集</a>', "		</div>", "	</div>", "</div>").join(""),
            localContent: new Array('<div class="showstatus">', '	<div class="indeximg">', '		<div style="display: none;" id="shareDialogLoadingDiv" class="loading"></div>', '		<img style="display: none;" id="shareDialogLoadingImg" class="loadimg" src="' + consts("CSS_PREFIX") + '/images/array/loadinggray.gif">', '		<img src="" class="shareimg" style="display: none;" id="shareDialogThumb">', '		<span class="uploadimg">', "</span>", "	</div>", '	<div class="saybox">', '<div id="shareDialogPlaceholderDiv" class="swfbtn"><span class="imgbtn" id="shareDialogPlaceholder">上传图片</span></div>', '		<div class="selectbox margin">', '			<select id="shareDialogSelectBox">', "			</select>", "		</div>", '		<div class="textareabox margin">', '			<textarea id="shareDialogTitle"></textarea>', '			<div class="saynumber">', '				<a class="insertTheme" id="insertTheme1">#插入主题#</a><a class="insertprice" id="insertprice1"><em>¥</em>插入价格</a>', '				<span class="floatright"><em id="shareDialogTitleTotal">0</em>/140</span>', "			</div>", "		</div>", '		<div id="shareDialogShopUrl" class="shopurl">', "			<label></label>", '			<span class="innerborder removeabs"><input type="text" class="png deftest gray" value="输入购买链接(选填)"></span>', "		</div>", '		<div id="shareDialogTips"></div>', '		<div class="submit" style="padding-left:0">', '			<span class="floatright share" id="shareDialogSync"></span>', '			<a id="shareDialogSaveButton" class="bigbutton calloff bigbuttongray" href="###">收集</a>', "		</div>", "	</div>", "</div>").join("")
        }
    },
    edit: {
        comBoardList: null,
        isComboxLock: false,
        isDeleteShareEnabled: true
    }
};
  
jQuery(function () {
    ShareDialog.init();
    initAddDialog()
});
var share = IM20.namespace("com.im20.sc.share");
var editShare = IM20.namespace("com.im20.sc.share.edit");
share.uploadUrl = im20uri("DOMAIN_URI") + "/graphics/share";
share.loginUserId = 0;
editShare.dialogId = "#editShareDialog";
editShare.comBoardList = null;
editShare.lockCombox = false;
share.addBoardEnabled = true;
share.addSaveEnabled = true;
share.deleteShareEnabled = true;
share.addBoard = function (e, b, c) {
    if (!share.addBoardEnabled) {
        return false
    }
    share.addBoardEnabled = false;
    var a = uri("URI_ADD_BOARD", share.loginUserId);
    var d = {
        boardName: c,
        boardCategoryId: 0,
        manageType: 1,
        managerIds: "",
        boardUserId: share.loginUserId
    };
    $.post(a, d, function (f) {
        share.addBoardEnabled = true;
        if (f.msg != "") {
            im.window.alert(f.msg);
            return false
        }
        e.addList($(b), f.board.id, c)
    }, "json")
};
editShare.clear = function () {
    $("#editBoardList").next(".combox").remove();
    $("#editBoardList").html("");
    $("#btnSaveBoardPic").text("保存").removeClass("calloff").addClass("big-btn");
    $("#sharenumid").removeClass();
    $("#editTitle").removeClass();
    editShare.lockCombox = false
};
editShare.initCombox = function (a) {
    var b = uri("URI_BOARD_LIST_OF_LOGINUSER");
    $.get(b, function (d) {
        for (var c in d) {
            if (d[c] == null) {
                continue
            }
            $("#editBoardList").append("<option value='" + d[c].id + "' manage='" + d[c].manageType + "'>" + d[c].unEscapeBoardName + "</option>")
        }
        editShare.comBoardList = new im.fn.combox($("#editBoardList"), {
            debug: false,
            pleaseSelect: "请选择图格",
            allowAnyValue: false,
            width: 374,
            addList: true,
            addListCallBack: function (e) {
                share.addBoard(editShare.comBoardList, "#editBoardList", e)
            }
        });
        editShare.comBoardList.setValue($("#editBoardList"), a);
        editShare.comBoardList.lock(editShare.lockCombox)
    })
};
editShare.init = function (a) {
    $("#eidtMsgTip").hide();
    $("#thumb1").hide();
    share.loginUserId = a;
    editShare.editShareDialog = new im(editShare.dialogId).dialog({
        title: "编辑收集",
        width: 640,
        height: 530,
        open: false,
        modal: true,
        closeCallBack: function () {
            editShare.clear()
        }
    });
    $.fn.countNumber("#editTitle", {
        scroll: false,
        numberid: 140,
        textareaid: "#sharenumid",
        effactOn: false
    });
    $("#delBtn").click(function () {
        $("#delBoardPic").hide();
        $("#delBoardPicConfirm").show()
    });
    $("#btnDelBoardPicOK").click(function () {
        editShare.delete_($("#editBoardPicId").val())
    });
    $("#btnDelBoardPicCancel").click(function () {
        $("#delBoardPicConfirm").hide();
        $("#delBoardPic").show()
    })
};
editShare.edit = function (a, b) {
    $.get(uri("URI_BOARD_PIC_AJAX", a), function (c) {
        if (c.errors != null) {
            im.window.alert(c.errors, "error");
            return
        }
        var d = $.fn.filterStr(c.value.reshare.titleWithoutUcard);
        $("#editBoardPicId").val(c.value.reshare.id);
        $("#editBoardPicThumb").html('<img class="shareimg" src="' + c.value.share.picMediumCut + '"/>');
        $("#editTitle").val(d);
        if ($.fn.getbytelength($("#editTitle").val().Trim()) > 0) {
            $("#sharenumid").text($.fn.getbytelength($("#editTitle").val().Trim()));
            $("#sharenumid").addClass("blue")
        }
        $.fn.countNumber("#editTitle", {
            scroll: false,
            numberid: 140,
            textareaid: "#sharenumid",
            effactOn: false
        });
        editShare.initCombox(c.value.reshare.boardId);
        if (c.value.reshare.userId == share.loginUserId) {
            $("#btnSaveBoardPic").show()
        } else {
            $("#btnSaveBoardPic").hide();
            $("#editTitle").attr("disabled", "disabled");
            editShare.lockCombox = true
        }
        $("#delBoardPic").show();
        $("#delBoardPicConfirm").hide()
    }, "json");
    im(editShare.dialogId).dialog("open");
    $("#submitDiv .big-btn").off().on("click", function () {
        if (!im.user.validate.checkTextarea([$("#editTitle")])) {
            return
        }
        if ($(this).hasClass("calloff")) {
            return false
        }
        $(this).text("保存中...").removeClass("big-btn").addClass("calloff");
        editShare.save(b)
    })
};
editShare.checkTitle = function () {
    return true
};
editShare.checkBoards = function () {
    var a = editShare.comBoardList.getValue($("#editBoardList"));
    return (a != undefined && a != "" && a != 0)
};
editShare.checkEditForm = function () {
    im.user.validate.checkForm({
        objValue: [{
            ele: $("#editTitle"),
            type: "textarea",
            func: editShare.checkTitle,
            defaultSta: true
        }, {
            ele: $("#editBoardList"),
            type: "combox",
            func: editShare.checkBoards
        }],
        element: $("#btnSaveBoardPic"),
        openClass: "big-btn",
        closeClass: "calloff"
    })
};
editShare.save = function (b) {
    var a = $("#editBoardPicId").val();
    var e = $("#editTitle").val();
    var d = $("#editIntegral:checked").val() ? consts("BOARD_PIC_SHARE_TYPE_QUESTION") : consts("BOARD_PIC_SHARE_TYPE_SHARE");
    var f = editShare.comBoardList.getValue($("#editBoardList"));
    if (f == "") {
        $.fn.tipsMsm(false, "urlTip", "请选择图格.");
        return false
    }
    if (a == "" || a == 0 || a == null) {
        $.fn.tipsMsm(false, "urlTip", "图片ID不存或已被删除.");
        return false
    }
    var c = {
        title: $.trim(e),
        integral: d,
        boardId: f
    };
    $.put(uri("URI_BOARD_PIC_AJAX", a), c, function (g) {
        if (parseInt(b)) {
            $.fn.userOperation.update("content", g)
        }
        editShare.clear();
        im("#editShareDialog").dialog("close");
        if (g.errors == null) {
            im.window.alert("修改成功.", "ok")
        } else {
            $.fn.tipsMsm(false, "urlTip", g.errors[0]);
            return false
        }
    }, "json");
    editShare.clear()
};
editShare.delete_ = function (a) {
    if (!share.deleteShareEnabled) {
        return false
    }
    share.deleteShareEnabled = false;
    $.delete_(uri("URI_BOARD_PIC_AJAX", a), {}, function (b) {
        share.deleteShareEnabled = true;
        editShare.clear();
        im("#editShareDialog").dialog("close");
        im.window.alert(b.msg, "ok");
        window.setTimeout(function () {
            window.location = uri("URI_USER", loginUser.id)
        }, 1000);
        var c = /^\/share\/\d+$/;
        if (!c.test(window.location.pathname)) {
            $.fn.userOperation.deleteBoard("content", a)
        }
    }, "json")
};
var reshareDialog = IM20.namespace("com.im20.sc.reshare");
reshareDialog.liregex = /\<option[\s\S]*/gi;
reshareDialog.addBoard = function (e, b, c) {
    var a = "/board/" + share.loginUserId;
    var d = {
        boardName: c,
        boardCategoryId: 0,
        manageType: 1,
        managerIds: "",
        boardUserId: share.loginUserId
    };
    $.post(a, d, function (f) {
        e.addList($(b), f.board.id, c)
    }, "json")
};
reshareDialog.errorTip = function (a) {
    $("#reshareDialogMessage").show();
    if (a == "") {
        $("#reshareDialogMessage").parent().parent().slideUp()
    } else {
        $("#reshareDialogMessage").parent().parent().slideDown();
        $("#reshareDialogMessage").html("" + a);
        setTimeout(function () {
            reshareDialog.errorTip("")
        }, 1000)
    }
};
reshareDialog.makeBoardSelect = function (e, f) {
    var b = [];
    for (var a = 0; a < e.length; a++) {
        var d = e[a];
        if (d) {
            if (reshareDialog.lastBoardId == d.id && d.id != f.reshare.boardId) {
                reshareDialog.isLastBoardIdExist = true
            }
            var c = reshareDialog.makeBoardOption(d, a, f.reshare);
            b[a] = c
        } else {
            b[a] = ""
        }
    }
    return b.join("")
};
reshareDialog.makeBoardOption = function (c, b, d) {
    var a;
    if (d && c.id != d.boardId) {
        a = ['<option value="' + c.id + '" manage="' + c.manageType + '">' + c.boardName + "</option>"].join("")
    } else {
        a = ""
    }
    return a
};
reshareDialog.isNum = [];
reshareDialog.prepareDialog = function (a, c) {
    reshareDialog.errorTip("");
    if (!c.reshare.boardId) {
        var b = "无法获取原图格数据";
        reshareDialog.errorTip(b)
    }
    if (c.reshare.userId) {
        $.get(uri("URI_USER_AJAX", c.reshare.userId), function (d) {
            $("#reshareDialogCommentTo").html("同时评论给 " + d.nickname)
        }).error(function () {
            $("#reshareDialogCommentTo").html("同时评论给 获取原收集用户昵称错误")
        })
    } else {
        var b = "无法获取原收集数据";
        $("#reshareDialogCommentTo").html("同时评论给 " + b);
        reshareDialog.errorTip(b)
    }
    if (c.reshare.fromReshareId < 1) {
        $("#reshareDialogCommentTo2").hide();
        $("#checkbox-2").hide()
    }
    if (c.share.picMediumCut) {
        $("#reshareDialogBoardPicImage").html("<img width='190px' height='190px' src=\"" + c.share.picMediumCut + '">')
    } else {
        reshareDialog.errorTip("原收集没有图片")
    }
    if (c.reshare.fromReshareId > 0) {
        if (c.reshare.title) {
            $("textarea[name='title']").val("//@" + c.reshare.userName + ":" + $.fn.filterStr(c.reshare.titleWithoutUcardHtmlEscape))
        } else {
            $("textarea[name='title']").val("//@" + c.reshare.userName + ":收集")
        }
    } else {
        $("textarea[name='title']").val("")
    }
    $.fn.textareaNumTotal($("#reshare-ta"), {
        okText: '还可以输入 <em class="shoujiNum"></em> 字',
        errorText: '已经超过 <em class="shoujiNum"></em> 字',
        numDiv: ".shoujiNum",
        button: $("#reshareCommitButton"),
        butClass: "big-btn",
        butOff: "big-btn",
        textObj: $(".numsText")
    });
    if (!reshareDialog.liregex.test($("#reshareDialogBoardList").html())) {
        $.get(a, function (f) {
            $("#reshareDialogBoardList").html(reshareDialog.makeBoardSelect(f, c));
            reshareDialog.comBoardList = new im.fn.combox($("#reshareDialogBoardList"), {
                debug: false,
                pleaseSelect: "请选择图格",
                allowAnyValue: false,
                width: 372,
                addList: true,
                addListCallBack: function (g) {
                    share.addBoard(reshareDialog.comBoardList, "#reshareDialogBoardList", g)
                },
                selectCallBack: function () {}
            });
            if (reshareDialog.lastBoardId > 0 && reshareDialog.isLastBoardIdExist) {
                reshareDialog.comBoardList.setValue($("#reshareDialogBoardList"), reshareDialog.lastBoardId)
            }function d(h) {
                var g = false;
                if (h.val().Trim().length > 0) {
                    g = true
                }
                return g
            }function e(h) {
                var g = false;
                h.find("option").each(function () {
                    if (this.getAttribute("selected") == "selected" && $(this).text() != "" || (this.getAttribute("selected") == true && this.getAttribute("value") != "")) {
                        g = true
                    }
                });
                return g
            }
        })
    }
};
reshareDialog.formRead = function () {
    var b = {};
    var a = IM20.namespace("com.im20.sc.reshare").reshareObj;
    b.shareId = a.share.id;
    b.reshareId = a.reshare.id;
    b.fromReshareUserId = a.reshare.userId;
    b.fromBoardId = a.reshare.boardId;
    b.toBoardId = reshareDialog.comBoardList.getValue($("#reshareDialogBoardList"));
    if (!b.toBoardId) {
        b.toBoardId = 0
    }
    b.title = $("textarea[name='title']").val();
    b.isComment = $("input[name='isComment']").attr("checked") ? true : false;
    b.isComment2 = $("input[name='isComment2']").attr("checked") ? true : false;
    b.syncToSinaWeibo = $("input[name='syncToSinaWeibo']").attr("checked") ? true : false;
    b.syncToTencentWeibo = $("input[name='syncToTencentWeibo']").attr("checked") ? true : false;
    b.syncToRenren = $("input[name='syncToRenren']").attr("checked") ? true : false;
    return b
};
reshareDialog.formValidate = function (b) {
    var a = false;
    if (b.reshareId && b.reshareId > 0 && b.shareId && b.shareId > 0) {
        if (b.isComment) {
            if (b.title && b.title.Trim().length > 0) {
                a = true
            }
        } else {
            a = true
        }
    }
    return a
};
reshareDialog.formPost = function (b, a) {
    $.post(b, a, function (c) {
        if (c && c.result.value) {
            im("#reshareDialog").dialog("close");
            reshareDialog.clearForm();
            reshareDialog.errorTip("");
            try {
                autoLayout.reshareCountIncr(a.fromReshareId)
            } catch (d) {}
            reshareDialog.syncToSns(c.result.value);
            $.cookie("lastBoardId", a.toBoardId, {
                expires: 2592000,
                path: "/"
            });
            im.window.alert("收集成功!", "ok");
            $(".btn-xcollect em").text(parseInt($(".btn-xcollect em").text()) + 1)
        } else {
            reshareDialog.errorTip("" + c.result.error)
        }
        $("#reshareCommitButton").removeClass("calloff").addClass("big-btn")
    }, "json").error(function () {
        $("#reshareCommitButton").removeClass("calloff").addClass("big-btn");
        reshareDialog.errorTip("");
        reshareDialog.errorTip("数据发送失败, 请检查网络连接")
    })
};
reshareDialog.syncToSns = function (a) {
    var b = "";
    if ($("#reshare_sync_sina").attr("checked")) {
        b += $("#reshare_sync_sina").val()
    }
    if (b != "") {
        b += ","
    }
    if ($("#reshare_sync_tencent_weibo").attr("checked")) {
        b += $("#reshare_sync_tencent_weibo").val()
    }
    if (b != "") {
        b += ","
    }
    if ($("#reshare_sync_renren").attr("checked")) {
        b += $("#reshare_sync_renren").val()
    }
    if (b != "") {
        b += ","
    }
    if ($("#reshare_sync_qzone").attr("checked")) {
        b += $("#reshare_sync_qzone").val()
    }
    if (b != "") {
        $.post("/users/share", {
            cbpid: a.id,
            sns_id: b
        }, function () {})
    }
};
reshareDialog.initSyncToSns = function () {
    var a = "/users/sync";
    $.get(a, function (c) {
        if (c == "") {
            c = "{}"
        }
        var b = c;
        st = b.sys_2;
        if (st != undefined) {
            $("#reshareCommitButtonDiv-1").show();
            $("#reshare_sync_sina-1").show();
            if (st == 1) {
                $("#reshare_sync_sina").attr("checked", "true")
            }
        }
        st = b.sys_4;
        if (st != undefined) {
            $("#reshareCommitButtonDiv-1").show();
            $("#reshare_sync_tencent_weibo-1").show();
            if (st == 1) {
                $("#reshare_sync_tencent_weibo").attr("checked", "true")
            }
        }
        st = b.sys_1;
        if (st != undefined) {
            $("#reshareCommitButtonDiv-1").show();
            $("#reshare_sync_renren-1").show();
            if (st == 1) {
                $("#reshare_sync_renren").attr("checked", "true")
            }
        }
        st = b.sys_8;
        if (st != undefined) {
            $("#reshareCommitButtonDiv-1").show();
            $("#reshare_sync_qzone-1").show();
            if (st == 1) {
                $("#reshare_sync_qzone").attr("checked", "true")
            }
        }
    })
};
reshareDialog.clearForm = function () {
    $("#reshare-ta").removeClass();
    $("#cur-wordnum").removeClass();
    $("select[name='boardId']").each(function () {
        $(this).html("")
    });
    $("textarea[name='title']").val("");
    $("input[name='isComment']:checked").each(function () {
        $(this).attr("checked", true)
    });
    $("input[name='syncToSinaWeibo']:checked").each(function () {
        $(this).attr("checked", false)
    });
    $("input[name='syncToTencentWeibo']:checked").each(function () {
        $(this).attr("checked", false)
    });
    $("input[name='syncToRenren']:checked").each(function () {
        $(this).attr("checked", false)
    });
    $("#reshareDialogBoardList").next(".combox").remove();
    $("#reshareDialogBoardList").html("");
    $("#checkbox-1").attr("checked", false);
    reshareDialog.errorTip("")
};
reshareDialog.init = function () {
    var a = "#reshareDialog";
    var b = new im(a).dialog({
        title: "收集",
        width: 640,
        height: 530,
        open: false,
        modal: true,
        closeCallBack: function () {
            reshareDialog.clearForm()
        }
    });
    im("#reshareCommitButtonDiv .big-btn").off().on("click", function () {
        if (!im.user.validate.checkTextarea([$("#reshare-ta")])) {
            return
        }
        if ($(this).hasClass("calloff")) {
            return
        }
        $(this).removeClass("big-btn").addClass("calloff");
        var c = reshareDialog.formRead();
        reshareDialog.formPost(IM20.namespace("com.im20.sc.reshare").postUri, c)
    })
};

function setwordnum(a) {
    if ($.fn.getbytelength(a) <= 140) {
        $("#cur-wordnum").text($.fn.getbytelength(a))
    } else {
        $("#cur-wordnum").removeClass().addClass("orangered").text($.fn.getbytelength(a) - 140)
    }
}
var reshare = function (a, b) {
        if (b) {
            reshareDialog.lastBoardId = b
        } else {
            reshareDialog.lastBoardId = parseInt($.cookie("lastBoardId"))
        }
        reshareDialog.isLastBoardIdExist = false;
        reshareDialog.errorTip("");
        $.fn.textareaNumTotal($("#reshare-ta"), {
            okText: '还可以输入 <em class="shoujiNum"></em> 字',
            errorText: '已经超过 <em class="shoujiNum"></em> 字',
            numDiv: ".shoujiNum",
            button: $("#reshareCommitButton"),
            butClass: "big-btn",
            butOff: "big-btn",
            textObj: $(".numsText")
        });
        if (a && a.id) {
            IM20.namespace("com.im20.sc.reshare").postUri = uri("URI_BOARD_PIC_RESHARE", a.id);
            $.get(uri("URI_BOARD_PIC_AJAX", a.id), function (c) {
                if (c.value) {
                    IM20.namespace("com.im20.sc.reshare").reshareObj = c.value;
                    reshareDialog.prepareDialog(uri("URI_BOARD_LIST_OF_LOGINUSER"), c.value);
                    im("#reshareDialog").dialog("open");
                    $("#reshare-ta").focus()
                } else {
                    im.window.alert("收集失败.", "error")
                }
            });
            reshareDialog.initSyncToSns()
        } else {
            im.window.alert("参数错误! " + (a ? (a.id ? "" : "收集id非法") : "收集为空") + ", ", "error")
        }
    };
var IM20 = window.IM20 || {};
IM20.namespace = function (c) {
    if (!c || !c.length) {
        return null
    }
    var d = c.split(".");
    var b = IM20;
    for (var a = (d[0] == "IM20") ? 1 : 0; a < d.length; ++a) {
        b[d[a]] = b[d[a]] || {};
        b = b[d[a]]
    }
    return b
};
var sendMessageDialog = IM20.namespace("com.im20.sc.message");
sendMessageDialog.sendStatus = false;
sendMessageDialog.isFun = false;
sendMessageDialog.init = function (b, a, c) {
    if (a > 0) {
        var d = new im("#message_dialog").dialog({
            title: "发私信",
            width: 460,
            height: 230,
            open: false,
            modal: true,
            closeCallBack: function () {
                im("#user_id").val("");
                im("#jquery-sendmail").removeClass();
                im("#message_content").val("");
                im("#jquery-sendmail").text(0);
                im("#jqeury-smsinfo").hide()
            }
        });
        $.fn.countNumber("#message_content", {
            textareaid: "#jquery-sendmail",
            numberid: 300,
            effactOn: false
        });
        im("#send_div .big-btn").on("click", function () {
            if ($(this).hasClass("calloff")) {
                return false
            }
            var f = $("#message_content").val();
            var g = $("#user_id").attr("to_user_id");
            if ($.fn.getbytelength($.trim(f)) > 300) {
                $("#message_content").addClass("bgcolor").animate({
                    opacity: "0.25"
                }, 100).animate({
                    opacity: "1"
                }, 100).animate({
                    opacity: "0.25"
                }, 100).animate({
                    opacity: "1"
                }, 100);
                setTimeout("$('#message_content').removeClass('bgcolor')", 400);
                return false
            }
            $(this).remove("big-btn").addClass("calloff");
            if (f <= 0) {
                return false
            }
            if (typeof loginUser == "object") {
                if (loginUser.nickname == im("#user_id").val()) {
                    $.fn.tipsMsm(false, "jqeury-smsinfo", "不能给自己发私信，请重新输!");
                    return false
                }
            }
            $.post(uri("URI_MESSAGE"), {
                toUserId: g,
                content: f
            }, function (h) {
                if (h > 0) {
                    $("#jquery-sendmail").text("0");
                    im.window.alert("发送成功!", "ok")
                } else {
                    $.fn.tipsMsm(false, "jqeury-smsinfo", "发送失败!");
                    $("#button_send").removeClass("big-btn");
                    return false
                }
                im("#user_id").val("");
                im("#message_content").val("");
                im("#message_dialog").dialog("close");
                im("#message_list").html("");
                if (typeof c == "function") {
                    c()
                }
            })
        });
        var e = new im.fn.textInput($("#user_id"), {
            url: uri("URI_FANS_USER_FIND"),
            height: 100,
            width: 200
        })
    }
};
sendMessageDialog.openMessage = function (c, a, d, b) {
    if (a > 0) {
        im(c).click(function () {
            if (d.length > 0) {
                $("#user_id").attr("to_user_id", d)
            }
            if (b.length > 0) {
                $("#user_id").attr("value", b);
                $("#user_id").attr("disabled", "true")
            }
            im("#message_dialog").dialog("open")
        })
    }
};
sendMessageDialog.otherOpenMessage = function (c, a, g, b, d) {
    if (a > 0) {
        if (g.length > 0) {
            $("#user_id").attr("to_user_id", g)
        }
        if (b.length > 0) {
            $("#user_id").attr("value", b);
            $("#user_id").attr("disabled", "true");
            $("#user_id").css({
                "background-color": "#faf7f7"
            })
        }
        im("#message_dialog").dialog("open");

        function f(h) {
            if ($.trim(h.val()).length > 0) {
                return true
            } else {
                return false
            }
        }function e(h) {
            if ($.trim(h.val()).length > 0) {
                return true
            } else {
                return false
            }
        }
        setTimeout(function () {
            im.user.validate.checkForm({
                objValue: [{
                    ele: $("#user_id"),
                    type: "text",
                    func: f,
                    defaultSta: true
                }, {
                    ele: $("#message_content"),
                    type: "textarea",
                    func: e
                }],
                element: $("#send_div .bigbutton"),
                openClass: "big-btn",
                closeClass: "calloff",
                defaultSta: true
            })
        }, 500)
    }
};
var IM20 = window.IM20 || {};
IM20.namespace = function (c) {
    if (!c || !c.length) {
        return null
    }
    var d = c.split(".");
    var b = IM20;
    for (var a = (d[0] == "IM20") ? 1 : 0; a < d.length; ++a) {
        b[d[a]] = b[d[a]] || {};
        b = b[d[a]]
    }
    return b
};

function chek(a) {
    if ($.trim(a.val()).length > 0) {
        return true
    } else {
        return false
    }
}function chekAddress(a) {
    if ($.trim(a.val()).length > 0 && $.fn.getbytelength(a.val().Trim()) < 51) {
        return true
    } else {
        return false
    }
}function isNumber(a) {
    if (!chek(a)) {
        return false
    }
    if ($.trim(a.val()).length > 11) {
        return false
    }
    if ($.trim(a.val()).length < 5) {
        return false
    }
    return /^[0-9]*$/g.test($.trim(a.val()))
}
var addressDialog = IM20.namespace("com.im20.sc.saving.address");
addressDialog.init = function (b, a, c) {
    if (b > 0) {
        var d = new im("#address_dialog").dialog({
            title: a,
            width: 600,
            height: 230,
            open: false,
            modal: true,
            closeCallBack: function () {
                im("#address_dialog input").val("")
            }
        });
        $("#address_mobile").keyup(function () {
            var e = $(this);
            if (!$.fn.checkMobile(e)) {
                $("#mobile_alert").show();
                $("#mobile_alert").html("您输入的手机号格式不正确")
            } else {
                $("#mobile_alert").hide()
            }
        });
        $("#address_qq").blur(function () {
            var e = $(this);
            if (!isNumber(e)) {
                $("#js-error-qq").html("请输入正确的QQ号码！")
            } else {
                $("#js-error-qq").html("")
            }
        });
        $("#telephone").keyup(function () {
            var e = $(this);
            if (!$.fn.checkMobile(e)) {
                $("#js-error-mobile").html("您输入的手机号格式不正确！")
            } else {
                $("#js-error-mobile").html("")
            }
        });
        $("#address").keyup(function () {
            var e = $(this);
            if (!chekAddress(e)) {
                $("#js-error-address").html("收货地址不能空或大于50字哦！")
            } else {
                $("#js-error-address").html("")
            }
        });
        im(".neednot-btn").off().on("click", function () {
            im("#address_dialog").dialog("close")
        })
    }
};

function saveAddress(e, f, c) {
    if (e.hasClass("calloff")) {
        return false
    }
    e.remove("big-btn").addClass("calloff");
    var g = $("#dialog_address_id").val();
    var b = $("#real_name").val();
    var k = $("#address").val();
    var d = $("#telephone").val();
    var h = $("#address_qq").val();
    var a = $("#address_mobile").val();
    if (f == "qq") {
        if ($.trim(h).length < 2) {
            return false
        }
    } else {
        if (f == "mobile") {
            if ($.trim(a).toString().length < 11) {
                return false
            }
        } else {
            if ($.trim(b).length < 2 || $.trim(k).length < 2 || $.trim(d).length < 2) {
                return false
            }
        }
    }
    $.post(uri("SAVING_USER_ADDRESS_SAVE"), {
        addressId: g,
        realName: b,
        address: k,
        telephone: d,
        qq: h,
        mobile: a
    }, function (l) {
        im("#dialog_address_id").val("");
        im("#real_name").val("");
        im("#address").val("");
        im("#telephone").val("");
        im("#address_dialog").dialog("close");
        if (l == 1) {
            $("#supriseDiv").definedDialog({
                title: "",
                width: 420,
                height: 200,
                open: true,
                modal: true,
                show: "normal",
                buttons: null,
                html: $("#js-save-div").html(),
                dialogClass: "dialog3",
                closeCallBack: null
            })
        } else {
            im.window.alert("已发货", "warm")
        }
    })
}
addressDialog.openAddressDialog = function (f, k, b, m, d, h, e, g, a, l, c) {
    if (f > 0) {
        if (b.length > 0) {
            $("#real_name").attr("value", b)
        }
        if (m.length > 0) {
            $("#address").attr("value", m)
        }
        if (d.length > 0) {
            $("#telephone").attr("value", d)
        }
        if (k.length > 0) {
            $("#dialog_address_id").attr("value", k)
        }
        if (a.length > 0) {
            $("#address_mobile").attr("value", a)
        }
        if (l.length > 0) {
            $("#address_qq").attr("value", l)
        }
        if (h == "product") {
            $("#tr_address_mobile").hide();
            $("#tr_address_qq").hide();
            $(".address_coin").show();
            $(".desc").show();
            $(".yahei").show();
            $("#address-js-msg-span").html(e);
            $("#address-js-desc-div").html(g)
        } else {
            if (h == "qq") {
                $(".address_coin").hide();
                $("#tr_address_mobile").hide();
                $("#tr_address_qq").show();
                $(".desc").show();
                $(".yahei").show();
                $("#address-js-msg-span").html(e);
                $("#address-js-desc-div").html(g)
            } else {
                if (h == "mobile") {
                    $(".address_coin").hide();
                    $("#tr_address_qq").hide();
                    $("#tr_address_mobile").show();
                    $(".desc").show();
                    $(".yahei").show();
                    $("#address-js-msg-span").html(e);
                    $("#address-js-desc-div").html(g)
                } else {
                    $("#supriseDiv").definedDialog({
                        title: "",
                        width: 420,
                        height: 200,
                        open: true,
                        modal: true,
                        show: "normal",
                        buttons: null,
                        html: $("#js-exchange-success-div").html().replace("#js-exchange-success-div-content", g),
                        dialogClass: "dialog3",
                        closeCallBack: null
                    });
                    return
                }
            }
        }
        im("#address_dialog").dialog("open");
        setTimeout(function () {
            if (h == "qq") {
                im.user.validate.checkForm({
                    objValue: [{
                        ele: $("#address_qq"),
                        type: "text",
                        func: isNumber,
                        defaultSta: true
                    }],
                    element: $("#address_div .bigbutton"),
                    openClass: "big-btn",
                    closeClass: "calloff",
                    defaultSta: true
                })
            } else {
                if (h == "mobile") {
                    im.user.validate.checkForm({
                        objValue: [{
                            ele: $("#address_mobile"),
                            type: "text",
                            func: $.fn.checkMobile,
                            defaultSta: true
                        }],
                        element: $("#address_div .bigbutton"),
                        openClass: "big-btn",
                        closeClass: "calloff",
                        defaultSta: true
                    })
                } else {
                    im.user.validate.checkForm({
                        objValue: [{
                            ele: $("#real_name"),
                            type: "text",
                            func: chek,
                            defaultSta: true
                        }, {
                            ele: $("#address"),
                            type: "text",
                            func: chekAddress,
                            defaultSta: true
                        }, {
                            ele: $("#telephone"),
                            type: "text",
                            func: $.fn.checkMobile,
                            defaultSta: true
                        }],
                        element: $("#address_div .bigbutton"),
                        openClass: "big-btn",
                        closeClass: "calloff",
                        defaultSta: true
                    })
                }
            }
        }, 500);
        im("#save_address").off().on("click", function () {
            saveAddress($(this), h, c)
        })
    }
};
var im2Page = {
    pageSize: 6,
    divId: "0",
    ajaxFunctionName: "ajaxRequest",
    numberMuch: 2,
    listPageSize: 1,
    syncType: 1,
    pageHtml: function (a) {
        im2Page.pageInner(a)
    },
    pageInner: function (g) {
        if (im2Page.syncType == 0) {
            im2Page.ajaxFunctionName(g)
        }
        var f = true;
        if (im2Page.pageSize > im2Page.listPageSize) {
            var e = "im2Page.pageInner";
            if (im2Page.syncType == 1) {
                e = im2Page.ajaxFunctionName
            }
            var d = "<div class='paddinttop page'>";
            if (g > 1) {
                d += "<a href='javascript:" + e + "(" + (g - 1) + ");' class='prev'><em>&laquo;</em></a>"
            }
            if (g <= 1) {
                d += "<span class='prev'><em>&laquo;</em></span>"
            }
            if (im2Page.pageSize < (1 + (im2Page.numberMuch * 2) + 1 + 1)) {
                for (var c = 1; c <= im2Page.pageSize; c++) {
                    if (g == c) {
                        d += "<a class='default' href='#'><em>" + c + "</em></a>"
                    } else {
                        d += "<a href='javascript:" + e + "(" + c + ");'><em>" + c + "</em></a>"
                    }
                }
                f = false
            }
            if (f) {
                var b = 0;
                var a = 0;
                if ((g - im2Page.numberMuch) > 1) {
                    b = g - im2Page.numberMuch
                } else {
                    b = 1
                }
                if ((g + im2Page.numberMuch) < im2Page.pageSize) {
                    a = g + im2Page.numberMuch
                } else {
                    a = im2Page.pageSize
                }
                if (g <= (im2Page.numberMuch - 1)) {
                    a = a + im2Page.numberMuch + 1
                } else {
                    if ((g - 1) < im2Page.numberMuch) {
                        a = a + im2Page.numberMuch
                    }
                    if ((g - 1) == im2Page.numberMuch) {
                        a = a + (im2Page.numberMuch - 1)
                    }
                }
                if (im2Page.pageSize == g) {
                    b = b - im2Page.numberMuch
                }
                if ((im2Page.pageSize - g) < (im2Page.numberMuch)) {
                    b = b - (im2Page.pageSize - g) - 1
                }
                if ((im2Page.pageSize - g) == (im2Page.numberMuch)) {
                    b = b - (im2Page.numberMuch - 1)
                }
                if (b > 1) {
                    d += "<a href='javascript:" + e + "(1);'><em>1</em></a>"
                }
                if ((b - 1) > 1) {
                    d += "...&nbsp;"
                }
                for (var c = b; c <= a; c++) {
                    if (g == c) {
                        d += "<a class='default' href='#'><em>" + c + "</em></a>"
                    } else {
                        d += "<a href='javascript:" + e + "(" + c + ");'><em>" + c + "</em></a>"
                    }
                }
                if ((a + 1) < im2Page.pageSize) {
                    d += "...&nbsp;"
                }
                if (a < im2Page.pageSize) {
                    d += "<a href='javascript:" + e + "(" + im2Page.pageSize + ");'><em>" + im2Page.pageSize + "</em></a>"
                }
            }
            if (g < im2Page.pageSize) {
                d += "<a href='javascript:" + e + "(" + (g + 1) + ");' class='next'><em>&raquo;</em></a>"
            }
            if (g >= im2Page.pageSize) {
                d += "<span class='next'><em>&raquo;</em></span>"
            }
            d += "</div>";
            $("#" + im2Page.divId).html(d)
        } else {
            $("#" + im2Page.divId).html("")
        }
    }
};

// ----===============---------------===============
(function($){
$(function () {
  var cardDoc = window.cardDoc || {};
    $.extend($.fn, {
        personCard: function () {
            var that, _left, _top, _docTop, _docLeft, _currHeight, _currWidth, _l, _t, _class, pos;
            that = $(this);
            _docTop = $(document).scrollTop();
            _docLeft = $(document).scrollLeft();
            _currHeight = document.documentElement.clientHeight;
            _currWidth = document.documentElement.clientWidth;
            if (cardDoc[that.attr("usercard")]) {
                var data = cardDoc[that.attr("usercard")];
                $("#cardTip").html("");
                $("#cardTip").hide();
                insertTips(data);
                return
            }
            if (!parseInt(that.attr("usercard"))) {
                return
            }
            $.get(uri("URI_USER_CARD", that.attr("usercard")), function (data) {
                cardDoc[that.attr("usercard")] = data;
                if (document.getElementById("cardTip")) {
                    $("#cardTip").html("");
                    $("#cardTip").show();
                    $("#cardTip").css({
                        left: _left,
                        top: _top
                    });
                    insertTips(data)
                } else {
                    if ($("#message_dialog>div").size() == 1) {
                        sendMessageDialog.init("", loginUser.id)
                    }
                    var _html = '<div id="cardTip" class="card-mod" style="display:none;position:absolute;left:' + _left + "px;top:" + _top + 'px;z-index:99999999;"></div>';
                    $("body").append(_html);
                    insertTips(data)
                }
            });

            function insertTips(data) {
                var sSina, sQZone, sQQT, sRenren, sTaobao, sDouban, fllowMe, message, styles;
                data.snsSina ? sSina = '<a href="' + data.snsSinaUrl + '" class="pfbg minisina"></a>' : sSina = '<a href="#" class="pfbg unminisina"></a>';
                data.snsRenren ? sRenren = '<a href="' + data.snsRenrenUrl + '" class="pfbg minirr"></a>' : sRenren = '<a href="#" class="pfbg unminirr"></a>';
                data.snsQQT ? sQQT = '<a href="' + data.snsQQTUrl + '" class="pfbg minitx"></a>' : sQQT = '<a href="#" class="pfbg unminitx"></a>';
                data.snsQZone ? sQZone = '<a href="' + data.snsQZoneUrl + '" class="pfbg miniqq"></a>' : sQZone = '<a href="#" class="pfbg unminiqq"></a>';
                data.snsTaobao ? sTaobao = '<a href="' + data.snsTaobaoUrl + '" class="pfbg minitaobao"></a>' : sTaobao = '<a href="#" class="pfbg unminitaobao"></a>';
                data.snsDouban ? sDouban = '<a href="' + data.snsDoubanUrl + '" class="pfbg minidouban"></a>' : sDouban = '<a href="#" class="pfbg unminidouban"></a>';
                data.isFans && data.userId != loginUser.id ? message = '<a class="card-mail" href="#" letter_receiver = "' + data.userId + '" receiver_name="' + data.nickname + '"><span>发私信</span></a>' : message = '<a class="card-unmail" href="#" ></a>';
                data.isFollowed ? fllowMe = '<a class="psvr_login_required buttonfollow unfriend-follow png fllowMe" follow="' + data.isFollowed + '" followed="' + data.userId + '">已关注</a>' : fllowMe = '<a followed="' + data.userId + '" follow="' + data.isFollowed + '" class="btn-cardfollow fllowMe">关注</a>';
                if (data.userId == loginUser.id) {
                    fllowMe = "";
                    message = ""
                }
                var des = "",
                    types, perId = data.userId;
                if (data.description == null) {
                    des = ""
                } else {
                    des = $.fn.filStr(data.description)
                }
                types=''
                if (data.certifyType == 1) {
                    types = '<span class="ctf-icon small-ctf-g"  title="Kejian.TV认证专家"></span>'
                } else {
                    if (data.certifyType == 2) {
                        types = '<span class="ctf-icon small-ctf-star-g" title="Kejian.TV认证达人"></span>'
                    } else {
                        types = ""
                    }
                }
                var _html = ['<span class="cardArr png"></span>', '<div class="shadow-cd png">', '<div class="cardbody-cd">', '<div class="userinfo-cd cf">', '<a class="avatar-cd" href="/users/' + data.userId + '" target="_blank"><img src="' + data.avatarTiny + '" /></a>', '<div class="profile-cd">', '<p class="name-cd"><a class="username-cd" href="/users/' + data.userId + '"  target="_blank" title="' + data.nickname + '">' + $.fn.fixStr(data.nickname, 24, "...") + "</a>" + types + "</p>", '<p class="boardprofile-cd">', '<a href="/follow/' + data.userId + '/1"  target="_blank"><em>' + data.followCount + "</em><br /><span>关注</span></a>", '<a href="/fans/' + data.userId + '/1"  target="_blank"><em>' + data.fansCount + "</em><br /><span>粉丝</span></a>", '<a href="' + uri("URI_BOARDS_LIST", data.userId) + '"  target="_blank"><em>' + data.boardCount + "</em><br /><span>图格</span></a>", "</p>", "</div>", "</div>", '<div class="userprofile-cd">' + des + "</div>", '<div class="cardbottom">', '<div class="platform">' + sSina + sRenren + sQQT + sQZone + sTaobao + sDouban + "</div>", '<div class="cardfollow">' + fllowMe + message + "</div>", "</div>", "</div>", "</div>"].join("");
                $("#cardTip").html(_html);
                _l = that.offset().left - ($("body").width() - that.width() - that.offset().left);
                _t = (that.offset().top - $(document).scrollTop()) - ($(document).scrollTop() + document.documentElement.clientHeight - that.offset().top);
                if (_l > 0 && _t > 0) {
                    pos = "leftUp";
                    _left = that.offset().left - 250;
                    _top = that.offset().top - $("#cardTip").height();
                    _class = "cardArr-gdown"
                }
                if (_l > 0 && _t < 0) {
                    pos = "leftDown";
                    _left = that.offset().left - 250;
                    _top = that.offset().top + that.height() + 8;
                    _class = "cardArr-up"
                }
                if (_l < 0 && _t > 0) {
                    pos = "rightUp";
                    _left = that.offset().left;
                    _top = that.offset().top - $("#cardTip").height();
                    _class = "cardArr-gdown"
                }
                if (_l < 0 && _t < 0) {
                    pos = "rightDown";
                    _left = that.offset().left;
                    _top = that.offset().top + that.height() + 8;
                    _class = "cardArr-up"
                }
                $("#cardTip").show().css({
                    left: _left,
                    top: _top
                }).children(".cardArr").addClass(_class);
                if (pos == "leftUp" || pos == "leftDown") {
                    $("#cardTip").children(".cardArr").css({
                        left: "260px"
                    })
                }
                $("#cardTip .card-mail").on("click", function () {
                    var loginUserId = loginUser.id;
                    if (!loginUserId) {
                        var _path = window.location.pathname;
                        var flag = consts("REGIST_TYPE_STATION_GET");
                        window.location.href = "/login?flag=" + flag + "&p=" + _path;
                        return
                    }
                    var toUserId = $(this).attr("letter_receiver");
                    var toUserName = $(this).attr("receiver_name");
                    sendMessageDialog.otherOpenMessage("#message_" + toUserId, loginUserId, "" + toUserId, "" + toUserName)
                });
                $("#cardTip .fllowMe").off().on("click", function () {
                    var that = this;
                    var loginUserId = loginUser.id;
                    if (!loginUserId) {
                        var _path = window.location.pathname;
                        var flag = consts("REGIST_TYPE_STATION_GET");
                        window.location.href = "/login?flag=" + flag + "&p=" + _path;
                        return
                    }
                    var follow = parseInt($(this).attr("follow"));
                    var followed = $(this).attr("followed");
                    if (follow) {
                        postUrl = uri("URI_FANS_UNFOLLOW_USER", followed)
                    } else {
                        postUrl = uri("URI_FANS_ADD_FOLLOW_USER", followed)
                    }
                    if (follow) {
                        $.ajax({
                            type: "POST",
                            url: postUrl,
                            dataType: "json",
                            success: function (data) {
                                $(that).text("关注").removeClass().addClass("btn-cardfollow fllowMe").attr("follow", "0");
                                cardDoc[perId].isFollowed = 0
                            }
                        })
                    } else {
                        $.ajax({
                            type: "POST",
                            url: postUrl,
                            dataType: "json",
                            success: function (data) {
                                $(that).text("已关注").removeClass().addClass("psvr_login_required buttonfollow unfriend-follow png fllowMe").attr("follow", "1");
                                cardDoc[perId].isFollowed = 1
                            }
                        })
                    }
                })
            }
        }
    });
    var hoverTimer = null,
        outTimer = null;
    $("a[havecard|=1]").on("mouseenter", function () {
        clearTimeout(outTimer);
        var that = $(this);
        hoverTimer = setTimeout(function () {
            that.personCard()
        }, 300)
    }).on("mouseleave", function () {
        var that = $(this);
        clearTimeout(hoverTimer);
        outTimer = setTimeout(function () {
            if (that.attr("usercard")) {
                $("#cardTip").hide()
            }
        }, 300)
    });
    $("img[havecard|=1]").on("mouseenter", function () {
        clearTimeout(outTimer);
        var that = $(this);
        hoverTimer = setTimeout(function () {
            that.personCard()
        }, 300)
    }).on("mouseleave", function () {
        var that = $(this);
        clearTimeout(hoverTimer);
        outTimer = setTimeout(function () {
            if (that.attr("usercard")) {
                $("#cardTip").hide()
            }
        }, 300)
    });
    $("#cardTip").on("mouseenter", function () {
        clearTimeout(outTimer);
        $("#cardTip").show()
    }).on("mouseleave", function () {
        $("#cardTip").hide()
    });
    if (typeof loginUser != "undefined" && loginUser.id) {
        setTimeout(function () {
            $.fn.imTipRun()
        }, 2000);
        $("#js-mesg .close").on("click", function () {
            $.ajax({
                type: "GET",
                url: im20uri("URI_NOTIFICATION_CLEAR_ALL_UNREAD"),
                dataType: "text",
                success: function (data) {
                    if ( !! data) {
                        $("#js-mesg").hide();
                        $("#js-mesg p").hide();
                        im.zm.messageShow = !1
                    }
                }
            })
        })
    }
    //todo
    /*
    $(".picUrl").off().on("click", function () {
      
        if ((navigator.userAgent.indexOf("MSIE") > 0 && parseInt(jQuery.browser.version) < 7) || navigator.userAgent.toLowerCase().match(/iPad/i) == "ipad") {
            return true
        } else {
            var thisParent = $(this).offsetParent().offsetParent();
            if (thisParent.find(".small-label-gift").length > 0) {
                return true
            } else {
                im.zm.detailPic(thisParent.attr("dataid"), thisParent.attr("userid"));
                try {
                    _gaq.push(["_trackPageview", "/ajax/" + uri("URI_SHARE_AJAX", boardPicId)])
                } catch (e) {
                    return false
                }
                return false
            }
        }
    });
    */
    var cursorPosition = {
        get: function (textarea) {
            var rangeData = {
                text: "",
                start: 0,
                end: 0
            };
            if (textarea.setSelectionRange) {
                textarea.focus();
                rangeData.start = textarea.selectionStart;
                rangeData.end = textarea.selectionEnd;
                rangeData.text = (rangeData.start != rangeData.end) ? textarea.value.substring(rangeData.start, rangeData.end) : ""
            } else {
                if (document.selection) {
                    textarea.focus();
                    var i, oS = document.selection.createRange(),
                        oR = document.body.createTextRange();
                    oR.moveToElementText(textarea);
                    rangeData.text = oS.text;
                    rangeData.bookmark = oS.getBookmark();
                    for (i = 0; oR.compareEndPoints("StartToStart", oS) < 0 && oS.moveStart("character", - 1) !== 0; i++) {
                        if (textarea.value.charAt(i) == "/r") {
                            i++
                        }
                    }
                    rangeData.start = i;
                    rangeData.end = rangeData.text.length + rangeData.start
                }
            }
            return rangeData
        },
        set: function (textarea, rangeData) {
            var oR, start, end;
            if (!rangeData) {
                alert("You must get cursor position first.")
            }
            textarea.focus();
            if (textarea.setSelectionRange) {
                textarea.setSelectionRange(rangeData.start, rangeData.end)
            } else {
                if (textarea.createTextRange) {
                    oR = textarea.createTextRange();
                    if (textarea.value.length === rangeData.start) {
                        oR.collapse(false);
                        oR.select()
                    } else {
                        oR.moveToBookmark(rangeData.bookmark);
                        oR.select()
                    }
                }
            }
        },
        add: function (textarea, rangeData, text) {
            var oValue, nValue, oR, sR, nStart, nEnd, st;
            this.set(textarea, rangeData);
            if (textarea.setSelectionRange) {
                oValue = textarea.value;
                nValue = oValue.substring(0, rangeData.start) + text + oValue.substring(rangeData.end);
                nStart = nEnd = rangeData.start + text.length;
                st = textarea.scrollTop;
                textarea.value = nValue;
                if (textarea.scrollTop != st) {
                    textarea.scrollTop = st
                }
                textarea.setSelectionRange(nStart, nEnd)
            } else {
                if (textarea.createTextRange) {
                    sR = document.selection.createRange();
                    sR.text = text;
                    sR.setEndPoint("StartToEnd", sR);
                    sR.select()
                }
            }
        },
        insertPrice: function (textarea, rangeData, text) {
            textarea.focus();
            var start = rangeData.start + 1;
            var end = rangeData.start + 5;
            if (textarea.setSelectionRange) {
                textarea.setSelectionRange(start, end)
            } else {
                var range = document.body.createTextRange();
                range.moveToElementText(textarea);
                range.moveStart("character", start);
                range.moveEnd("character", - (textarea.value.length - start - 4));
                range.select()
            }
        }
    };
    var pos;
    $("#insertTheme1").on("click", function () {
        var _t = this;
        if ($(_t).hasClass("off")) {
            return
        }
        var tag = "";
        pos = cursorPosition.get(document.getElementById("shareDialogTitle"));
        $.ajax({
            type: "GET",
            url: uri("URI_SUBJECT_WEEK_TAG_AJAX"),
            contentType: "text/plain; charset=utf-8",
            dataType: "text",
            success: function (data) {
                var datas = eval("(" + data + ")");
                if (!datas.expired) {
                    cursorPosition.add(document.getElementById("shareDialogTitle"), pos, input = datas.tag)
                }
                $(_t).addClass("off")
            }
        })
    });
    $("#insertprice1").on("click", function () {
        var obj = document.getElementById("shareDialogTitle");
        var pos = cursorPosition.get(obj);
        cursorPosition.add(obj, pos, input = "￥插入价格");
        cursorPosition.insertPrice(obj, pos, "￥插入价格");
        $.fn.countNumber("#shareDialogTitle", {
            scroll: false,
            numberid: 140,
            textareaid: "#shareDialogTitleTotal",
            effactOn: false
        })
    });
    $("#insertprice3").on("click", function () {
        var obj = document.getElementById("editTitle");
        var pos = cursorPosition.get(obj);
        cursorPosition.add(obj, pos, input = "￥插入价格");
        cursorPosition.insertPrice(obj, pos, "￥插入价格")
    });
    $("#insertprice4").on("click", function () {
        var obj = document.getElementById("reshare-ta");
        var pos = cursorPosition.get(obj);
        cursorPosition.add(obj, pos, input = "￥插入价格");
        cursorPosition.insertPrice(obj, pos, "￥插入价格")
    });
    $(document).keydown(function (e) {
        if (e.keyCode == 9 && e.target.nodeName == "A") {
            return false
        }
    });
    $(window).scroll(function () {
        if (im.zm.delayImg) {
            im.zm.delayImg.init(document)
        }
        fnfooter();
        $(document).scrollTop() > 1000 ? $("#backtotop").show().off().on("click", function () {
            $("body,html").animate({
                scrollTop: 0
            }, 500)
        }) : $("#backtotop").hide()
    });
    window.onload = fnfooter;

    function fnfooter() {
        var footObj = document.documentElement || document.body;
        if (document.documentElement.clientHeight < document.body.offsetHeight) {
            $("#footer").removeClass("fixedfooter")
        } else {
            $("#footer").addClass("fixedfooter")
        }
    }
    var reTimers = null;
    $(window).resize(function () {
        if (reTimers !== null) {
            return
        }
        setTimeout(function () {
            reTimers = null;
            fnfooter()
        }, 300)
    })
});
})(jQuery);
// ===================================================================
var url = window.location.search;
var myurl = "?utm_source=wangba";

// im.fn.imSearch("#jquery-search", "搜索...");
// im(function () {
//     var a = 0;
//     if (loginUser) {
//         a = loginUser.id
//     }
//     editShare.init(a);
//     reshareDialog.init()
// });
// if ($("#unlogin-alterbartop").length == 1) {
//     setTimeout(function () {
//         $("#unlogin-alterbartop").slideDown()
//     }, 2000)
// }

function showFollowTip() {
    im.window.posTips($("#menu-my-followed"), "欢迎来到Kejian.TV网，你关注和发表的内容都会显示在这里", "up", "left", function () {
        $.cookie(loginUser.id + "_showFollowTip", null, {
            path: "/"
        });
        showHotTip()
    }, "tipspos-follow")
}
function showHotTip() {
    im.window.posTips($("#menu-hot"), "这里你可以发现并关注更多内容", "up", "middle", function () {
        $.cookie(loginUser.id + "_showHotTip", null, {
            path: "/"
        });
        showShareOrBoardTip()
    }, "tipspos-all")
}
function showShareOrBoardTip() {
    im.window.posTips($("#addShareButton"), "添加你的第一个收集，或者创建一个新图格", "up", "right", function () {
        $.cookie(loginUser.id + "_showShareOrBoardTip", null, {
            path: "/"
        });
        var b = window.location.pathname;
        var a = /^\/users\/\d+$/;
        if (a.exec(b)) {
            showFollowBtnTip()
        }
        a = /^\/share\/\d+$/;
        if (a.exec(b)) {
            showTerminalPageTip()
        }
    }, "tipspos-tuge")
}
// if (loginUser && $.cookie(loginUser.id + "_showFollowTip") == 1) {
//     showFollowTip()
// }
// if (loginUser && $.cookie(loginUser.id + "_showFollowTip") != 1 && $.cookie(loginUser.id + "_showHotTip") == 1) {
//     showHotTip()
// }
// if (loginUser && $.cookie(loginUser.id + "_showHotTip") != 1 && $.cookie(loginUser.id + "_showShareOrBoardTip") == 1) {
//     showShareOrBoardTip()
// }
// if (loginUser && $.cookie("_v" + loginUser.id) == null) {
//     $.cookie("_v" + loginUser.id, 1, {
//         expires: 1
//     });
//     if (Math.random() > 0.4) {
//         $.ajax({
//             url: "/vest/mei",
//             type: "GET",
//             dataType: "text",
//             success: function (a) {}
//         })
//     }
// }

})(jQuery);
